

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Dec 24 01:29:01 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Generated 25/07/2024 GMT
    46                           ; 
    47                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4520 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000FE0                     bsr             equ	4064
    80   000FE9                     fsr0            equ	4073
    81   000FEA                     fsr0h           equ	4074
    82   000FE9                     fsr0l           equ	4073
    83   000FE1                     fsr1            equ	4065
    84   000FE2                     fsr1h           equ	4066
    85   000FE1                     fsr1l           equ	4065
    86   000FD9                     fsr2            equ	4057
    87   000FDA                     fsr2h           equ	4058
    88   000FD9                     fsr2l           equ	4057
    89   000FEF                     indf0           equ	4079
    90   000FE7                     indf1           equ	4071
    91   000FDF                     indf2           equ	4063
    92   000FF2                     intcon          equ	4082
    93   000000                     nvmcon          equ	0
    94   000FF9                     pcl             equ	4089
    95   000FFA                     pclath          equ	4090
    96   000FFB                     pclatu          equ	4091
    97   000FEB                     plusw0          equ	4075
    98   000FE3                     plusw1          equ	4067
    99   000FDB                     plusw2          equ	4059
   100   000FED                     postdec0        equ	4077
   101   000FE5                     postdec1        equ	4069
   102   000FDD                     postdec2        equ	4061
   103   000FEE                     postinc0        equ	4078
   104   000FE6                     postinc1        equ	4070
   105   000FDE                     postinc2        equ	4062
   106   000FEC                     preinc0         equ	4076
   107   000FE4                     preinc1         equ	4068
   108   000FDC                     preinc2         equ	4060
   109   000FF3                     prod            equ	4083
   110   000FF4                     prodh           equ	4084
   111   000FF3                     prodl           equ	4083
   112   000FD8                     status          equ	4056
   113   000FF5                     tablat          equ	4085
   114   000FF6                     tblptr          equ	4086
   115   000FF7                     tblptrh         equ	4087
   116   000FF6                     tblptrl         equ	4086
   117   000FF8                     tblptru         equ	4088
   118   000FFD                     tosl            equ	4093
   119   000FE8                     wreg            equ	4072
   120   000F80                     PORTA           equ	3968	;# 
   121   000F81                     PORTB           equ	3969	;# 
   122   000F82                     PORTC           equ	3970	;# 
   123   000F83                     PORTD           equ	3971	;# 
   124   000F84                     PORTE           equ	3972	;# 
   125   000F89                     LATA            equ	3977	;# 
   126   000F8A                     LATB            equ	3978	;# 
   127   000F8B                     LATC            equ	3979	;# 
   128   000F8C                     LATD            equ	3980	;# 
   129   000F8D                     LATE            equ	3981	;# 
   130   000F92                     TRISA           equ	3986	;# 
   131   000F92                     DDRA            equ	3986	;# 
   132   000F93                     TRISB           equ	3987	;# 
   133   000F93                     DDRB            equ	3987	;# 
   134   000F94                     TRISC           equ	3988	;# 
   135   000F94                     DDRC            equ	3988	;# 
   136   000F95                     TRISD           equ	3989	;# 
   137   000F95                     DDRD            equ	3989	;# 
   138   000F96                     TRISE           equ	3990	;# 
   139   000F96                     DDRE            equ	3990	;# 
   140   000F9B                     OSCTUNE         equ	3995	;# 
   141   000F9D                     PIE1            equ	3997	;# 
   142   000F9E                     PIR1            equ	3998	;# 
   143   000F9F                     IPR1            equ	3999	;# 
   144   000FA0                     PIE2            equ	4000	;# 
   145   000FA1                     PIR2            equ	4001	;# 
   146   000FA2                     IPR2            equ	4002	;# 
   147   000FA6                     EECON1          equ	4006	;# 
   148   000FA7                     EECON2          equ	4007	;# 
   149   000FA8                     EEDATA          equ	4008	;# 
   150   000FA9                     EEADR           equ	4009	;# 
   151   000FAB                     RCSTA           equ	4011	;# 
   152   000FAB                     RCSTA1          equ	4011	;# 
   153   000FAC                     TXSTA           equ	4012	;# 
   154   000FAC                     TXSTA1          equ	4012	;# 
   155   000FAD                     TXREG           equ	4013	;# 
   156   000FAD                     TXREG1          equ	4013	;# 
   157   000FAE                     RCREG           equ	4014	;# 
   158   000FAE                     RCREG1          equ	4014	;# 
   159   000FAF                     SPBRG           equ	4015	;# 
   160   000FAF                     SPBRG1          equ	4015	;# 
   161   000FB0                     SPBRGH          equ	4016	;# 
   162   000FB1                     T3CON           equ	4017	;# 
   163   000FB2                     TMR3            equ	4018	;# 
   164   000FB2                     TMR3L           equ	4018	;# 
   165   000FB3                     TMR3H           equ	4019	;# 
   166   000FB4                     CMCON           equ	4020	;# 
   167   000FB5                     CVRCON          equ	4021	;# 
   168   000FB6                     ECCP1AS         equ	4022	;# 
   169   000FB6                     ECCPAS          equ	4022	;# 
   170   000FB7                     PWM1CON         equ	4023	;# 
   171   000FB7                     ECCP1DEL        equ	4023	;# 
   172   000FB8                     BAUDCON         equ	4024	;# 
   173   000FB8                     BAUDCTL         equ	4024	;# 
   174   000FBA                     CCP2CON         equ	4026	;# 
   175   000FBB                     CCPR2           equ	4027	;# 
   176   000FBB                     CCPR2L          equ	4027	;# 
   177   000FBC                     CCPR2H          equ	4028	;# 
   178   000FBD                     CCP1CON         equ	4029	;# 
   179   000FBE                     CCPR1           equ	4030	;# 
   180   000FBE                     CCPR1L          equ	4030	;# 
   181   000FBF                     CCPR1H          equ	4031	;# 
   182   000FC0                     ADCON2          equ	4032	;# 
   183   000FC1                     ADCON1          equ	4033	;# 
   184   000FC2                     ADCON0          equ	4034	;# 
   185   000FC3                     ADRES           equ	4035	;# 
   186   000FC3                     ADRESL          equ	4035	;# 
   187   000FC4                     ADRESH          equ	4036	;# 
   188   000FC5                     SSPCON2         equ	4037	;# 
   189   000FC6                     SSPCON1         equ	4038	;# 
   190   000FC7                     SSPSTAT         equ	4039	;# 
   191   000FC8                     SSPADD          equ	4040	;# 
   192   000FC9                     SSPBUF          equ	4041	;# 
   193   000FCA                     T2CON           equ	4042	;# 
   194   000FCB                     PR2             equ	4043	;# 
   195   000FCB                     MEMCON          equ	4043	;# 
   196   000FCC                     TMR2            equ	4044	;# 
   197   000FCD                     T1CON           equ	4045	;# 
   198   000FCE                     TMR1            equ	4046	;# 
   199   000FCE                     TMR1L           equ	4046	;# 
   200   000FCF                     TMR1H           equ	4047	;# 
   201   000FD0                     RCON            equ	4048	;# 
   202   000FD1                     WDTCON          equ	4049	;# 
   203   000FD2                     HLVDCON         equ	4050	;# 
   204   000FD2                     LVDCON          equ	4050	;# 
   205   000FD3                     OSCCON          equ	4051	;# 
   206   000FD5                     T0CON           equ	4053	;# 
   207   000FD6                     TMR0            equ	4054	;# 
   208   000FD6                     TMR0L           equ	4054	;# 
   209   000FD7                     TMR0H           equ	4055	;# 
   210   000FD8                     STATUS          equ	4056	;# 
   211   000FD9                     FSR2            equ	4057	;# 
   212   000FD9                     FSR2L           equ	4057	;# 
   213   000FDA                     FSR2H           equ	4058	;# 
   214   000FDB                     PLUSW2          equ	4059	;# 
   215   000FDC                     PREINC2         equ	4060	;# 
   216   000FDD                     POSTDEC2        equ	4061	;# 
   217   000FDE                     POSTINC2        equ	4062	;# 
   218   000FDF                     INDF2           equ	4063	;# 
   219   000FE0                     BSR             equ	4064	;# 
   220   000FE1                     FSR1            equ	4065	;# 
   221   000FE1                     FSR1L           equ	4065	;# 
   222   000FE2                     FSR1H           equ	4066	;# 
   223   000FE3                     PLUSW1          equ	4067	;# 
   224   000FE4                     PREINC1         equ	4068	;# 
   225   000FE5                     POSTDEC1        equ	4069	;# 
   226   000FE6                     POSTINC1        equ	4070	;# 
   227   000FE7                     INDF1           equ	4071	;# 
   228   000FE8                     WREG            equ	4072	;# 
   229   000FE9                     FSR0            equ	4073	;# 
   230   000FE9                     FSR0L           equ	4073	;# 
   231   000FEA                     FSR0H           equ	4074	;# 
   232   000FEB                     PLUSW0          equ	4075	;# 
   233   000FEC                     PREINC0         equ	4076	;# 
   234   000FED                     POSTDEC0        equ	4077	;# 
   235   000FEE                     POSTINC0        equ	4078	;# 
   236   000FEF                     INDF0           equ	4079	;# 
   237   000FF0                     INTCON3         equ	4080	;# 
   238   000FF1                     INTCON2         equ	4081	;# 
   239   000FF2                     INTCON          equ	4082	;# 
   240   000FF3                     PROD            equ	4083	;# 
   241   000FF3                     PRODL           equ	4083	;# 
   242   000FF4                     PRODH           equ	4084	;# 
   243   000FF5                     TABLAT          equ	4085	;# 
   244   000FF6                     TBLPTR          equ	4086	;# 
   245   000FF6                     TBLPTRL         equ	4086	;# 
   246   000FF7                     TBLPTRH         equ	4087	;# 
   247   000FF8                     TBLPTRU         equ	4088	;# 
   248   000FF9                     PCLAT           equ	4089	;# 
   249   000FF9                     PC              equ	4089	;# 
   250   000FF9                     PCL             equ	4089	;# 
   251   000FFA                     PCLATH          equ	4090	;# 
   252   000FFB                     PCLATU          equ	4091	;# 
   253   000FFC                     STKPTR          equ	4092	;# 
   254   000FFD                     TOS             equ	4093	;# 
   255   000FFD                     TOSL            equ	4093	;# 
   256   000FFE                     TOSH            equ	4094	;# 
   257   000FFF                     TOSU            equ	4095	;# 
   258   000F80                     PORTA           equ	3968	;# 
   259   000F81                     PORTB           equ	3969	;# 
   260   000F82                     PORTC           equ	3970	;# 
   261   000F83                     PORTD           equ	3971	;# 
   262   000F84                     PORTE           equ	3972	;# 
   263   000F89                     LATA            equ	3977	;# 
   264   000F8A                     LATB            equ	3978	;# 
   265   000F8B                     LATC            equ	3979	;# 
   266   000F8C                     LATD            equ	3980	;# 
   267   000F8D                     LATE            equ	3981	;# 
   268   000F92                     TRISA           equ	3986	;# 
   269   000F92                     DDRA            equ	3986	;# 
   270   000F93                     TRISB           equ	3987	;# 
   271   000F93                     DDRB            equ	3987	;# 
   272   000F94                     TRISC           equ	3988	;# 
   273   000F94                     DDRC            equ	3988	;# 
   274   000F95                     TRISD           equ	3989	;# 
   275   000F95                     DDRD            equ	3989	;# 
   276   000F96                     TRISE           equ	3990	;# 
   277   000F96                     DDRE            equ	3990	;# 
   278   000F9B                     OSCTUNE         equ	3995	;# 
   279   000F9D                     PIE1            equ	3997	;# 
   280   000F9E                     PIR1            equ	3998	;# 
   281   000F9F                     IPR1            equ	3999	;# 
   282   000FA0                     PIE2            equ	4000	;# 
   283   000FA1                     PIR2            equ	4001	;# 
   284   000FA2                     IPR2            equ	4002	;# 
   285   000FA6                     EECON1          equ	4006	;# 
   286   000FA7                     EECON2          equ	4007	;# 
   287   000FA8                     EEDATA          equ	4008	;# 
   288   000FA9                     EEADR           equ	4009	;# 
   289   000FAB                     RCSTA           equ	4011	;# 
   290   000FAB                     RCSTA1          equ	4011	;# 
   291   000FAC                     TXSTA           equ	4012	;# 
   292   000FAC                     TXSTA1          equ	4012	;# 
   293   000FAD                     TXREG           equ	4013	;# 
   294   000FAD                     TXREG1          equ	4013	;# 
   295   000FAE                     RCREG           equ	4014	;# 
   296   000FAE                     RCREG1          equ	4014	;# 
   297   000FAF                     SPBRG           equ	4015	;# 
   298   000FAF                     SPBRG1          equ	4015	;# 
   299   000FB0                     SPBRGH          equ	4016	;# 
   300   000FB1                     T3CON           equ	4017	;# 
   301   000FB2                     TMR3            equ	4018	;# 
   302   000FB2                     TMR3L           equ	4018	;# 
   303   000FB3                     TMR3H           equ	4019	;# 
   304   000FB4                     CMCON           equ	4020	;# 
   305   000FB5                     CVRCON          equ	4021	;# 
   306   000FB6                     ECCP1AS         equ	4022	;# 
   307   000FB6                     ECCPAS          equ	4022	;# 
   308   000FB7                     PWM1CON         equ	4023	;# 
   309   000FB7                     ECCP1DEL        equ	4023	;# 
   310   000FB8                     BAUDCON         equ	4024	;# 
   311   000FB8                     BAUDCTL         equ	4024	;# 
   312   000FBA                     CCP2CON         equ	4026	;# 
   313   000FBB                     CCPR2           equ	4027	;# 
   314   000FBB                     CCPR2L          equ	4027	;# 
   315   000FBC                     CCPR2H          equ	4028	;# 
   316   000FBD                     CCP1CON         equ	4029	;# 
   317   000FBE                     CCPR1           equ	4030	;# 
   318   000FBE                     CCPR1L          equ	4030	;# 
   319   000FBF                     CCPR1H          equ	4031	;# 
   320   000FC0                     ADCON2          equ	4032	;# 
   321   000FC1                     ADCON1          equ	4033	;# 
   322   000FC2                     ADCON0          equ	4034	;# 
   323   000FC3                     ADRES           equ	4035	;# 
   324   000FC3                     ADRESL          equ	4035	;# 
   325   000FC4                     ADRESH          equ	4036	;# 
   326   000FC5                     SSPCON2         equ	4037	;# 
   327   000FC6                     SSPCON1         equ	4038	;# 
   328   000FC7                     SSPSTAT         equ	4039	;# 
   329   000FC8                     SSPADD          equ	4040	;# 
   330   000FC9                     SSPBUF          equ	4041	;# 
   331   000FCA                     T2CON           equ	4042	;# 
   332   000FCB                     PR2             equ	4043	;# 
   333   000FCB                     MEMCON          equ	4043	;# 
   334   000FCC                     TMR2            equ	4044	;# 
   335   000FCD                     T1CON           equ	4045	;# 
   336   000FCE                     TMR1            equ	4046	;# 
   337   000FCE                     TMR1L           equ	4046	;# 
   338   000FCF                     TMR1H           equ	4047	;# 
   339   000FD0                     RCON            equ	4048	;# 
   340   000FD1                     WDTCON          equ	4049	;# 
   341   000FD2                     HLVDCON         equ	4050	;# 
   342   000FD2                     LVDCON          equ	4050	;# 
   343   000FD3                     OSCCON          equ	4051	;# 
   344   000FD5                     T0CON           equ	4053	;# 
   345   000FD6                     TMR0            equ	4054	;# 
   346   000FD6                     TMR0L           equ	4054	;# 
   347   000FD7                     TMR0H           equ	4055	;# 
   348   000FD8                     STATUS          equ	4056	;# 
   349   000FD9                     FSR2            equ	4057	;# 
   350   000FD9                     FSR2L           equ	4057	;# 
   351   000FDA                     FSR2H           equ	4058	;# 
   352   000FDB                     PLUSW2          equ	4059	;# 
   353   000FDC                     PREINC2         equ	4060	;# 
   354   000FDD                     POSTDEC2        equ	4061	;# 
   355   000FDE                     POSTINC2        equ	4062	;# 
   356   000FDF                     INDF2           equ	4063	;# 
   357   000FE0                     BSR             equ	4064	;# 
   358   000FE1                     FSR1            equ	4065	;# 
   359   000FE1                     FSR1L           equ	4065	;# 
   360   000FE2                     FSR1H           equ	4066	;# 
   361   000FE3                     PLUSW1          equ	4067	;# 
   362   000FE4                     PREINC1         equ	4068	;# 
   363   000FE5                     POSTDEC1        equ	4069	;# 
   364   000FE6                     POSTINC1        equ	4070	;# 
   365   000FE7                     INDF1           equ	4071	;# 
   366   000FE8                     WREG            equ	4072	;# 
   367   000FE9                     FSR0            equ	4073	;# 
   368   000FE9                     FSR0L           equ	4073	;# 
   369   000FEA                     FSR0H           equ	4074	;# 
   370   000FEB                     PLUSW0          equ	4075	;# 
   371   000FEC                     PREINC0         equ	4076	;# 
   372   000FED                     POSTDEC0        equ	4077	;# 
   373   000FEE                     POSTINC0        equ	4078	;# 
   374   000FEF                     INDF0           equ	4079	;# 
   375   000FF0                     INTCON3         equ	4080	;# 
   376   000FF1                     INTCON2         equ	4081	;# 
   377   000FF2                     INTCON          equ	4082	;# 
   378   000FF3                     PROD            equ	4083	;# 
   379   000FF3                     PRODL           equ	4083	;# 
   380   000FF4                     PRODH           equ	4084	;# 
   381   000FF5                     TABLAT          equ	4085	;# 
   382   000FF6                     TBLPTR          equ	4086	;# 
   383   000FF6                     TBLPTRL         equ	4086	;# 
   384   000FF7                     TBLPTRH         equ	4087	;# 
   385   000FF8                     TBLPTRU         equ	4088	;# 
   386   000FF9                     PCLAT           equ	4089	;# 
   387   000FF9                     PC              equ	4089	;# 
   388   000FF9                     PCL             equ	4089	;# 
   389   000FFA                     PCLATH          equ	4090	;# 
   390   000FFB                     PCLATU          equ	4091	;# 
   391   000FFC                     STKPTR          equ	4092	;# 
   392   000FFD                     TOS             equ	4093	;# 
   393   000FFD                     TOSL            equ	4093	;# 
   394   000FFE                     TOSH            equ	4094	;# 
   395   000FFF                     TOSU            equ	4095	;# 
   396   000F80                     PORTA           equ	3968	;# 
   397   000F81                     PORTB           equ	3969	;# 
   398   000F82                     PORTC           equ	3970	;# 
   399   000F83                     PORTD           equ	3971	;# 
   400   000F84                     PORTE           equ	3972	;# 
   401   000F89                     LATA            equ	3977	;# 
   402   000F8A                     LATB            equ	3978	;# 
   403   000F8B                     LATC            equ	3979	;# 
   404   000F8C                     LATD            equ	3980	;# 
   405   000F8D                     LATE            equ	3981	;# 
   406   000F92                     TRISA           equ	3986	;# 
   407   000F92                     DDRA            equ	3986	;# 
   408   000F93                     TRISB           equ	3987	;# 
   409   000F93                     DDRB            equ	3987	;# 
   410   000F94                     TRISC           equ	3988	;# 
   411   000F94                     DDRC            equ	3988	;# 
   412   000F95                     TRISD           equ	3989	;# 
   413   000F95                     DDRD            equ	3989	;# 
   414   000F96                     TRISE           equ	3990	;# 
   415   000F96                     DDRE            equ	3990	;# 
   416   000F9B                     OSCTUNE         equ	3995	;# 
   417   000F9D                     PIE1            equ	3997	;# 
   418   000F9E                     PIR1            equ	3998	;# 
   419   000F9F                     IPR1            equ	3999	;# 
   420   000FA0                     PIE2            equ	4000	;# 
   421   000FA1                     PIR2            equ	4001	;# 
   422   000FA2                     IPR2            equ	4002	;# 
   423   000FA6                     EECON1          equ	4006	;# 
   424   000FA7                     EECON2          equ	4007	;# 
   425   000FA8                     EEDATA          equ	4008	;# 
   426   000FA9                     EEADR           equ	4009	;# 
   427   000FAB                     RCSTA           equ	4011	;# 
   428   000FAB                     RCSTA1          equ	4011	;# 
   429   000FAC                     TXSTA           equ	4012	;# 
   430   000FAC                     TXSTA1          equ	4012	;# 
   431   000FAD                     TXREG           equ	4013	;# 
   432   000FAD                     TXREG1          equ	4013	;# 
   433   000FAE                     RCREG           equ	4014	;# 
   434   000FAE                     RCREG1          equ	4014	;# 
   435   000FAF                     SPBRG           equ	4015	;# 
   436   000FAF                     SPBRG1          equ	4015	;# 
   437   000FB0                     SPBRGH          equ	4016	;# 
   438   000FB1                     T3CON           equ	4017	;# 
   439   000FB2                     TMR3            equ	4018	;# 
   440   000FB2                     TMR3L           equ	4018	;# 
   441   000FB3                     TMR3H           equ	4019	;# 
   442   000FB4                     CMCON           equ	4020	;# 
   443   000FB5                     CVRCON          equ	4021	;# 
   444   000FB6                     ECCP1AS         equ	4022	;# 
   445   000FB6                     ECCPAS          equ	4022	;# 
   446   000FB7                     PWM1CON         equ	4023	;# 
   447   000FB7                     ECCP1DEL        equ	4023	;# 
   448   000FB8                     BAUDCON         equ	4024	;# 
   449   000FB8                     BAUDCTL         equ	4024	;# 
   450   000FBA                     CCP2CON         equ	4026	;# 
   451   000FBB                     CCPR2           equ	4027	;# 
   452   000FBB                     CCPR2L          equ	4027	;# 
   453   000FBC                     CCPR2H          equ	4028	;# 
   454   000FBD                     CCP1CON         equ	4029	;# 
   455   000FBE                     CCPR1           equ	4030	;# 
   456   000FBE                     CCPR1L          equ	4030	;# 
   457   000FBF                     CCPR1H          equ	4031	;# 
   458   000FC0                     ADCON2          equ	4032	;# 
   459   000FC1                     ADCON1          equ	4033	;# 
   460   000FC2                     ADCON0          equ	4034	;# 
   461   000FC3                     ADRES           equ	4035	;# 
   462   000FC3                     ADRESL          equ	4035	;# 
   463   000FC4                     ADRESH          equ	4036	;# 
   464   000FC5                     SSPCON2         equ	4037	;# 
   465   000FC6                     SSPCON1         equ	4038	;# 
   466   000FC7                     SSPSTAT         equ	4039	;# 
   467   000FC8                     SSPADD          equ	4040	;# 
   468   000FC9                     SSPBUF          equ	4041	;# 
   469   000FCA                     T2CON           equ	4042	;# 
   470   000FCB                     PR2             equ	4043	;# 
   471   000FCB                     MEMCON          equ	4043	;# 
   472   000FCC                     TMR2            equ	4044	;# 
   473   000FCD                     T1CON           equ	4045	;# 
   474   000FCE                     TMR1            equ	4046	;# 
   475   000FCE                     TMR1L           equ	4046	;# 
   476   000FCF                     TMR1H           equ	4047	;# 
   477   000FD0                     RCON            equ	4048	;# 
   478   000FD1                     WDTCON          equ	4049	;# 
   479   000FD2                     HLVDCON         equ	4050	;# 
   480   000FD2                     LVDCON          equ	4050	;# 
   481   000FD3                     OSCCON          equ	4051	;# 
   482   000FD5                     T0CON           equ	4053	;# 
   483   000FD6                     TMR0            equ	4054	;# 
   484   000FD6                     TMR0L           equ	4054	;# 
   485   000FD7                     TMR0H           equ	4055	;# 
   486   000FD8                     STATUS          equ	4056	;# 
   487   000FD9                     FSR2            equ	4057	;# 
   488   000FD9                     FSR2L           equ	4057	;# 
   489   000FDA                     FSR2H           equ	4058	;# 
   490   000FDB                     PLUSW2          equ	4059	;# 
   491   000FDC                     PREINC2         equ	4060	;# 
   492   000FDD                     POSTDEC2        equ	4061	;# 
   493   000FDE                     POSTINC2        equ	4062	;# 
   494   000FDF                     INDF2           equ	4063	;# 
   495   000FE0                     BSR             equ	4064	;# 
   496   000FE1                     FSR1            equ	4065	;# 
   497   000FE1                     FSR1L           equ	4065	;# 
   498   000FE2                     FSR1H           equ	4066	;# 
   499   000FE3                     PLUSW1          equ	4067	;# 
   500   000FE4                     PREINC1         equ	4068	;# 
   501   000FE5                     POSTDEC1        equ	4069	;# 
   502   000FE6                     POSTINC1        equ	4070	;# 
   503   000FE7                     INDF1           equ	4071	;# 
   504   000FE8                     WREG            equ	4072	;# 
   505   000FE9                     FSR0            equ	4073	;# 
   506   000FE9                     FSR0L           equ	4073	;# 
   507   000FEA                     FSR0H           equ	4074	;# 
   508   000FEB                     PLUSW0          equ	4075	;# 
   509   000FEC                     PREINC0         equ	4076	;# 
   510   000FED                     POSTDEC0        equ	4077	;# 
   511   000FEE                     POSTINC0        equ	4078	;# 
   512   000FEF                     INDF0           equ	4079	;# 
   513   000FF0                     INTCON3         equ	4080	;# 
   514   000FF1                     INTCON2         equ	4081	;# 
   515   000FF2                     INTCON          equ	4082	;# 
   516   000FF3                     PROD            equ	4083	;# 
   517   000FF3                     PRODL           equ	4083	;# 
   518   000FF4                     PRODH           equ	4084	;# 
   519   000FF5                     TABLAT          equ	4085	;# 
   520   000FF6                     TBLPTR          equ	4086	;# 
   521   000FF6                     TBLPTRL         equ	4086	;# 
   522   000FF7                     TBLPTRH         equ	4087	;# 
   523   000FF8                     TBLPTRU         equ	4088	;# 
   524   000FF9                     PCLAT           equ	4089	;# 
   525   000FF9                     PC              equ	4089	;# 
   526   000FF9                     PCL             equ	4089	;# 
   527   000FFA                     PCLATH          equ	4090	;# 
   528   000FFB                     PCLATU          equ	4091	;# 
   529   000FFC                     STKPTR          equ	4092	;# 
   530   000FFD                     TOS             equ	4093	;# 
   531   000FFD                     TOSL            equ	4093	;# 
   532   000FFE                     TOSH            equ	4094	;# 
   533   000FFF                     TOSU            equ	4095	;# 
   534   000F80                     PORTA           equ	3968	;# 
   535   000F81                     PORTB           equ	3969	;# 
   536   000F82                     PORTC           equ	3970	;# 
   537   000F83                     PORTD           equ	3971	;# 
   538   000F84                     PORTE           equ	3972	;# 
   539   000F89                     LATA            equ	3977	;# 
   540   000F8A                     LATB            equ	3978	;# 
   541   000F8B                     LATC            equ	3979	;# 
   542   000F8C                     LATD            equ	3980	;# 
   543   000F8D                     LATE            equ	3981	;# 
   544   000F92                     TRISA           equ	3986	;# 
   545   000F92                     DDRA            equ	3986	;# 
   546   000F93                     TRISB           equ	3987	;# 
   547   000F93                     DDRB            equ	3987	;# 
   548   000F94                     TRISC           equ	3988	;# 
   549   000F94                     DDRC            equ	3988	;# 
   550   000F95                     TRISD           equ	3989	;# 
   551   000F95                     DDRD            equ	3989	;# 
   552   000F96                     TRISE           equ	3990	;# 
   553   000F96                     DDRE            equ	3990	;# 
   554   000F9B                     OSCTUNE         equ	3995	;# 
   555   000F9D                     PIE1            equ	3997	;# 
   556   000F9E                     PIR1            equ	3998	;# 
   557   000F9F                     IPR1            equ	3999	;# 
   558   000FA0                     PIE2            equ	4000	;# 
   559   000FA1                     PIR2            equ	4001	;# 
   560   000FA2                     IPR2            equ	4002	;# 
   561   000FA6                     EECON1          equ	4006	;# 
   562   000FA7                     EECON2          equ	4007	;# 
   563   000FA8                     EEDATA          equ	4008	;# 
   564   000FA9                     EEADR           equ	4009	;# 
   565   000FAB                     RCSTA           equ	4011	;# 
   566   000FAB                     RCSTA1          equ	4011	;# 
   567   000FAC                     TXSTA           equ	4012	;# 
   568   000FAC                     TXSTA1          equ	4012	;# 
   569   000FAD                     TXREG           equ	4013	;# 
   570   000FAD                     TXREG1          equ	4013	;# 
   571   000FAE                     RCREG           equ	4014	;# 
   572   000FAE                     RCREG1          equ	4014	;# 
   573   000FAF                     SPBRG           equ	4015	;# 
   574   000FAF                     SPBRG1          equ	4015	;# 
   575   000FB0                     SPBRGH          equ	4016	;# 
   576   000FB1                     T3CON           equ	4017	;# 
   577   000FB2                     TMR3            equ	4018	;# 
   578   000FB2                     TMR3L           equ	4018	;# 
   579   000FB3                     TMR3H           equ	4019	;# 
   580   000FB4                     CMCON           equ	4020	;# 
   581   000FB5                     CVRCON          equ	4021	;# 
   582   000FB6                     ECCP1AS         equ	4022	;# 
   583   000FB6                     ECCPAS          equ	4022	;# 
   584   000FB7                     PWM1CON         equ	4023	;# 
   585   000FB7                     ECCP1DEL        equ	4023	;# 
   586   000FB8                     BAUDCON         equ	4024	;# 
   587   000FB8                     BAUDCTL         equ	4024	;# 
   588   000FBA                     CCP2CON         equ	4026	;# 
   589   000FBB                     CCPR2           equ	4027	;# 
   590   000FBB                     CCPR2L          equ	4027	;# 
   591   000FBC                     CCPR2H          equ	4028	;# 
   592   000FBD                     CCP1CON         equ	4029	;# 
   593   000FBE                     CCPR1           equ	4030	;# 
   594   000FBE                     CCPR1L          equ	4030	;# 
   595   000FBF                     CCPR1H          equ	4031	;# 
   596   000FC0                     ADCON2          equ	4032	;# 
   597   000FC1                     ADCON1          equ	4033	;# 
   598   000FC2                     ADCON0          equ	4034	;# 
   599   000FC3                     ADRES           equ	4035	;# 
   600   000FC3                     ADRESL          equ	4035	;# 
   601   000FC4                     ADRESH          equ	4036	;# 
   602   000FC5                     SSPCON2         equ	4037	;# 
   603   000FC6                     SSPCON1         equ	4038	;# 
   604   000FC7                     SSPSTAT         equ	4039	;# 
   605   000FC8                     SSPADD          equ	4040	;# 
   606   000FC9                     SSPBUF          equ	4041	;# 
   607   000FCA                     T2CON           equ	4042	;# 
   608   000FCB                     PR2             equ	4043	;# 
   609   000FCB                     MEMCON          equ	4043	;# 
   610   000FCC                     TMR2            equ	4044	;# 
   611   000FCD                     T1CON           equ	4045	;# 
   612   000FCE                     TMR1            equ	4046	;# 
   613   000FCE                     TMR1L           equ	4046	;# 
   614   000FCF                     TMR1H           equ	4047	;# 
   615   000FD0                     RCON            equ	4048	;# 
   616   000FD1                     WDTCON          equ	4049	;# 
   617   000FD2                     HLVDCON         equ	4050	;# 
   618   000FD2                     LVDCON          equ	4050	;# 
   619   000FD3                     OSCCON          equ	4051	;# 
   620   000FD5                     T0CON           equ	4053	;# 
   621   000FD6                     TMR0            equ	4054	;# 
   622   000FD6                     TMR0L           equ	4054	;# 
   623   000FD7                     TMR0H           equ	4055	;# 
   624   000FD8                     STATUS          equ	4056	;# 
   625   000FD9                     FSR2            equ	4057	;# 
   626   000FD9                     FSR2L           equ	4057	;# 
   627   000FDA                     FSR2H           equ	4058	;# 
   628   000FDB                     PLUSW2          equ	4059	;# 
   629   000FDC                     PREINC2         equ	4060	;# 
   630   000FDD                     POSTDEC2        equ	4061	;# 
   631   000FDE                     POSTINC2        equ	4062	;# 
   632   000FDF                     INDF2           equ	4063	;# 
   633   000FE0                     BSR             equ	4064	;# 
   634   000FE1                     FSR1            equ	4065	;# 
   635   000FE1                     FSR1L           equ	4065	;# 
   636   000FE2                     FSR1H           equ	4066	;# 
   637   000FE3                     PLUSW1          equ	4067	;# 
   638   000FE4                     PREINC1         equ	4068	;# 
   639   000FE5                     POSTDEC1        equ	4069	;# 
   640   000FE6                     POSTINC1        equ	4070	;# 
   641   000FE7                     INDF1           equ	4071	;# 
   642   000FE8                     WREG            equ	4072	;# 
   643   000FE9                     FSR0            equ	4073	;# 
   644   000FE9                     FSR0L           equ	4073	;# 
   645   000FEA                     FSR0H           equ	4074	;# 
   646   000FEB                     PLUSW0          equ	4075	;# 
   647   000FEC                     PREINC0         equ	4076	;# 
   648   000FED                     POSTDEC0        equ	4077	;# 
   649   000FEE                     POSTINC0        equ	4078	;# 
   650   000FEF                     INDF0           equ	4079	;# 
   651   000FF0                     INTCON3         equ	4080	;# 
   652   000FF1                     INTCON2         equ	4081	;# 
   653   000FF2                     INTCON          equ	4082	;# 
   654   000FF3                     PROD            equ	4083	;# 
   655   000FF3                     PRODL           equ	4083	;# 
   656   000FF4                     PRODH           equ	4084	;# 
   657   000FF5                     TABLAT          equ	4085	;# 
   658   000FF6                     TBLPTR          equ	4086	;# 
   659   000FF6                     TBLPTRL         equ	4086	;# 
   660   000FF7                     TBLPTRH         equ	4087	;# 
   661   000FF8                     TBLPTRU         equ	4088	;# 
   662   000FF9                     PCLAT           equ	4089	;# 
   663   000FF9                     PC              equ	4089	;# 
   664   000FF9                     PCL             equ	4089	;# 
   665   000FFA                     PCLATH          equ	4090	;# 
   666   000FFB                     PCLATU          equ	4091	;# 
   667   000FFC                     STKPTR          equ	4092	;# 
   668   000FFD                     TOS             equ	4093	;# 
   669   000FFD                     TOSL            equ	4093	;# 
   670   000FFE                     TOSH            equ	4094	;# 
   671   000FFF                     TOSU            equ	4095	;# 
   672                           
   673                           	psect	idataCOMRAM
   674   000C5E                     __pidataCOMRAM:
   675                           	callstack 0
   676                           
   677                           ;initializer for _melodies
   678   000C5E  A9                 	db	low _rick_roll
   679   000C5F  7D                 	db	high _rick_roll
   680   000C60  D5                 	db	low _deja_vu
   681   000C61  7E                 	db	high _deja_vu
   682   000C62  FF                 	db	low _fur_elise
   683   000C63  7B                 	db	high _fur_elise
   684                           
   685                           	psect	idataBANK0
   686   000C64                     __pidataBANK0:
   687                           	callstack 0
   688                           
   689                           ;initializer for _current_song
   690   000C64  FFFF               	dw	65535
   691                           
   692                           	psect	mediumconst
   693   007B92                     __pmediumconst:
   694                           	callstack 0
   695   007B92  00                 	db	0
   696   007B93                     _melody2:
   697                           	callstack 0
   698   007B93  00C8               	dw	200
   699   007B95  012C               	dw	300
   700   007B97  001E               	dw	30
   701   007B99  0096               	dw	150
   702   007B9B  012C               	dw	300
   703   007B9D  001E               	dw	30
   704   007B9F  0064               	dw	100
   705   007BA1  012C               	dw	300
   706   007BA3  001E               	dw	30
   707   007BA5  0032               	dw	50
   708   007BA7  012C               	dw	300
   709   007BA9  001E               	dw	30
   710   007BAB  00EE               	dw	238
   711   007BAD  012C               	dw	300
   712   007BAF  001E               	dw	30
   713   007BB1  00BD               	dw	189
   714   007BB3  012C               	dw	300
   715   007BB5  001E               	dw	30
   716   007BB7  009E               	dw	158
   717   007BB9  012C               	dw	300
   718   007BBB  001E               	dw	30
   719   007BBD  0076               	dw	118
   720   007BBF  012C               	dw	300
   721   007BC1  001E               	dw	30
   722   007BC3  00C8               	dw	200
   723   007BC5  012C               	dw	300
   724   007BC7  001E               	dw	30
   725   007BC9  0096               	dw	150
   726   007BCB  012C               	dw	300
   727   007BCD  001E               	dw	30
   728   007BCF  0064               	dw	100
   729   007BD1  012C               	dw	300
   730   007BD3  001E               	dw	30
   731   007BD5  0032               	dw	50
   732   007BD7  012C               	dw	300
   733   007BD9  001E               	dw	30
   734   007BDB  00EE               	dw	238
   735   007BDD  012C               	dw	300
   736   007BDF  001E               	dw	30
   737   007BE1  00BD               	dw	189
   738   007BE3  012C               	dw	300
   739   007BE5  001E               	dw	30
   740   007BE7  009E               	dw	158
   741   007BE9  012C               	dw	300
   742   007BEB  001E               	dw	30
   743   007BED  0076               	dw	118
   744   007BEF  012C               	dw	300
   745   007BF1  001E               	dw	30
   746   007BF3                     __end_of_melody2:
   747                           	callstack 0
   748   007BF3                     _melody_lengths:
   749                           	callstack 0
   750   007BF3  0032               	dw	50
   751   007BF5  0019               	dw	25
   752   007BF7  0047               	dw	71
   753   007BF9                     __end_of_melody_lengths:
   754                           	callstack 0
   755   007BF9                     _stepSequence:
   756                           	callstack 0
   757   007BF9  30                 	db	48
   758   007BFA  60                 	db	96
   759   007BFB  C0                 	db	192
   760   007BFC  90                 	db	144
   761   007BFD                     __end_of_stepSequence:
   762                           	callstack 0
   763   007BFD  0003               	dw	3
   764   007BFF                     __end_of_total_songs:
   765                           	callstack 0
   766   007BFF                     _fur_elise:
   767                           	callstack 0
   768   007BFF  002E               	dw	46
   769   007C01  004B               	dw	75
   770   007C03  00FA               	dw	250
   771   007C05  0031               	dw	49
   772   007C07  004B               	dw	75
   773   007C09  00FA               	dw	250
   774   007C0B  002E               	dw	46
   775   007C0D  004B               	dw	75
   776   007C0F  00FA               	dw	250
   777   007C11  0031               	dw	49
   778   007C13  004B               	dw	75
   779   007C15  00FA               	dw	250
   780   007C17  002E               	dw	46
   781   007C19  004B               	dw	75
   782   007C1B  00FA               	dw	250
   783   007C1D  003E               	dw	62
   784   007C1F  004B               	dw	75
   785   007C21  00FA               	dw	250
   786   007C23  0034               	dw	52
   787   007C25  004B               	dw	75
   788   007C27  00FA               	dw	250
   789   007C29  003B               	dw	59
   790   007C2B  004B               	dw	75
   791   007C2D  00FA               	dw	250
   792   007C2F  0046               	dw	70
   793   007C31  004B               	dw	75
   794   007C33  00FA               	dw	250
   795   007C35  00BD               	dw	189
   796   007C37  004B               	dw	75
   797   007C39  00FA               	dw	250
   798   007C3B  008D               	dw	141
   799   007C3D  004B               	dw	75
   800   007C3F  00FA               	dw	250
   801   007C41  0076               	dw	118
   802   007C43  004B               	dw	75
   803   007C45  00FA               	dw	250
   804   007C47  005E               	dw	94
   805   007C49  004B               	dw	75
   806   007C4B  00FA               	dw	250
   807   007C4D  0046               	dw	70
   808   007C4F  004B               	dw	75
   809   007C51  00FA               	dw	250
   810   007C53  003E               	dw	62
   811   007C55  004B               	dw	75
   812   007C57  00FA               	dw	250
   813   007C59  00BD               	dw	189
   814   007C5B  004B               	dw	75
   815   007C5D  00FA               	dw	250
   816   007C5F  007E               	dw	126
   817   007C61  004B               	dw	75
   818   007C63  00FA               	dw	250
   819   007C65  005E               	dw	94
   820   007C67  004B               	dw	75
   821   007C69  00FA               	dw	250
   822   007C6B  004A               	dw	74
   823   007C6D  004B               	dw	75
   824   007C6F  00FA               	dw	250
   825   007C71  003E               	dw	62
   826   007C73  004B               	dw	75
   827   007C75  00FA               	dw	250
   828   007C77  003B               	dw	59
   829   007C79  004B               	dw	75
   830   007C7B  00FA               	dw	250
   831   007C7D  00BD               	dw	189
   832   007C7F  004B               	dw	75
   833   007C81  00FA               	dw	250
   834   007C83  008D               	dw	141
   835   007C85  004B               	dw	75
   836   007C87  00FA               	dw	250
   837   007C89  005E               	dw	94
   838   007C8B  004B               	dw	75
   839   007C8D  00FA               	dw	250
   840   007C8F  002E               	dw	46
   841   007C91  004B               	dw	75
   842   007C93  00FA               	dw	250
   843   007C95  0031               	dw	49
   844   007C97  004B               	dw	75
   845   007C99  00FA               	dw	250
   846   007C9B  002E               	dw	46
   847   007C9D  004B               	dw	75
   848   007C9F  00FA               	dw	250
   849   007CA1  0031               	dw	49
   850   007CA3  004B               	dw	75
   851   007CA5  00FA               	dw	250
   852   007CA7  002E               	dw	46
   853   007CA9  004B               	dw	75
   854   007CAB  00FA               	dw	250
   855   007CAD  003E               	dw	62
   856   007CAF  004B               	dw	75
   857   007CB1  00FA               	dw	250
   858   007CB3  0034               	dw	52
   859   007CB5  004B               	dw	75
   860   007CB7  00FA               	dw	250
   861   007CB9  003B               	dw	59
   862   007CBB  004B               	dw	75
   863   007CBD  00FA               	dw	250
   864   007CBF  0046               	dw	70
   865   007CC1  004B               	dw	75
   866   007CC3  00FA               	dw	250
   867   007CC5  00BD               	dw	189
   868   007CC7  004B               	dw	75
   869   007CC9  00FA               	dw	250
   870   007CCB  008D               	dw	141
   871   007CCD  004B               	dw	75
   872   007CCF  00FA               	dw	250
   873   007CD1  0076               	dw	118
   874   007CD3  004B               	dw	75
   875   007CD5  00FA               	dw	250
   876   007CD7  005E               	dw	94
   877   007CD9  004B               	dw	75
   878   007CDB  00FA               	dw	250
   879   007CDD  0046               	dw	70
   880   007CDF  004B               	dw	75
   881   007CE1  00FA               	dw	250
   882   007CE3  003E               	dw	62
   883   007CE5  004B               	dw	75
   884   007CE7  00FA               	dw	250
   885   007CE9  00BD               	dw	189
   886   007CEB  004B               	dw	75
   887   007CED  00FA               	dw	250
   888   007CEF  007E               	dw	126
   889   007CF1  004B               	dw	75
   890   007CF3  00FA               	dw	250
   891   007CF5  005E               	dw	94
   892   007CF7  004B               	dw	75
   893   007CF9  00FA               	dw	250
   894   007CFB  004A               	dw	74
   895   007CFD  004B               	dw	75
   896   007CFF  00FA               	dw	250
   897   007D01  003E               	dw	62
   898   007D03  004B               	dw	75
   899   007D05  00FA               	dw	250
   900   007D07  003B               	dw	59
   901   007D09  004B               	dw	75
   902   007D0B  00FA               	dw	250
   903   007D0D  00BD               	dw	189
   904   007D0F  004B               	dw	75
   905   007D11  00FA               	dw	250
   906   007D13  008D               	dw	141
   907   007D15  004B               	dw	75
   908   007D17  00FA               	dw	250
   909   007D19  005E               	dw	94
   910   007D1B  004B               	dw	75
   911   007D1D  00FA               	dw	250
   912   007D1F  002E               	dw	46
   913   007D21  004B               	dw	75
   914   007D23  00FA               	dw	250
   915   007D25  0031               	dw	49
   916   007D27  004B               	dw	75
   917   007D29  00FA               	dw	250
   918   007D2B  002E               	dw	46
   919   007D2D  004B               	dw	75
   920   007D2F  00FA               	dw	250
   921   007D31  0031               	dw	49
   922   007D33  004B               	dw	75
   923   007D35  00FA               	dw	250
   924   007D37  002E               	dw	46
   925   007D39  004B               	dw	75
   926   007D3B  00FA               	dw	250
   927   007D3D  003E               	dw	62
   928   007D3F  004B               	dw	75
   929   007D41  00FA               	dw	250
   930   007D43  0034               	dw	52
   931   007D45  004B               	dw	75
   932   007D47  00FA               	dw	250
   933   007D49  003B               	dw	59
   934   007D4B  004B               	dw	75
   935   007D4D  00FA               	dw	250
   936   007D4F  0046               	dw	70
   937   007D51  004B               	dw	75
   938   007D53  00FA               	dw	250
   939   007D55  00BD               	dw	189
   940   007D57  004B               	dw	75
   941   007D59  00FA               	dw	250
   942   007D5B  008D               	dw	141
   943   007D5D  004B               	dw	75
   944   007D5F  00FA               	dw	250
   945   007D61  0076               	dw	118
   946   007D63  004B               	dw	75
   947   007D65  00FA               	dw	250
   948   007D67  005E               	dw	94
   949   007D69  004B               	dw	75
   950   007D6B  00FA               	dw	250
   951   007D6D  0046               	dw	70
   952   007D6F  004B               	dw	75
   953   007D71  00FA               	dw	250
   954   007D73  003E               	dw	62
   955   007D75  004B               	dw	75
   956   007D77  00FA               	dw	250
   957   007D79  00BD               	dw	189
   958   007D7B  004B               	dw	75
   959   007D7D  00FA               	dw	250
   960   007D7F  007E               	dw	126
   961   007D81  004B               	dw	75
   962   007D83  00FA               	dw	250
   963   007D85  005E               	dw	94
   964   007D87  004B               	dw	75
   965   007D89  00FA               	dw	250
   966   007D8B  003B               	dw	59
   967   007D8D  004B               	dw	75
   968   007D8F  00FA               	dw	250
   969   007D91  003E               	dw	62
   970   007D93  004B               	dw	75
   971   007D95  00FA               	dw	250
   972   007D97  0046               	dw	70
   973   007D99  004B               	dw	75
   974   007D9B  00FA               	dw	250
   975   007D9D  00BD               	dw	189
   976   007D9F  004B               	dw	75
   977   007DA1  00FA               	dw	250
   978   007DA3  008D               	dw	141
   979   007DA5  004B               	dw	75
   980   007DA7  00FA               	dw	250
   981   007DA9                     __end_of_fur_elise:
   982                           	callstack 0
   983   007DA9                     _rick_roll:
   984                           	callstack 0
   985   007DA9  008D               	dw	141
   986   007DAB  0014               	dw	20
   987   007DAD  007D               	dw	125
   988   007DAF  007E               	dw	126
   989   007DB1  0014               	dw	20
   990   007DB3  007D               	dw	125
   991   007DB5  0069               	dw	105
   992   007DB7  0014               	dw	20
   993   007DB9  007D               	dw	125
   994   007DBB  007E               	dw	126
   995   007DBD  0014               	dw	20
   996   007DBF  0177               	dw	375
   997   007DC1  0053               	dw	83
   998   007DC3  0032               	dw	50
   999   007DC5  0177               	dw	375
  1000   007DC7  0053               	dw	83
  1001   007DC9  0032               	dw	50
  1002   007DCB  02EE               	dw	750
  1003   007DCD  005F               	dw	95
  1004   007DCF  004B               	dw	75
  1005   007DD1  007D               	dw	125
  1006   007DD3  008D               	dw	141
  1007   007DD5  0014               	dw	20
  1008   007DD7  007D               	dw	125
  1009   007DD9  007E               	dw	126
  1010   007DDB  0014               	dw	20
  1011   007DDD  007D               	dw	125
  1012   007DDF  0069               	dw	105
  1013   007DE1  0014               	dw	20
  1014   007DE3  007D               	dw	125
  1015   007DE5  007E               	dw	126
  1016   007DE7  0014               	dw	20
  1017   007DE9  0177               	dw	375
  1018   007DEB  005F               	dw	95
  1019   007DED  0032               	dw	50
  1020   007DEF  0177               	dw	375
  1021   007DF1  005F               	dw	95
  1022   007DF3  0032               	dw	50
  1023   007DF5  02EE               	dw	750
  1024   007DF7  0069               	dw	105
  1025   007DF9  004B               	dw	75
  1026   007DFB  007D               	dw	125
  1027   007DFD  008D               	dw	141
  1028   007DFF  0014               	dw	20
  1029   007E01  007D               	dw	125
  1030   007E03  007E               	dw	126
  1031   007E05  0014               	dw	20
  1032   007E07  007D               	dw	125
  1033   007E09  0069               	dw	105
  1034   007E0B  0014               	dw	20
  1035   007E0D  007D               	dw	125
  1036   007E0F  007E               	dw	126
  1037   007E11  0014               	dw	20
  1038   007E13  02EE               	dw	750
  1039   007E15  0069               	dw	105
  1040   007E17  004B               	dw	75
  1041   007E19  00FA               	dw	250
  1042   007E1B  005F               	dw	95
  1043   007E1D  0023               	dw	35
  1044   007E1F  0177               	dw	375
  1045   007E21  006F               	dw	111
  1046   007E23  0032               	dw	50
  1047   007E25  007D               	dw	125
  1048   007E27  007E               	dw	126
  1049   007E29  0014               	dw	20
  1050   007E2B  01F4               	dw	500
  1051   007E2D  008D               	dw	141
  1052   007E2F  0096               	dw	150
  1053   007E31  01F4               	dw	500
  1054   007E33  005F               	dw	95
  1055   007E35  0023               	dw	35
  1056   007E37  00FA               	dw	250
  1057   007E39  0069               	dw	105
  1058   007E3B  0217               	dw	535
  1059   007E3D  007D               	dw	125
  1060   007E3F  008D               	dw	141
  1061   007E41  0014               	dw	20
  1062   007E43  007D               	dw	125
  1063   007E45  007E               	dw	126
  1064   007E47  0014               	dw	20
  1065   007E49  007D               	dw	125
  1066   007E4B  0069               	dw	105
  1067   007E4D  0014               	dw	20
  1068   007E4F  007D               	dw	125
  1069   007E51  007E               	dw	126
  1070   007E53  0014               	dw	20
  1071   007E55  0177               	dw	375
  1072   007E57  0053               	dw	83
  1073   007E59  0032               	dw	50
  1074   007E5B  0177               	dw	375
  1075   007E5D  0053               	dw	83
  1076   007E5F  0032               	dw	50
  1077   007E61  02EE               	dw	750
  1078   007E63  005F               	dw	95
  1079   007E65  004B               	dw	75
  1080   007E67  007D               	dw	125
  1081   007E69  008D               	dw	141
  1082   007E6B  0014               	dw	20
  1083   007E6D  007D               	dw	125
  1084   007E6F  007E               	dw	126
  1085   007E71  0014               	dw	20
  1086   007E73  007D               	dw	125
  1087   007E75  0069               	dw	105
  1088   007E77  0014               	dw	20
  1089   007E79  007D               	dw	125
  1090   007E7B  007E               	dw	126
  1091   007E7D  0014               	dw	20
  1092   007E7F  01F4               	dw	500
  1093   007E81  0045               	dw	69
  1094   007E83  0041               	dw	65
  1095   007E85  00FA               	dw	250
  1096   007E87  006F               	dw	111
  1097   007E89  0014               	dw	20
  1098   007E8B  01F4               	dw	500
  1099   007E8D  0069               	dw	105
  1100   007E8F  0235               	dw	565
  1101   007E91  007D               	dw	125
  1102   007E93  008D               	dw	141
  1103   007E95  0014               	dw	20
  1104   007E97  007D               	dw	125
  1105   007E99  007E               	dw	126
  1106   007E9B  0014               	dw	20
  1107   007E9D  007D               	dw	125
  1108   007E9F  0069               	dw	105
  1109   007EA1  0014               	dw	20
  1110   007EA3  007D               	dw	125
  1111   007EA5  007E               	dw	126
  1112   007EA7  0014               	dw	20
  1113   007EA9  02EE               	dw	750
  1114   007EAB  0069               	dw	105
  1115   007EAD  004B               	dw	75
  1116   007EAF  00FA               	dw	250
  1117   007EB1  005F               	dw	95
  1118   007EB3  0023               	dw	35
  1119   007EB5  0177               	dw	375
  1120   007EB7  006F               	dw	111
  1121   007EB9  0032               	dw	50
  1122   007EBB  007D               	dw	125
  1123   007EBD  007E               	dw	126
  1124   007EBF  0014               	dw	20
  1125   007EC1  01F4               	dw	500
  1126   007EC3  008D               	dw	141
  1127   007EC5  0096               	dw	150
  1128   007EC7  01F4               	dw	500
  1129   007EC9  005F               	dw	95
  1130   007ECB  0023               	dw	35
  1131   007ECD  00FA               	dw	250
  1132   007ECF  0069               	dw	105
  1133   007ED1  0235               	dw	565
  1134   007ED3  007D               	dw	125
  1135   007ED5                     __end_of_rick_roll:
  1136                           	callstack 0
  1137   007ED5                     _deja_vu:
  1138                           	callstack 0
  1139   007ED5  0076               	dw	118
  1140   007ED7  0028               	dw	40
  1141   007ED9  0096               	dw	150
  1142   007EDB  0069               	dw	105
  1143   007EDD  0028               	dw	40
  1144   007EDF  00C8               	dw	200
  1145   007EE1  0063               	dw	99
  1146   007EE3  0078               	dw	120
  1147   007EE5  00A6               	dw	166
  1148   007EE7  0063               	dw	99
  1149   007EE9  0017               	dw	23
  1150   007EEB  00A6               	dw	166
  1151   007EED  0063               	dw	99
  1152   007EEF  0017               	dw	23
  1153   007EF1  00A6               	dw	166
  1154   007EF3  0069               	dw	105
  1155   007EF5  0017               	dw	23
  1156   007EF7  00A6               	dw	166
  1157   007EF9  0085               	dw	133
  1158   007EFB  0017               	dw	23
  1159   007EFD  00A6               	dw	166
  1160   007EFF  009E               	dw	158
  1161   007F01  0017               	dw	23
  1162   007F03  00A6               	dw	166
  1163   007F05  0085               	dw	133
  1164   007F07  0064               	dw	100
  1165   007F09  00C8               	dw	200
  1166   007F0B  0076               	dw	118
  1167   007F0D  0017               	dw	23
  1168   007F0F  00A6               	dw	166
  1169   007F11  0076               	dw	118
  1170   007F13  0099               	dw	153
  1171   007F15  00A6               	dw	166
  1172   007F17  0076               	dw	118
  1173   007F19  0017               	dw	23
  1174   007F1B  00A6               	dw	166
  1175   007F1D  0058               	dw	88
  1176   007F1F  0017               	dw	23
  1177   007F21  00A6               	dw	166
  1178   007F23  0063               	dw	99
  1179   007F25  0017               	dw	23
  1180   007F27  00A6               	dw	166
  1181   007F29  0069               	dw	105
  1182   007F2B  0017               	dw	23
  1183   007F2D  00A6               	dw	166
  1184   007F2F  0063               	dw	99
  1185   007F31  0078               	dw	120
  1186   007F33  00A6               	dw	166
  1187   007F35  0063               	dw	99
  1188   007F37  0017               	dw	23
  1189   007F39  00A6               	dw	166
  1190   007F3B  0063               	dw	99
  1191   007F3D  0017               	dw	23
  1192   007F3F  00A6               	dw	166
  1193   007F41  0058               	dw	88
  1194   007F43  0017               	dw	23
  1195   007F45  00A6               	dw	166
  1196   007F47  0063               	dw	99
  1197   007F49  0017               	dw	23
  1198   007F4B  00A6               	dw	166
  1199   007F4D  0058               	dw	88
  1200   007F4F  0017               	dw	23
  1201   007F51  00A6               	dw	166
  1202   007F53  0058               	dw	88
  1203   007F55  0064               	dw	100
  1204   007F57  00A6               	dw	166
  1205   007F59  004F               	dw	79
  1206   007F5B  0017               	dw	23
  1207   007F5D  00A6               	dw	166
  1208   007F5F  004F               	dw	79
  1209   007F61  0017               	dw	23
  1210   007F63  00A6               	dw	166
  1211   007F65  0058               	dw	88
  1212   007F67  0085               	dw	133
  1213   007F69  0096               	dw	150
  1214   007F6B                     __end_of_deja_vu:
  1215                           	callstack 0
  1216   007CF5                     _RCIF           set	31989
  1217   007D59                     _OERR           set	32089
  1218   007D61                     _TRMT           set	32097
  1219   007CF4                     _TXIF           set	31988
  1220   007CEC                     _TXIE           set	31980
  1221   007CED                     _RCIE           set	31981
  1222   007F96                     _PEIE           set	32662
  1223   007F97                     _GIE            set	32663
  1224   007D5C                     _CREN           set	32092
  1225   007D65                     _TXEN           set	32101
  1226   007D66                     _TX9            set	32102
  1227   007D5E                     _RX9            set	32094
  1228   007D5F                     _SPEN           set	32095
  1229   007D64                     _SYNC           set	32100
  1230   007D62                     _BRGH           set	32098
  1231   007CA7                     _TRISC7         set	31911
  1232   007CA6                     _TRISC6         set	31910
  1233   000FD6                     _TMR0           set	4054
  1234   000F8C                     _LATD           set	3980
  1235   000FD5                     _T0CONbits      set	4053
  1236   000FF2                     _INTCONbits     set	4082
  1237   000FD6                     _TMR0L          set	4054
  1238   000FD7                     _TMR0H          set	4055
  1239   000FD5                     _T0CON          set	4053
  1240   000FBE                     _CCPR1L         set	4030
  1241   000FCB                     _PR2            set	4043
  1242   000FCA                     _T2CONbits      set	4042
  1243   000FBD                     _CCP1CONbits    set	4029
  1244   000F8B                     _LATCbits       set	3979
  1245   000F94                     _TRISCbits      set	3988
  1246   000F8A                     _LATBbits       set	3978
  1247   000F8C                     _LATDbits       set	3980
  1248   000F89                     _LATAbits       set	3977
  1249   000F93                     _TRISBbits      set	3987
  1250   000F95                     _TRISDbits      set	3989
  1251   000F92                     _TRISAbits      set	3986
  1252   000FD3                     _OSCCONbits     set	4051
  1253   000FAE                     _RCREG          set	4014
  1254   000FAC                     _TXSTAbits      set	4012
  1255   000FAD                     _TXREG          set	4013
  1256   000FAF                     _SPBRG          set	4015
  1257   007F6B                     STR_1:
  1258   007F6B  42                 	db	66	;'B'
  1259   007F6C  6C                 	db	108	;'l'
  1260   007F6D  75                 	db	117	;'u'
  1261   007F6E  65                 	db	101	;'e'
  1262   007F6F  74                 	db	116	;'t'
  1263   007F70  6F                 	db	111	;'o'
  1264   007F71  6F                 	db	111	;'o'
  1265   007F72  74                 	db	116	;'t'
  1266   007F73  68                 	db	104	;'h'
  1267   007F74  20                 	db	32
  1268   007F75  49                 	db	73	;'I'
  1269   007F76  6E                 	db	110	;'n'
  1270   007F77  69                 	db	105	;'i'
  1271   007F78  74                 	db	116	;'t'
  1272   007F79  69                 	db	105	;'i'
  1273   007F7A  61                 	db	97	;'a'
  1274   007F7B  6C                 	db	108	;'l'
  1275   007F7C  69                 	db	105	;'i'
  1276   007F7D  7A                 	db	122	;'z'
  1277   007F7E  65                 	db	101	;'e'
  1278   007F7F  64                 	db	100	;'d'
  1279   007F80  20                 	db	32
  1280   007F81  61                 	db	97	;'a'
  1281   007F82  6E                 	db	110	;'n'
  1282   007F83  64                 	db	100	;'d'
  1283   007F84  20                 	db	32
  1284   007F85  52                 	db	82	;'R'
  1285   007F86  65                 	db	101	;'e'
  1286   007F87  61                 	db	97	;'a'
  1287   007F88  64                 	db	100	;'d'
  1288   007F89  79                 	db	121	;'y'
  1289   007F8A  00                 	db	0
  1290   007F8B                     STR_9:
  1291   007F8B  4C                 	db	76	;'L'
  1292   007F8C  61                 	db	97	;'a'
  1293   007F8D  64                 	db	100	;'d'
  1294   007F8E  64                 	db	100	;'d'
  1295   007F8F  65                 	db	101	;'e'
  1296   007F90  72                 	db	114	;'r'
  1297   007F91  5F                 	db	95	;'_'
  1298   007F92  42                 	db	66	;'B'
  1299   007F93  61                 	db	97	;'a'
  1300   007F94  63                 	db	99	;'c'
  1301   007F95  6B                 	db	107	;'k'
  1302   007F96  77                 	db	119	;'w'
  1303   007F97  61                 	db	97	;'a'
  1304   007F98  72                 	db	114	;'r'
  1305   007F99  64                 	db	100	;'d'
  1306   007F9A  00                 	db	0
  1307   007F9B                     STR_5:
  1308   007F9B  4D                 	db	77	;'M'
  1309   007F9C  6F                 	db	111	;'o'
  1310   007F9D  74                 	db	116	;'t'
  1311   007F9E  6F                 	db	111	;'o'
  1312   007F9F  72                 	db	114	;'r'
  1313   007FA0  5F                 	db	95	;'_'
  1314   007FA1  54                 	db	84	;'T'
  1315   007FA2  75                 	db	117	;'u'
  1316   007FA3  72                 	db	114	;'r'
  1317   007FA4  6E                 	db	110	;'n'
  1318   007FA5  52                 	db	82	;'R'
  1319   007FA6  69                 	db	105	;'i'
  1320   007FA7  67                 	db	103	;'g'
  1321   007FA8  68                 	db	104	;'h'
  1322   007FA9  74                 	db	116	;'t'
  1323   007FAA  00                 	db	0
  1324   007FAB                     STR_4:
  1325   007FAB  4D                 	db	77	;'M'
  1326   007FAC  6F                 	db	111	;'o'
  1327   007FAD  74                 	db	116	;'t'
  1328   007FAE  6F                 	db	111	;'o'
  1329   007FAF  72                 	db	114	;'r'
  1330   007FB0  5F                 	db	95	;'_'
  1331   007FB1  42                 	db	66	;'B'
  1332   007FB2  61                 	db	97	;'a'
  1333   007FB3  63                 	db	99	;'c'
  1334   007FB4  6B                 	db	107	;'k'
  1335   007FB5  77                 	db	119	;'w'
  1336   007FB6  61                 	db	97	;'a'
  1337   007FB7  72                 	db	114	;'r'
  1338   007FB8  64                 	db	100	;'d'
  1339   007FB9  00                 	db	0
  1340   007FBA                     STR_8:
  1341   007FBA  4C                 	db	76	;'L'
  1342   007FBB  61                 	db	97	;'a'
  1343   007FBC  64                 	db	100	;'d'
  1344   007FBD  64                 	db	100	;'d'
  1345   007FBE  65                 	db	101	;'e'
  1346   007FBF  72                 	db	114	;'r'
  1347   007FC0  5F                 	db	95	;'_'
  1348   007FC1  46                 	db	70	;'F'
  1349   007FC2  6F                 	db	111	;'o'
  1350   007FC3  72                 	db	114	;'r'
  1351   007FC4  77                 	db	119	;'w'
  1352   007FC5  61                 	db	97	;'a'
  1353   007FC6  72                 	db	114	;'r'
  1354   007FC7  64                 	db	100	;'d'
  1355   007FC8  00                 	db	0
  1356   007FC9                     STR_3:
  1357   007FC9  4D                 	db	77	;'M'
  1358   007FCA  6F                 	db	111	;'o'
  1359   007FCB  74                 	db	116	;'t'
  1360   007FCC  6F                 	db	111	;'o'
  1361   007FCD  72                 	db	114	;'r'
  1362   007FCE  5F                 	db	95	;'_'
  1363   007FCF  54                 	db	84	;'T'
  1364   007FD0  75                 	db	117	;'u'
  1365   007FD1  72                 	db	114	;'r'
  1366   007FD2  6E                 	db	110	;'n'
  1367   007FD3  4C                 	db	76	;'L'
  1368   007FD4  65                 	db	101	;'e'
  1369   007FD5  66                 	db	102	;'f'
  1370   007FD6  74                 	db	116	;'t'
  1371   007FD7  00                 	db	0
  1372   007FD8                     STR_2:
  1373   007FD8  4D                 	db	77	;'M'
  1374   007FD9  6F                 	db	111	;'o'
  1375   007FDA  74                 	db	116	;'t'
  1376   007FDB  6F                 	db	111	;'o'
  1377   007FDC  72                 	db	114	;'r'
  1378   007FDD  5F                 	db	95	;'_'
  1379   007FDE  46                 	db	70	;'F'
  1380   007FDF  6F                 	db	111	;'o'
  1381   007FE0  72                 	db	114	;'r'
  1382   007FE1  77                 	db	119	;'w'
  1383   007FE2  61                 	db	97	;'a'
  1384   007FE3  72                 	db	114	;'r'
  1385   007FE4  64                 	db	100	;'d'
  1386   007FE5  00                 	db	0
  1387   007FE6                     STR_7:
  1388   007FE6  63                 	db	99	;'c'
  1389   007FE7  68                 	db	104	;'h'
  1390   007FE8  61                 	db	97	;'a'
  1391   007FE9  6E                 	db	110	;'n'
  1392   007FEA  67                 	db	103	;'g'
  1393   007FEB  65                 	db	101	;'e'
  1394   007FEC  5F                 	db	95	;'_'
  1395   007FED  6D                 	db	109	;'m'
  1396   007FEE  75                 	db	117	;'u'
  1397   007FEF  73                 	db	115	;'s'
  1398   007FF0  69                 	db	105	;'i'
  1399   007FF1  63                 	db	99	;'c'
  1400   007FF2  00                 	db	0
  1401   007FF3                     STR_6:
  1402   007FF3  4D                 	db	77	;'M'
  1403   007FF4  6F                 	db	111	;'o'
  1404   007FF5  74                 	db	116	;'t'
  1405   007FF6  6F                 	db	111	;'o'
  1406   007FF7  72                 	db	114	;'r'
  1407   007FF8  5F                 	db	95	;'_'
  1408   007FF9  53                 	db	83	;'S'
  1409   007FFA  74                 	db	116	;'t'
  1410   007FFB  6F                 	db	111	;'o'
  1411   007FFC  70                 	db	112	;'p'
  1412   007FFD  00                 	db	0
  1413   007FFE  00                 	db	0	; dummy byte at the end
  1414   000002                     __activetblptr  equ	2
  1415                           
  1416                           ; #config settings
  1417                           
  1418                           	psect	cinit
  1419   000A42                     __pcinit:
  1420                           	callstack 0
  1421   000A42                     start_initialization:
  1422                           	callstack 0
  1423   000A42                     __initialization:
  1424                           	callstack 0
  1425                           
  1426                           ; Initialize objects allocated to BANK0 (2 bytes)
  1427                           ; load TBLPTR registers with __pidataBANK0
  1428   000A42  0E64               	movlw	low __pidataBANK0
  1429   000A44  6EF6               	movwf	tblptrl,c
  1430   000A46  0E0C               	movlw	high __pidataBANK0
  1431   000A48  6EF7               	movwf	tblptrh,c
  1432   000A4A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1433   000A4C  6EF8               	movwf	tblptru,c
  1434   000A4E  0009               	tblrd		*+	;fetch initializer
  1435   000A50  CFF5 F096          	movff	tablat,__pdataBANK0
  1436   000A54  0009               	tblrd		*+	;fetch initializer
  1437   000A56  CFF5 F097          	movff	tablat,__pdataBANK0+1
  1438                           
  1439                           ; Initialize objects allocated to COMRAM (6 bytes)
  1440                           ; load TBLPTR registers with __pidataCOMRAM
  1441   000A5A  0E5E               	movlw	low __pidataCOMRAM
  1442   000A5C  6EF6               	movwf	tblptrl,c
  1443   000A5E  0E0C               	movlw	high __pidataCOMRAM
  1444   000A60  6EF7               	movwf	tblptrh,c
  1445   000A62  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1446   000A64  6EF8               	movwf	tblptru,c
  1447   000A66  EE00  F04B         	lfsr	0,__pdataCOMRAM
  1448   000A6A  EE10 F006          	lfsr	1,6
  1449   000A6E                     copy_data0:
  1450   000A6E  0009               	tblrd		*+
  1451   000A70  CFF5 FFEE          	movff	tablat,postinc0
  1452   000A74  50E5               	movf	postdec1,w,c
  1453   000A76  50E1               	movf	fsr1l,w,c
  1454   000A78  E1FA               	bnz	copy_data0
  1455                           
  1456                           ; Clear objects allocated to COMRAM (10 bytes)
  1457   000A7A  EE00  F041         	lfsr	0,__pbssCOMRAM
  1458   000A7E  0E0A               	movlw	10
  1459   000A80                     clear_0:
  1460   000A80  6AEE               	clrf	postinc0,c
  1461   000A82  06E8               	decf	wreg,f,c
  1462   000A84  E1FD               	bnz	clear_0
  1463   000A86                     end_of_initialization:
  1464                           	callstack 0
  1465   000A86                     __end_of__initialization:
  1466                           	callstack 0
  1467   000A86  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1468   000A88  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1469   000A8A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1470   000A8C  6EF8               	movwf	tblptru,c
  1471   000A8E  0100               	movlb	0
  1472   000A90  EF8C  F001         	goto	_main	;jump to C main() function
  1473                           
  1474                           	psect	bssCOMRAM
  1475   000041                     __pbssCOMRAM:
  1476                           	callstack 0
  1477   000041                     _is_pause:
  1478                           	callstack 0
  1479   000041                     	ds	2
  1480   000043                     _playing:
  1481                           	callstack 0
  1482   000043                     	ds	2
  1483   000045                     _current_note:
  1484                           	callstack 0
  1485   000045                     	ds	2
  1486   000047                     _current_melody_length:
  1487                           	callstack 0
  1488   000047                     	ds	2
  1489   000049                     _current_melody:
  1490                           	callstack 0
  1491   000049                     	ds	2
  1492                           
  1493                           	psect	dataCOMRAM
  1494   00004B                     __pdataCOMRAM:
  1495                           	callstack 0
  1496   00004B                     _melodies:
  1497                           	callstack 0
  1498   00004B                     	ds	6
  1499                           
  1500                           	psect	dataBANK0
  1501   000096                     __pdataBANK0:
  1502                           	callstack 0
  1503   000096                     _current_song:
  1504                           	callstack 0
  1505   000096                     	ds	2
  1506                           
  1507                           	psect	cstackBANK0
  1508   000080                     __pcstackBANK0:
  1509                           	callstack 0
  1510   000080                     ?___aldiv:
  1511                           	callstack 0
  1512   000080                     ___aldiv@dividend:
  1513                           	callstack 0
  1514                           
  1515                           ; 4 bytes @ 0x0
  1516   000080                     	ds	4
  1517   000084                     ___aldiv@divisor:
  1518                           	callstack 0
  1519                           
  1520                           ; 4 bytes @ 0x4
  1521   000084                     	ds	4
  1522   000088                     ??_music_start:
  1523                           
  1524                           ; 1 bytes @ 0x8
  1525   000088                     	ds	4
  1526   00008C                     _music_start$1525:
  1527                           	callstack 0
  1528                           
  1529                           ; 4 bytes @ 0xC
  1530   00008C                     	ds	4
  1531   000090                     music_start@duration:
  1532                           	callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x10
  1535   000090                     	ds	2
  1536   000092                     ??_main:
  1537                           
  1538                           ; 1 bytes @ 0x12
  1539   000092                     	ds	1
  1540   000093                     main@ladder_state:
  1541                           	callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x13
  1544   000093                     	ds	2
  1545   000095                     main@get_value:
  1546                           	callstack 0
  1547                           
  1548                           ; 1 bytes @ 0x15
  1549   000095                     	ds	1
  1550                           
  1551                           	psect	cstackCOMRAM
  1552   000001                     __pcstackCOMRAM:
  1553                           	callstack 0
  1554   000001                     ?i2___lmul:
  1555                           	callstack 0
  1556   000001                     i2___lmul@multiplier:
  1557                           	callstack 0
  1558                           
  1559                           ; 4 bytes @ 0x0
  1560   000001                     	ds	4
  1561   000005                     i2___lmul@multiplicand:
  1562                           	callstack 0
  1563                           
  1564                           ; 4 bytes @ 0x4
  1565   000005                     	ds	4
  1566   000009                     i2___lmul@product:
  1567                           	callstack 0
  1568   000009                     
  1569                           ; 1 bytes @ 0x8
  1570   000009                     	ds	4
  1571   00000D                     ?i2___aldiv:
  1572                           	callstack 0
  1573   00000D                     i2___aldiv@dividend:
  1574                           	callstack 0
  1575                           
  1576                           ; 4 bytes @ 0xC
  1577   00000D                     	ds	4
  1578   000011                     i2___aldiv@divisor:
  1579                           	callstack 0
  1580                           
  1581                           ; 4 bytes @ 0x10
  1582   000011                     	ds	4
  1583   000015                     i2___aldiv@counter:
  1584                           	callstack 0
  1585   000015                     
  1586                           ; 1 bytes @ 0x14
  1587   000015                     	ds	1
  1588   000016                     i2___aldiv@sign:
  1589                           	callstack 0
  1590                           
  1591                           ; 1 bytes @ 0x15
  1592   000016                     	ds	1
  1593   000017                     i2___aldiv@quotient:
  1594                           	callstack 0
  1595                           
  1596                           ; 4 bytes @ 0x16
  1597   000017                     	ds	4
  1598   00001B                     ??_ISR:
  1599                           
  1600                           ; 1 bytes @ 0x1A
  1601   00001B                     	ds	10
  1602   000025                     ISR@duration:
  1603                           	callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x24
  1606   000025                     	ds	2
  1607   000027                     ISR@duration_827:
  1608                           	callstack 0
  1609                           
  1610                           ; 2 bytes @ 0x26
  1611   000027                     	ds	2
  1612   000029                     ISR@pause_time:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x28
  1616   000029                     	ds	2
  1617   00002B                     _ISR$1542:
  1618                           	callstack 0
  1619                           
  1620                           ; 4 bytes @ 0x2A
  1621   00002B                     	ds	4
  1622   00002F                     ?___lmul:
  1623                           	callstack 0
  1624   00002F                     BT_load_char@byte:
  1625                           	callstack 0
  1626   00002F                     ___lmul@multiplier:
  1627                           	callstack 0
  1628   00002F                     ??_Update_StepperMotor:
  1629                           
  1630                           ; 1 bytes @ 0x2E
  1631   00002F                     	ds	1
  1632   000030                     Update_StepperMotor@stepValue:
  1633                           	callstack 0
  1634   000030                     BT_load_string@string:
  1635                           	callstack 0
  1636                           
  1637                           ; 2 bytes @ 0x2F
  1638   000030                     	ds	1
  1639   000031                     Ladder_Forward@turns:
  1640                           	callstack 0
  1641   000031                     Ladder_Backward@turns:
  1642                           	callstack 0
  1643                           
  1644                           ; 2 bytes @ 0x30
  1645   000031                     	ds	1
  1646   000032                     
  1647                           ; 1 bytes @ 0x31
  1648   000032                     	ds	1
  1649   000033                     ___lmul@multiplicand:
  1650                           	callstack 0
  1651   000033                     ??_Ladder_Forward:
  1652   000033                     ??_Ladder_Backward:
  1653                           
  1654                           ; 1 bytes @ 0x32
  1655   000033                     	ds	2
  1656   000035                     Ladder_Forward@steps:
  1657                           	callstack 0
  1658   000035                     Ladder_Backward@steps:
  1659                           	callstack 0
  1660                           
  1661                           ; 2 bytes @ 0x34
  1662   000035                     	ds	2
  1663   000037                     Ladder_Forward@i:
  1664                           	callstack 0
  1665   000037                     Ladder_Backward@i:
  1666                           	callstack 0
  1667   000037                     ___lmul@product:
  1668                           	callstack 0
  1669   000037                     
  1670                           ; 1 bytes @ 0x36
  1671   000037                     	ds	2
  1672   000039                     Ladder_Forward@stepIndex:
  1673                           	callstack 0
  1674   000039                     Ladder_Backward@stepIndex:
  1675                           	callstack 0
  1676                           
  1677                           ; 2 bytes @ 0x38
  1678   000039                     	ds	2
  1679   00003B                     ___aldiv@counter:
  1680                           	callstack 0
  1681   00003B                     
  1682                           ; 1 bytes @ 0x3A
  1683   00003B                     	ds	1
  1684   00003C                     ___aldiv@sign:
  1685                           	callstack 0
  1686                           
  1687                           ; 1 bytes @ 0x3B
  1688   00003C                     	ds	1
  1689   00003D                     ___aldiv@quotient:
  1690                           	callstack 0
  1691                           
  1692                           ; 4 bytes @ 0x3C
  1693   00003D                     	ds	4
  1694                           
  1695 ;;
  1696 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1697 ;;
  1698 ;; *************** function _main *****************
  1699 ;; Defined at:
  1700 ;;		line 96 in file "bluetooth_main.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  get_value       1   21[BANK0 ] unsigned char 
  1705 ;;  ladder_state    2   19[BANK0 ] int 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1715 ;;      Params:         0       0       0       0       0       0       0
  1716 ;;      Locals:         0       3       0       0       0       0       0
  1717 ;;      Temps:          0       1       0       0       0       0       0
  1718 ;;      Totals:         0       4       0       0       0       0       0
  1719 ;;Total ram usage:        4 bytes
  1720 ;; Hardware stack levels required when called: 4
  1721 ;; This function calls:
  1722 ;;		_BT_get_char
  1723 ;;		_BT_load_char
  1724 ;;		_BT_load_string
  1725 ;;		_Initialize_Bluetooth
  1726 ;;		_Initialize_Buzzer
  1727 ;;		_Initialize_Ladder
  1728 ;;		_Initialize_Motor
  1729 ;;		_Ladder_Backward
  1730 ;;		_Ladder_Forward
  1731 ;;		_Motor_Backward
  1732 ;;		_Motor_Forward
  1733 ;;		_Motor_Stop
  1734 ;;		_Motor_TurnLeft
  1735 ;;		_Motor_TurnRight
  1736 ;;		_broadcast_BT
  1737 ;;		_music_start
  1738 ;; This function is called by:
  1739 ;;		Startup code after reset
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text0
  1744   000318                     __ptext0:
  1745                           	callstack 0
  1746   000318                     _main:
  1747                           	callstack 27
  1748   000318                     
  1749                           ;bluetooth_main.c: 98: 
  1750   000318  0E70               	movlw	112
  1751   00031A  12D3               	iorwf	211,f,c	;volatile
  1752   00031C                     
  1753                           ;bluetooth_main.c: 101:         if (get_value == 'w')
  1754   00031C  ECD5  F005         	call	_Initialize_Bluetooth	;wreg free
  1755                           
  1756                           ;bluetooth_main.c: 102:         {
  1757   000320  ECC4  F005         	call	_Initialize_Motor	;wreg free
  1758   000324                     
  1759                           ;bluetooth_main.c: 103:            Motor_Forward();
  1760   000324  EC9C  F005         	call	_Initialize_Buzzer	;wreg free
  1761   000328                     
  1762                           ;bluetooth_main.c: 104:            BT_load_string("Motor_Forward");
  1763   000328  EC26  F006         	call	_Initialize_Ladder	;wreg free
  1764   00032C                     
  1765                           ;bluetooth_main.c: 105:            broadcast_BT();
  1766   00032C  0E00               	movlw	0
  1767   00032E  0100               	movlb	0	; () banked
  1768   000330  6F94               	movwf	(main@ladder_state+1)& (0+255),b
  1769   000332  0E00               	movlw	0
  1770   000334  6F93               	movwf	main@ladder_state& (0+255),b
  1771   000336                     
  1772                           ; BSR set to: 0
  1773                           ;bluetooth_main.c: 108: 
  1774   000336  0E6B               	movlw	low STR_1
  1775   000338  6E30               	movwf	BT_load_string@string^0,c
  1776   00033A  0E7F               	movlw	high STR_1
  1777   00033C  6E31               	movwf	(BT_load_string@string+1)^0,c
  1778   00033E  EC81  F005         	call	_BT_load_string	;wreg free
  1779   000342                     l1900:
  1780                           
  1781                           ;bluetooth_main.c: 109: 
  1782   000342  ECE5  F005         	call	_broadcast_BT	;wreg free
  1783   000346                     l1902:
  1784                           
  1785                           ;bluetooth_main.c: 113:            BT_load_string("Motor_TurnLeft");;bluetooth_main.c: 1
      +                          15:            _delay((unsigned long)((80)*(8000000/4000.0)));
  1786   000346  EC4A  F005         	call	_BT_get_char	;wreg free
  1787   00034A  0100               	movlb	0	; () banked
  1788   00034C  6F95               	movwf	main@get_value& (0+255),b
  1789   00034E                     
  1790                           ; BSR set to: 0
  1791                           ;bluetooth_main.c: 117:         else if (get_value == 's')
  1792   00034E  0E77               	movlw	119
  1793   000350  1995               	xorwf	main@get_value& (0+255),w,b
  1794   000352  A4D8               	btfss	status,2,c
  1795   000354  EFAE  F001         	goto	u971
  1796   000358  EFB0  F001         	goto	u970
  1797   00035C                     u971:
  1798   00035C  EFC5  F001         	goto	l1914
  1799   000360                     u970:
  1800   000360                     
  1801                           ; BSR set to: 0
  1802                           ;bluetooth_main.c: 118:         {;bluetooth_main.c: 119:             Motor_Backward();
  1803   000360  EC14  F006         	call	_Motor_Forward	;wreg free
  1804   000364                     
  1805                           ;bluetooth_main.c: 120:             BT_load_string("Motor_Backward");
  1806   000364  0ED8               	movlw	low STR_2
  1807   000366  6E30               	movwf	BT_load_string@string^0,c
  1808   000368  0E7F               	movlw	high STR_2
  1809   00036A  6E31               	movwf	(BT_load_string@string+1)^0,c
  1810   00036C  EC81  F005         	call	_BT_load_string	;wreg free
  1811   000370                     l1910:
  1812                           
  1813                           ;bluetooth_main.c: 121:             broadcast_BT();
  1814   000370  ECE5  F005         	call	_broadcast_BT	;wreg free
  1815   000374                     
  1816                           ;bluetooth_main.c: 122:             _delay((unsigned long)((80)*(8000000/4000.0)));
  1817   000374  0ED0               	movlw	208
  1818   000376  0100               	movlb	0	; () banked
  1819   000378  6F92               	movwf	??_main& (0+255),b
  1820   00037A  0EC9               	movlw	201
  1821   00037C                     u1067:
  1822   00037C  2EE8               	decfsz	wreg,f,c
  1823   00037E  D7FE               	bra	u1067
  1824   000380  2F92               	decfsz	??_main& (0+255),f,b
  1825   000382  D7FC               	bra	u1067
  1826   000384  D000               	nop2	
  1827                           
  1828                           ;bluetooth_main.c: 123:         }
  1829   000386  EFA3  F001         	goto	l1902
  1830   00038A                     l1914:
  1831                           
  1832                           ; BSR set to: 0
  1833   00038A  0E61               	movlw	97
  1834   00038C  1995               	xorwf	main@get_value& (0+255),w,b
  1835   00038E  A4D8               	btfss	status,2,c
  1836   000390  EFCC  F001         	goto	u981
  1837   000394  EFCE  F001         	goto	u980
  1838   000398                     u981:
  1839   000398  EFD8  F001         	goto	l1924
  1840   00039C                     u980:
  1841   00039C                     
  1842                           ; BSR set to: 0
  1843                           ;bluetooth_main.c: 127:             BT_load_string("Motor_TurnRight");;bluetooth_main.c:
      +                           128:             broadcast_BT();
  1844   00039C  EC02  F006         	call	_Motor_TurnLeft	;wreg free
  1845   0003A0                     
  1846                           ;bluetooth_main.c: 129:             _delay((unsigned long)((80)*(8000000/4000.0)));
  1847   0003A0  0EC9               	movlw	low STR_3
  1848   0003A2  6E30               	movwf	BT_load_string@string^0,c
  1849   0003A4  0E7F               	movlw	high STR_3
  1850   0003A6  6E31               	movwf	(BT_load_string@string+1)^0,c
  1851   0003A8  EC81  F005         	call	_BT_load_string	;wreg free
  1852   0003AC  EFB8  F001         	goto	l1910
  1853   0003B0                     l1924:
  1854                           
  1855                           ; BSR set to: 0
  1856   0003B0  0E73               	movlw	115
  1857   0003B2  1995               	xorwf	main@get_value& (0+255),w,b
  1858   0003B4  A4D8               	btfss	status,2,c
  1859   0003B6  EFDF  F001         	goto	u991
  1860   0003BA  EFE1  F001         	goto	u990
  1861   0003BE                     u991:
  1862   0003BE  EFEB  F001         	goto	l1934
  1863   0003C2                     u990:
  1864   0003C2                     
  1865                           ; BSR set to: 0
  1866                           ;bluetooth_main.c: 134:             BT_load_string("Motor_Stop");;bluetooth_main.c: 135:
      +                                       broadcast_BT();
  1867   0003C2  EC1D  F006         	call	_Motor_Backward	;wreg free
  1868   0003C6                     
  1869                           ;bluetooth_main.c: 136:         }
  1870   0003C6  0EAB               	movlw	low STR_4
  1871   0003C8  6E30               	movwf	BT_load_string@string^0,c
  1872   0003CA  0E7F               	movlw	high STR_4
  1873   0003CC  6E31               	movwf	(BT_load_string@string+1)^0,c
  1874   0003CE  EC81  F005         	call	_BT_load_string	;wreg free
  1875   0003D2  EFB8  F001         	goto	l1910
  1876   0003D6                     l1934:
  1877                           
  1878                           ; BSR set to: 0
  1879   0003D6  0E64               	movlw	100
  1880   0003D8  1995               	xorwf	main@get_value& (0+255),w,b
  1881   0003DA  A4D8               	btfss	status,2,c
  1882   0003DC  EFF2  F001         	goto	u1001
  1883   0003E0  EFF4  F001         	goto	u1000
  1884   0003E4                     u1001:
  1885   0003E4  EFFE  F001         	goto	l1944
  1886   0003E8                     u1000:
  1887   0003E8                     
  1888                           ; BSR set to: 0
  1889                           ;bluetooth_main.c: 141:             music_start();;bluetooth_main.c: 142:         }
  1890   0003E8  ECF9  F005         	call	_Motor_TurnRight	;wreg free
  1891   0003EC                     
  1892                           ;bluetooth_main.c: 143: 
  1893   0003EC  0E9B               	movlw	low STR_5
  1894   0003EE  6E30               	movwf	BT_load_string@string^0,c
  1895   0003F0  0E7F               	movlw	high STR_5
  1896   0003F2  6E31               	movwf	(BT_load_string@string+1)^0,c
  1897   0003F4  EC81  F005         	call	_BT_load_string	;wreg free
  1898   0003F8  EFB8  F001         	goto	l1910
  1899   0003FC                     l1944:
  1900                           
  1901                           ; BSR set to: 0
  1902   0003FC  0E71               	movlw	113
  1903   0003FE  1995               	xorwf	main@get_value& (0+255),w,b
  1904   000400  A4D8               	btfss	status,2,c
  1905   000402  EF05  F002         	goto	u1011
  1906   000406  EF07  F002         	goto	u1010
  1907   00040A                     u1011:
  1908   00040A  EF11  F002         	goto	l1952
  1909   00040E                     u1010:
  1910   00040E                     
  1911                           ; BSR set to: 0
  1912                           ;bluetooth_main.c: 148:                 BT_load_string("Ladder_Forward");;bluetooth_main
      +                          .c: 149:                 broadcast_BT();
  1913   00040E  EC0B  F006         	call	_Motor_Stop	;wreg free
  1914   000412                     
  1915                           ;bluetooth_main.c: 150:                 Ladder_Forward(10);
  1916   000412  0EF3               	movlw	low STR_6
  1917   000414  6E30               	movwf	BT_load_string@string^0,c
  1918   000416  0E7F               	movlw	high STR_6
  1919   000418  6E31               	movwf	(BT_load_string@string+1)^0,c
  1920   00041A  EC81  F005         	call	_BT_load_string	;wreg free
  1921   00041E  EFA1  F001         	goto	l1900
  1922   000422                     l1952:
  1923                           
  1924                           ; BSR set to: 0
  1925   000422  0E70               	movlw	112
  1926   000424  1995               	xorwf	main@get_value& (0+255),w,b
  1927   000426  A4D8               	btfss	status,2,c
  1928   000428  EF18  F002         	goto	u1021
  1929   00042C  EF1A  F002         	goto	u1020
  1930   000430                     u1021:
  1931   000430  EF26  F002         	goto	l1960
  1932   000434                     u1020:
  1933   000434                     
  1934                           ; BSR set to: 0
  1935                           ;bluetooth_main.c: 154:             {;bluetooth_main.c: 155:                 BT_load_str
      +                          ing("Ladder_Backward");
  1936   000434  0EE6               	movlw	low STR_7
  1937   000436  6E30               	movwf	BT_load_string@string^0,c
  1938   000438  0E7F               	movlw	high STR_7
  1939   00043A  6E31               	movwf	(BT_load_string@string+1)^0,c
  1940   00043C  EC81  F005         	call	_BT_load_string	;wreg free
  1941   000440                     
  1942                           ;bluetooth_main.c: 156:                 broadcast_BT();
  1943   000440  ECE5  F005         	call	_broadcast_BT	;wreg free
  1944   000444                     
  1945                           ;bluetooth_main.c: 157:                 Ladder_Backward(10);
  1946   000444  EC77  F002         	call	_music_start	;wreg free
  1947                           
  1948                           ;bluetooth_main.c: 158:                 ladder_state = 0;
  1949   000448  EFA3  F001         	goto	l1902
  1950   00044C                     l1960:
  1951                           
  1952                           ; BSR set to: 0
  1953   00044C  0E6C               	movlw	108
  1954   00044E  1995               	xorwf	main@get_value& (0+255),w,b
  1955   000450  A4D8               	btfss	status,2,c
  1956   000452  EF2D  F002         	goto	u1031
  1957   000456  EF2F  F002         	goto	u1030
  1958   00045A                     u1031:
  1959   00045A  EF62  F002         	goto	l1980
  1960   00045E                     u1030:
  1961   00045E                     
  1962                           ; BSR set to: 0
  1963                           ;bluetooth_main.c: 161: ;bluetooth_main.c: 162:         else if (get_value != 0)
  1964   00045E  5193               	movf	main@ladder_state& (0+255),w,b
  1965   000460  1194               	iorwf	(main@ladder_state+1)& (0+255),w,b
  1966   000462  A4D8               	btfss	status,2,c
  1967   000464  EF36  F002         	goto	u1041
  1968   000468  EF38  F002         	goto	u1040
  1969   00046C                     u1041:
  1970   00046C  EF4D  F002         	goto	l1972
  1971   000470                     u1040:
  1972   000470                     
  1973                           ; BSR set to: 0
  1974                           ;bluetooth_main.c: 163:         {;bluetooth_main.c: 164:             BT_load_char(get_va
      +                          lue);
  1975   000470  0EBA               	movlw	low STR_8
  1976   000472  6E30               	movwf	BT_load_string@string^0,c
  1977   000474  0E7F               	movlw	high STR_8
  1978   000476  6E31               	movwf	(BT_load_string@string+1)^0,c
  1979   000478  EC81  F005         	call	_BT_load_string	;wreg free
  1980   00047C                     
  1981                           ;bluetooth_main.c: 165:             broadcast_BT();
  1982   00047C  ECE5  F005         	call	_broadcast_BT	;wreg free
  1983   000480                     
  1984                           ;bluetooth_main.c: 166:         }
  1985   000480  0E00               	movlw	0
  1986   000482  6E32               	movwf	(Ladder_Forward@turns+1)^0,c
  1987   000484  0E0A               	movlw	10
  1988   000486  6E31               	movwf	Ladder_Forward@turns^0,c
  1989   000488  EC29  F004         	call	_Ladder_Forward	;wreg free
  1990   00048C                     
  1991                           ;bluetooth_main.c: 167:         else
  1992   00048C  0E00               	movlw	0
  1993   00048E  0100               	movlb	0	; () banked
  1994   000490  6F94               	movwf	(main@ladder_state+1)& (0+255),b
  1995   000492  0E01               	movlw	1
  1996   000494  6F93               	movwf	main@ladder_state& (0+255),b
  1997                           
  1998                           ;bluetooth_main.c: 168:         {
  1999   000496  EFA3  F001         	goto	l1902
  2000   00049A                     l1972:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;bluetooth_main.c: 170:         };bluetooth_main.c: 171:     }
  2004   00049A  0E8B               	movlw	low STR_9
  2005   00049C  6E30               	movwf	BT_load_string@string^0,c
  2006   00049E  0E7F               	movlw	high STR_9
  2007   0004A0  6E31               	movwf	(BT_load_string@string+1)^0,c
  2008   0004A2  EC81  F005         	call	_BT_load_string	;wreg free
  2009   0004A6                     
  2010                           ;bluetooth_main.c: 172:     return;
  2011   0004A6  ECE5  F005         	call	_broadcast_BT	;wreg free
  2012   0004AA                     
  2013                           ;bluetooth_main.c: 173: }
  2014   0004AA  0E00               	movlw	0
  2015   0004AC  6E32               	movwf	(Ladder_Backward@turns+1)^0,c
  2016   0004AE  0E0A               	movlw	10
  2017   0004B0  6E31               	movwf	Ladder_Backward@turns^0,c
  2018   0004B2  EC70  F004         	call	_Ladder_Backward	;wreg free
  2019   0004B6  0E00               	movlw	0
  2020   0004B8  0100               	movlb	0	; () banked
  2021   0004BA  6F94               	movwf	(main@ladder_state+1)& (0+255),b
  2022   0004BC  0E00               	movlw	0
  2023   0004BE  6F93               	movwf	main@ladder_state& (0+255),b
  2024   0004C0  EFA3  F001         	goto	l1902
  2025   0004C4                     l1980:
  2026                           
  2027                           ; BSR set to: 0
  2028   0004C4  5195               	movf	main@get_value& (0+255),w,b
  2029   0004C6  B4D8               	btfsc	status,2,c
  2030   0004C8  EF68  F002         	goto	u1051
  2031   0004CC  EF6A  F002         	goto	u1050
  2032   0004D0                     u1051:
  2033   0004D0  EF71  F002         	goto	l1984
  2034   0004D4                     u1050:
  2035   0004D4                     
  2036                           ; BSR set to: 0
  2037   0004D4  5195               	movf	main@get_value& (0+255),w,b
  2038   0004D6  ECB2  F005         	call	_BT_load_char
  2039   0004DA  ECE5  F005         	call	_broadcast_BT	;wreg free
  2040   0004DE  EFA3  F001         	goto	l1902
  2041   0004E2                     l1984:
  2042                           
  2043                           ; BSR set to: 0
  2044   0004E2  EC0B  F006         	call	_Motor_Stop	;wreg free
  2045   0004E6  EFA3  F001         	goto	l1902
  2046   0004EA  EF07  F000         	goto	start
  2047   0004EE                     __end_of_main:
  2048                           	callstack 0
  2049                           
  2050 ;; *************** function _music_start *****************
  2051 ;; Defined at:
  2052 ;;		line 105 in file "buzzer.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  duration        2   16[BANK0 ] int 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2066 ;;      Params:         0       0       0       0       0       0       0
  2067 ;;      Locals:         0       6       0       0       0       0       0
  2068 ;;      Temps:          0       4       0       0       0       0       0
  2069 ;;      Totals:         0      10       0       0       0       0       0
  2070 ;;Total ram usage:       10 bytes
  2071 ;; Hardware stack levels used: 1
  2072 ;; Hardware stack levels required when called: 3
  2073 ;; This function calls:
  2074 ;;		_Initialize_Songs
  2075 ;;		___aldiv
  2076 ;;		___lmul
  2077 ;; This function is called by:
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text1
  2083   0004EE                     __ptext1:
  2084                           	callstack 0
  2085   0004EE                     _music_start:
  2086                           	callstack 27
  2087   0004EE  0E02               	movlw	2
  2088   0004F0  0100               	movlb	0	; () banked
  2089   0004F2  1996               	xorwf	_current_song& (0+255),w,b
  2090   0004F4  1197               	iorwf	(_current_song+1)& (0+255),w,b
  2091   0004F6  A4D8               	btfss	status,2,c
  2092   0004F8  EF80  F002         	goto	u921
  2093   0004FC  EF82  F002         	goto	u920
  2094   000500                     u921:
  2095   000500  EF8C  F002         	goto	l1834
  2096   000504                     u920:
  2097   000504                     
  2098                           ; BSR set to: 0
  2099                           ;buzzer.c: 108:     {;buzzer.c: 109:         playing = 0;
  2100   000504  0E00               	movlw	0
  2101   000506  6E44               	movwf	(_playing+1)^0,c
  2102   000508  0E00               	movlw	0
  2103   00050A  6E43               	movwf	_playing^0,c
  2104   00050C                     
  2105                           ; BSR set to: 0
  2106                           ;buzzer.c: 110:         current_song = -1;
  2107   00050C  6996               	setf	_current_song& (0+255),b
  2108   00050E  6997               	setf	(_current_song+1)& (0+255),b
  2109   000510                     
  2110                           ; BSR set to: 0
  2111                           ;buzzer.c: 111:         CCPR1L = 0;
  2112   000510  6ABE               	clrf	190,c	;volatile
  2113   000512                     
  2114                           ; BSR set to: 0
  2115                           ;buzzer.c: 112:         T0CONbits.TMR0ON = 0;
  2116   000512  9ED5               	bcf	213,7,c	;volatile
  2117   000514  EF1D  F003         	goto	l228
  2118   000518                     l1834:
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;buzzer.c: 116:     current_song++;
  2122   000518  4B96               	infsnz	_current_song& (0+255),f,b
  2123   00051A  2B97               	incf	(_current_song+1)& (0+255),f,b
  2124   00051C                     
  2125                           ; BSR set to: 0
  2126                           ;buzzer.c: 117:     Initialize_Songs();
  2127   00051C  EC66  F005         	call	_Initialize_Songs	;wreg free
  2128   000520                     
  2129                           ;buzzer.c: 119:     playing = 1;
  2130   000520  0E00               	movlw	0
  2131   000522  6E44               	movwf	(_playing+1)^0,c
  2132   000524  0E01               	movlw	1
  2133   000526  6E43               	movwf	_playing^0,c
  2134   000528                     
  2135                           ;buzzer.c: 120:     current_note = 0;
  2136   000528  0E00               	movlw	0
  2137   00052A  6E46               	movwf	(_current_note+1)^0,c
  2138   00052C  0E00               	movlw	0
  2139   00052E  6E45               	movwf	_current_note^0,c
  2140   000530                     
  2141                           ;buzzer.c: 121:     is_pause = 0;
  2142   000530  0E00               	movlw	0
  2143   000532  6E42               	movwf	(_is_pause+1)^0,c
  2144   000534  0E00               	movlw	0
  2145   000536  6E41               	movwf	_is_pause^0,c
  2146   000538                     
  2147                           ;buzzer.c: 124:     PR2 = current_melody[current_note][0];
  2148   000538  0E06               	movlw	6
  2149   00053A  0245               	mulwf	_current_note^0,c
  2150   00053C  CFF3 F088          	movff	prodl,??_music_start
  2151   000540  CFF4 F089          	movff	prodh,??_music_start+1
  2152   000544  0246               	mulwf	(_current_note+1)^0,c
  2153   000546  50F3               	movf	prodl,w,c
  2154   000548  0100               	movlb	0	; () banked
  2155   00054A  2789               	addwf	(??_music_start+1)& (0+255),f,b
  2156   00054C  5188               	movf	??_music_start& (0+255),w,b
  2157   00054E  2449               	addwf	_current_melody^0,w,c
  2158   000550  6F8A               	movwf	(??_music_start+2)& (0+255),b
  2159   000552  5189               	movf	(??_music_start+1)& (0+255),w,b
  2160   000554  204A               	addwfc	(_current_melody+1)^0,w,c
  2161   000556  6F8B               	movwf	(??_music_start+3)& (0+255),b
  2162   000558  C08A  FFF6         	movff	??_music_start+2,tblptrl
  2163   00055C  C08B  FFF7         	movff	??_music_start+3,tblptrh
  2164   000560                     	if	0	;tblptru may be non-zero
  2165   000560                     	endif
  2166   000560                     	if	0	;tblptru may be non-zero
  2167   000560                     	endif
  2168   000560  0008               	tblrd		*
  2169   000562  CFF5 FFCB          	movff	tablat,4043	;volatile
  2170   000566                     
  2171                           ; BSR set to: 0
  2172                           ;buzzer.c: 125:     CCPR1L = PR2 >> 4;
  2173   000566  38CB               	swapf	203,w,c	;volatile
  2174   000568  0B0F               	andlw	15
  2175   00056A  6EBE               	movwf	190,c	;volatile
  2176   00056C                     
  2177                           ; BSR set to: 0
  2178                           ;buzzer.c: 128:     int duration = current_melody[current_note][1];
  2179   00056C  0E06               	movlw	6
  2180   00056E  0245               	mulwf	_current_note^0,c
  2181   000570  CFF3 F088          	movff	prodl,??_music_start
  2182   000574  CFF4 F089          	movff	prodh,??_music_start+1
  2183   000578  0246               	mulwf	(_current_note+1)^0,c
  2184   00057A  50F3               	movf	prodl,w,c
  2185   00057C  2789               	addwf	(??_music_start+1)& (0+255),f,b
  2186   00057E  5188               	movf	??_music_start& (0+255),w,b
  2187   000580  2449               	addwf	_current_melody^0,w,c
  2188   000582  6F8A               	movwf	(??_music_start+2)& (0+255),b
  2189   000584  5189               	movf	(??_music_start+1)& (0+255),w,b
  2190   000586  204A               	addwfc	(_current_melody+1)^0,w,c
  2191   000588  6F8B               	movwf	(??_music_start+3)& (0+255),b
  2192   00058A  0E02               	movlw	2
  2193   00058C  278A               	addwf	(??_music_start+2)& (0+255),f,b
  2194   00058E  0E00               	movlw	0
  2195   000590  238B               	addwfc	(??_music_start+3)& (0+255),f,b
  2196   000592  C08A  FFF6         	movff	??_music_start+2,tblptrl
  2197   000596  C08B  FFF7         	movff	??_music_start+3,tblptrh
  2198   00059A                     	if	0	;tblptru may be non-zero
  2199   00059A                     	endif
  2200   00059A                     	if	0	;tblptru may be non-zero
  2201   00059A                     	endif
  2202   00059A  0009               	tblrd		*+
  2203   00059C  CFF5 F090          	movff	tablat,music_start@duration
  2204   0005A0  000A               	tblrd		*-
  2205   0005A2  CFF5 F091          	movff	tablat,music_start@duration+1
  2206   0005A6                     
  2207                           ; BSR set to: 0
  2208                           ;buzzer.c: 129:     TMR0 = 65536 - (duration * (8000000 / 8) / 32 / 1000);
  2209   0005A6  0E20               	movlw	32
  2210   0005A8  6F84               	movwf	___aldiv@divisor& (0+255),b
  2211   0005AA  0E00               	movlw	0
  2212   0005AC  6F85               	movwf	(___aldiv@divisor+1)& (0+255),b
  2213   0005AE  0E00               	movlw	0
  2214   0005B0  6F86               	movwf	(___aldiv@divisor+2)& (0+255),b
  2215   0005B2  0E00               	movlw	0
  2216   0005B4  6F87               	movwf	(___aldiv@divisor+3)& (0+255),b
  2217   0005B6  C090  F02F         	movff	music_start@duration,___lmul@multiplier
  2218   0005BA  C091  F030         	movff	music_start@duration+1,___lmul@multiplier+1
  2219   0005BE  0E00               	movlw	0
  2220   0005C0  BE30               	btfsc	(___lmul@multiplier+1)^0,7,c
  2221   0005C2  0EFF               	movlw	-1
  2222   0005C4  6E31               	movwf	(___lmul@multiplier+2)^0,c
  2223   0005C6  6E32               	movwf	(___lmul@multiplier+3)^0,c
  2224   0005C8  0E40               	movlw	64
  2225   0005CA  6E33               	movwf	___lmul@multiplicand^0,c
  2226   0005CC  0E42               	movlw	66
  2227   0005CE  6E34               	movwf	(___lmul@multiplicand+1)^0,c
  2228   0005D0  0E0F               	movlw	15
  2229   0005D2  6E35               	movwf	(___lmul@multiplicand+2)^0,c
  2230   0005D4  0E00               	movlw	0
  2231   0005D6  6E36               	movwf	(___lmul@multiplicand+3)^0,c
  2232   0005D8  ECB7  F004         	call	___lmul	;wreg free
  2233   0005DC  C02F  F080         	movff	?___lmul,___aldiv@dividend
  2234   0005E0  C030  F081         	movff	?___lmul+1,___aldiv@dividend+1
  2235   0005E4  C031  F082         	movff	?___lmul+2,___aldiv@dividend+2
  2236   0005E8  C032  F083         	movff	?___lmul+3,___aldiv@dividend+3
  2237   0005EC  EC1E  F003         	call	___aldiv	;wreg free
  2238   0005F0  C080  F08C         	movff	?___aldiv,_music_start$1525
  2239   0005F4  C081  F08D         	movff	?___aldiv+1,_music_start$1525+1
  2240   0005F8  C082  F08E         	movff	?___aldiv+2,_music_start$1525+2
  2241   0005FC  C083  F08F         	movff	?___aldiv+3,_music_start$1525+3
  2242   000600                     
  2243                           ;buzzer.c: 129:     TMR0 = 65536 - (duration * (8000000 / 8) / 32 / 1000);
  2244   000600  C08C  F080         	movff	_music_start$1525,___aldiv@dividend
  2245   000604  C08D  F081         	movff	_music_start$1525+1,___aldiv@dividend+1
  2246   000608  C08E  F082         	movff	_music_start$1525+2,___aldiv@dividend+2
  2247   00060C  C08F  F083         	movff	_music_start$1525+3,___aldiv@dividend+3
  2248   000610  0EE8               	movlw	232
  2249   000612  0100               	movlb	0	; () banked
  2250   000614  6F84               	movwf	___aldiv@divisor& (0+255),b
  2251   000616  0E03               	movlw	3
  2252   000618  6F85               	movwf	(___aldiv@divisor+1)& (0+255),b
  2253   00061A  0E00               	movlw	0
  2254   00061C  6F86               	movwf	(___aldiv@divisor+2)& (0+255),b
  2255   00061E  0E00               	movlw	0
  2256   000620  6F87               	movwf	(___aldiv@divisor+3)& (0+255),b
  2257   000622  EC1E  F003         	call	___aldiv	;wreg free
  2258   000626  0100               	movlb	0	; () banked
  2259   000628  5180               	movf	?___aldiv& (0+255),w,b
  2260   00062A  0800               	sublw	0
  2261   00062C  6ED6               	movwf	214,c	;volatile
  2262   00062E  5181               	movf	(?___aldiv+1)& (0+255),w,b
  2263   000630  A0D8               	btfss	status,0,c
  2264   000632  2AE8               	incf	wreg,f,c
  2265   000634  0800               	sublw	0
  2266   000636  6ED7               	movwf	215,c	;volatile
  2267   000638                     
  2268                           ; BSR set to: 0
  2269                           ;buzzer.c: 130:     T0CONbits.TMR0ON = 1;
  2270   000638  8ED5               	bsf	213,7,c	;volatile
  2271   00063A                     l228:
  2272                           
  2273                           ; BSR set to: 0
  2274   00063A  0012               	return		;funcret
  2275   00063C                     __end_of_music_start:
  2276                           	callstack 0
  2277                           
  2278 ;; *************** function ___lmul *****************
  2279 ;; Defined at:
  2280 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  multiplier      4   46[COMRAM] unsigned long 
  2283 ;;  multiplicand    4   50[COMRAM] unsigned long 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  product         4   54[COMRAM] unsigned long 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  4   46[COMRAM] unsigned long 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2295 ;;      Params:         8       0       0       0       0       0       0
  2296 ;;      Locals:         4       0       0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0       0       0
  2298 ;;      Totals:        12       0       0       0       0       0       0
  2299 ;;Total ram usage:       12 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 2
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_music_start
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text2
  2310   00096E                     __ptext2:
  2311                           	callstack 0
  2312   00096E                     ___lmul:
  2313                           	callstack 27
  2314   00096E  0E00               	movlw	0
  2315   000970  6E37               	movwf	___lmul@product^0,c
  2316   000972  0E00               	movlw	0
  2317   000974  6E38               	movwf	(___lmul@product+1)^0,c
  2318   000976  0E00               	movlw	0
  2319   000978  6E39               	movwf	(___lmul@product+2)^0,c
  2320   00097A  0E00               	movlw	0
  2321   00097C  6E3A               	movwf	(___lmul@product+3)^0,c
  2322   00097E                     l1684:
  2323   00097E  A02F               	btfss	___lmul@multiplier^0,0,c
  2324   000980  EFC4  F004         	goto	u791
  2325   000984  EFC6  F004         	goto	u790
  2326   000988                     u791:
  2327   000988  EFCE  F004         	goto	l1688
  2328   00098C                     u790:
  2329   00098C  5033               	movf	___lmul@multiplicand^0,w,c
  2330   00098E  2637               	addwf	___lmul@product^0,f,c
  2331   000990  5034               	movf	(___lmul@multiplicand+1)^0,w,c
  2332   000992  2238               	addwfc	(___lmul@product+1)^0,f,c
  2333   000994  5035               	movf	(___lmul@multiplicand+2)^0,w,c
  2334   000996  2239               	addwfc	(___lmul@product+2)^0,f,c
  2335   000998  5036               	movf	(___lmul@multiplicand+3)^0,w,c
  2336   00099A  223A               	addwfc	(___lmul@product+3)^0,f,c
  2337   00099C                     l1688:
  2338   00099C  90D8               	bcf	status,0,c
  2339   00099E  3633               	rlcf	___lmul@multiplicand^0,f,c
  2340   0009A0  3634               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2341   0009A2  3635               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2342   0009A4  3636               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2343   0009A6  90D8               	bcf	status,0,c
  2344   0009A8  3232               	rrcf	(___lmul@multiplier+3)^0,f,c
  2345   0009AA  3231               	rrcf	(___lmul@multiplier+2)^0,f,c
  2346   0009AC  3230               	rrcf	(___lmul@multiplier+1)^0,f,c
  2347   0009AE  322F               	rrcf	___lmul@multiplier^0,f,c
  2348   0009B0  502F               	movf	___lmul@multiplier^0,w,c
  2349   0009B2  1030               	iorwf	(___lmul@multiplier+1)^0,w,c
  2350   0009B4  1031               	iorwf	(___lmul@multiplier+2)^0,w,c
  2351   0009B6  1032               	iorwf	(___lmul@multiplier+3)^0,w,c
  2352   0009B8  A4D8               	btfss	status,2,c
  2353   0009BA  EFE1  F004         	goto	u801
  2354   0009BE  EFE3  F004         	goto	u800
  2355   0009C2                     u801:
  2356   0009C2  EFBF  F004         	goto	l1684
  2357   0009C6                     u800:
  2358   0009C6  C037  F02F         	movff	___lmul@product,?___lmul
  2359   0009CA  C038  F030         	movff	___lmul@product+1,?___lmul+1
  2360   0009CE  C039  F031         	movff	___lmul@product+2,?___lmul+2
  2361   0009D2  C03A  F032         	movff	___lmul@product+3,?___lmul+3
  2362   0009D6  0012               	return		;funcret
  2363   0009D8                     __end_of___lmul:
  2364                           	callstack 0
  2365                           
  2366 ;; *************** function ___aldiv *****************
  2367 ;; Defined at:
  2368 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  dividend        4    0[BANK0 ] long 
  2371 ;;  divisor         4    4[BANK0 ] long 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  quotient        4   60[COMRAM] long 
  2374 ;;  sign            1   59[COMRAM] unsigned char 
  2375 ;;  counter         1   58[COMRAM] unsigned char 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  4    0[BANK0 ] long 
  2378 ;; Registers used:
  2379 ;;		wreg, status,2, status,0
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2385 ;;      Params:         0       8       0       0       0       0       0
  2386 ;;      Locals:         6       0       0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0
  2388 ;;      Totals:         6       8       0       0       0       0       0
  2389 ;;Total ram usage:       14 bytes
  2390 ;; Hardware stack levels used: 1
  2391 ;; Hardware stack levels required when called: 2
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_music_start
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text3
  2400   00063C                     __ptext3:
  2401                           	callstack 0
  2402   00063C                     ___aldiv:
  2403                           	callstack 27
  2404   00063C  6A3C               	clrf	___aldiv@sign^0,c
  2405   00063E  0100               	movlb	0	; () banked
  2406   000640  BF87               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  2407   000642  EF27  F003         	goto	u810
  2408   000646  EF25  F003         	goto	u811
  2409   00064A                     u811:
  2410   00064A  EF31  F003         	goto	l1700
  2411   00064E                     u810:
  2412   00064E                     
  2413                           ; BSR set to: 0
  2414   00064E  1F87               	comf	(___aldiv@divisor+3)& (0+255),f,b
  2415   000650  1F86               	comf	(___aldiv@divisor+2)& (0+255),f,b
  2416   000652  1F85               	comf	(___aldiv@divisor+1)& (0+255),f,b
  2417   000654  6D84               	negf	___aldiv@divisor& (0+255),b
  2418   000656  0E00               	movlw	0
  2419   000658  2385               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  2420   00065A  2386               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  2421   00065C  2387               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  2422   00065E                     
  2423                           ; BSR set to: 0
  2424   00065E  0E01               	movlw	1
  2425   000660  6E3C               	movwf	___aldiv@sign^0,c
  2426   000662                     l1700:
  2427                           
  2428                           ; BSR set to: 0
  2429   000662  BF83               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  2430   000664  EF38  F003         	goto	u820
  2431   000668  EF36  F003         	goto	u821
  2432   00066C                     u821:
  2433   00066C  EF42  F003         	goto	l1706
  2434   000670                     u820:
  2435   000670                     
  2436                           ; BSR set to: 0
  2437   000670  1F83               	comf	(___aldiv@dividend+3)& (0+255),f,b
  2438   000672  1F82               	comf	(___aldiv@dividend+2)& (0+255),f,b
  2439   000674  1F81               	comf	(___aldiv@dividend+1)& (0+255),f,b
  2440   000676  6D80               	negf	___aldiv@dividend& (0+255),b
  2441   000678  0E00               	movlw	0
  2442   00067A  2381               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  2443   00067C  2382               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  2444   00067E  2383               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  2445   000680                     
  2446                           ; BSR set to: 0
  2447   000680  0E01               	movlw	1
  2448   000682  1A3C               	xorwf	___aldiv@sign^0,f,c
  2449   000684                     l1706:
  2450                           
  2451                           ; BSR set to: 0
  2452   000684  0E00               	movlw	0
  2453   000686  6E3D               	movwf	___aldiv@quotient^0,c
  2454   000688  0E00               	movlw	0
  2455   00068A  6E3E               	movwf	(___aldiv@quotient+1)^0,c
  2456   00068C  0E00               	movlw	0
  2457   00068E  6E3F               	movwf	(___aldiv@quotient+2)^0,c
  2458   000690  0E00               	movlw	0
  2459   000692  6E40               	movwf	(___aldiv@quotient+3)^0,c
  2460   000694                     
  2461                           ; BSR set to: 0
  2462   000694  5184               	movf	___aldiv@divisor& (0+255),w,b
  2463   000696  1185               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  2464   000698  1186               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  2465   00069A  1187               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  2466   00069C  B4D8               	btfsc	status,2,c
  2467   00069E  EF53  F003         	goto	u831
  2468   0006A2  EF55  F003         	goto	u830
  2469   0006A6                     u831:
  2470   0006A6  EF8B  F003         	goto	l1728
  2471   0006AA                     u830:
  2472   0006AA                     
  2473                           ; BSR set to: 0
  2474   0006AA  0E01               	movlw	1
  2475   0006AC  6E3B               	movwf	___aldiv@counter^0,c
  2476   0006AE  EF5F  F003         	goto	l1714
  2477   0006B2                     l1712:
  2478                           
  2479                           ; BSR set to: 0
  2480   0006B2  90D8               	bcf	status,0,c
  2481   0006B4  3784               	rlcf	___aldiv@divisor& (0+255),f,b
  2482   0006B6  3785               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  2483   0006B8  3786               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  2484   0006BA  3787               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  2485   0006BC  2A3B               	incf	___aldiv@counter^0,f,c
  2486   0006BE                     l1714:
  2487                           
  2488                           ; BSR set to: 0
  2489   0006BE  AF87               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  2490   0006C0  EF64  F003         	goto	u841
  2491   0006C4  EF66  F003         	goto	u840
  2492   0006C8                     u841:
  2493   0006C8  EF59  F003         	goto	l1712
  2494   0006CC                     u840:
  2495   0006CC                     l1716:
  2496                           
  2497                           ; BSR set to: 0
  2498   0006CC  90D8               	bcf	status,0,c
  2499   0006CE  363D               	rlcf	___aldiv@quotient^0,f,c
  2500   0006D0  363E               	rlcf	(___aldiv@quotient+1)^0,f,c
  2501   0006D2  363F               	rlcf	(___aldiv@quotient+2)^0,f,c
  2502   0006D4  3640               	rlcf	(___aldiv@quotient+3)^0,f,c
  2503   0006D6                     
  2504                           ; BSR set to: 0
  2505   0006D6  5184               	movf	___aldiv@divisor& (0+255),w,b
  2506   0006D8  5D80               	subwf	___aldiv@dividend& (0+255),w,b
  2507   0006DA  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
  2508   0006DC  5981               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  2509   0006DE  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
  2510   0006E0  5982               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  2511   0006E2  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
  2512   0006E4  5983               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  2513   0006E6  A0D8               	btfss	status,0,c
  2514   0006E8  EF78  F003         	goto	u851
  2515   0006EC  EF7A  F003         	goto	u850
  2516   0006F0                     u851:
  2517   0006F0  EF83  F003         	goto	l1724
  2518   0006F4                     u850:
  2519   0006F4                     
  2520                           ; BSR set to: 0
  2521   0006F4  5184               	movf	___aldiv@divisor& (0+255),w,b
  2522   0006F6  5F80               	subwf	___aldiv@dividend& (0+255),f,b
  2523   0006F8  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
  2524   0006FA  5B81               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  2525   0006FC  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
  2526   0006FE  5B82               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  2527   000700  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
  2528   000702  5B83               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  2529   000704                     
  2530                           ; BSR set to: 0
  2531   000704  803D               	bsf	___aldiv@quotient^0,0,c
  2532   000706                     l1724:
  2533                           
  2534                           ; BSR set to: 0
  2535   000706  90D8               	bcf	status,0,c
  2536   000708  3387               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  2537   00070A  3386               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  2538   00070C  3385               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  2539   00070E  3384               	rrcf	___aldiv@divisor& (0+255),f,b
  2540   000710                     
  2541                           ; BSR set to: 0
  2542   000710  2E3B               	decfsz	___aldiv@counter^0,f,c
  2543   000712  EF66  F003         	goto	l1716
  2544   000716                     l1728:
  2545                           
  2546                           ; BSR set to: 0
  2547   000716  503C               	movf	___aldiv@sign^0,w,c
  2548   000718  B4D8               	btfsc	status,2,c
  2549   00071A  EF91  F003         	goto	u861
  2550   00071E  EF93  F003         	goto	u860
  2551   000722                     u861:
  2552   000722  EF9B  F003         	goto	l1732
  2553   000726                     u860:
  2554   000726                     
  2555                           ; BSR set to: 0
  2556   000726  1E40               	comf	(___aldiv@quotient+3)^0,f,c
  2557   000728  1E3F               	comf	(___aldiv@quotient+2)^0,f,c
  2558   00072A  1E3E               	comf	(___aldiv@quotient+1)^0,f,c
  2559   00072C  6C3D               	negf	___aldiv@quotient^0,c
  2560   00072E  0E00               	movlw	0
  2561   000730  223E               	addwfc	(___aldiv@quotient+1)^0,f,c
  2562   000732  223F               	addwfc	(___aldiv@quotient+2)^0,f,c
  2563   000734  2240               	addwfc	(___aldiv@quotient+3)^0,f,c
  2564   000736                     l1732:
  2565                           
  2566                           ; BSR set to: 0
  2567   000736  C03D  F080         	movff	___aldiv@quotient,?___aldiv
  2568   00073A  C03E  F081         	movff	___aldiv@quotient+1,?___aldiv+1
  2569   00073E  C03F  F082         	movff	___aldiv@quotient+2,?___aldiv+2
  2570   000742  C040  F083         	movff	___aldiv@quotient+3,?___aldiv+3
  2571   000746                     
  2572                           ; BSR set to: 0
  2573   000746  0012               	return		;funcret
  2574   000748                     __end_of___aldiv:
  2575                           	callstack 0
  2576                           
  2577 ;; *************** function _Initialize_Songs *****************
  2578 ;; Defined at:
  2579 ;;		line 48 in file "buzzer.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;		None
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;		None
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      void 
  2586 ;; Registers used:
  2587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2593 ;;      Params:         0       0       0       0       0       0       0
  2594 ;;      Locals:         0       0       0       0       0       0       0
  2595 ;;      Temps:          0       0       0       0       0       0       0
  2596 ;;      Totals:         0       0       0       0       0       0       0
  2597 ;;Total ram usage:        0 bytes
  2598 ;; Hardware stack levels used: 1
  2599 ;; Hardware stack levels required when called: 2
  2600 ;; This function calls:
  2601 ;;		Nothing
  2602 ;; This function is called by:
  2603 ;;		_music_start
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text4
  2608   000ACC                     __ptext4:
  2609                           	callstack 0
  2610   000ACC                     _Initialize_Songs:
  2611                           	callstack 27
  2612   000ACC                     
  2613                           ;buzzer.c: 50:     current_melody = (const int(*)[3])melodies[current_song];
  2614   000ACC  0100               	movlb	0	; () banked
  2615   000ACE  5196               	movf	_current_song& (0+255),w,b
  2616   000AD0  0D02               	mullw	2
  2617   000AD2  50F3               	movf	243,w,c
  2618   000AD4  0F4B               	addlw	low _melodies
  2619   000AD6  6ED9               	movwf	fsr2l,c
  2620   000AD8  6ADA               	clrf	fsr2h,c
  2621   000ADA  CFDE F049          	movff	postinc2,_current_melody
  2622   000ADE  CFDD F04A          	movff	postdec2,_current_melody+1
  2623   000AE2                     
  2624                           ; BSR set to: 0
  2625                           ;buzzer.c: 51:     current_melody_length = melody_lengths[current_song];
  2626   000AE2  90D8               	bcf	status,0,c
  2627   000AE4  3596               	rlcf	_current_song& (0+255),w,b
  2628   000AE6  6EF6               	movwf	tblptrl,c
  2629   000AE8  3597               	rlcf	(_current_song+1)& (0+255),w,b
  2630   000AEA  6EF7               	movwf	tblptrh,c
  2631   000AEC  0EF3               	movlw	low _melody_lengths
  2632   000AEE  26F6               	addwf	tblptrl,f,c
  2633   000AF0  0E7B               	movlw	high _melody_lengths
  2634   000AF2  22F7               	addwfc	tblptrh,f,c
  2635   000AF4                     	if	0	;There are less than 3 active tblptr bytes
  2636   000AF4                     	endif
  2637   000AF4  0009               	tblrd		*+
  2638   000AF6  CFF5 F047          	movff	tablat,_current_melody_length
  2639   000AFA  000A               	tblrd		*-
  2640   000AFC  CFF5 F048          	movff	tablat,_current_melody_length+1
  2641   000B00                     
  2642                           ; BSR set to: 0
  2643   000B00  0012               	return		;funcret
  2644   000B02                     __end_of_Initialize_Songs:
  2645                           	callstack 0
  2646                           
  2647 ;; *************** function _broadcast_BT *****************
  2648 ;; Defined at:
  2649 ;;		line 67 in file "bluetooth_main.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, status,2
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2663 ;;      Params:         0       0       0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0
  2666 ;;      Totals:         0       0       0       0       0       0       0
  2667 ;;Total ram usage:        0 bytes
  2668 ;; Hardware stack levels used: 1
  2669 ;; Hardware stack levels required when called: 2
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text5
  2678   000BCA                     __ptext5:
  2679                           	callstack 0
  2680   000BCA                     _broadcast_BT:
  2681                           	callstack 28
  2682   000BCA                     
  2683                           ;bluetooth_main.c: 69:     {
  2684   000BCA  0E0D               	movlw	13
  2685   000BCC  6EAD               	movwf	173,c	;volatile
  2686   000BCE                     l89:
  2687   000BCE  A2AC               	btfss	172,1,c	;volatile
  2688   000BD0  EFEC  F005         	goto	u881
  2689   000BD4  EFEE  F005         	goto	u880
  2690   000BD8                     u881:
  2691   000BD8  EFE7  F005         	goto	l89
  2692   000BDC                     u880:
  2693   000BDC  0012               	return		;funcret
  2694   000BDE                     __end_of_broadcast_BT:
  2695                           	callstack 0
  2696                           
  2697 ;; *************** function _Motor_TurnRight *****************
  2698 ;; Defined at:
  2699 ;;		line 73 in file "motor.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		None
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2713 ;;      Params:         0       0       0       0       0       0       0
  2714 ;;      Locals:         0       0       0       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0       0       0
  2716 ;;      Totals:         0       0       0       0       0       0       0
  2717 ;;Total ram usage:        0 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; Hardware stack levels required when called: 2
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text6
  2728   000BF2                     __ptext6:
  2729                           	callstack 0
  2730   000BF2                     _Motor_TurnRight:
  2731                           	callstack 28
  2732   000BF2                     
  2733                           ;motor.c: 75:     LATAbits.LATA0 = 0;
  2734   000BF2  9089               	bcf	137,0,c	;volatile
  2735                           
  2736                           ;motor.c: 76:     LATAbits.LATA1 = 1;
  2737   000BF4  8289               	bsf	137,1,c	;volatile
  2738                           
  2739                           ;motor.c: 77:     LATDbits.LATD0 = 0;
  2740   000BF6  908C               	bcf	140,0,c	;volatile
  2741                           
  2742                           ;motor.c: 78:     LATDbits.LATD1 = 1;
  2743   000BF8  828C               	bsf	140,1,c	;volatile
  2744                           
  2745                           ;motor.c: 79:     LATDbits.LATD2 = 0;
  2746   000BFA  948C               	bcf	140,2,c	;volatile
  2747                           
  2748                           ;motor.c: 80:     LATDbits.LATD3 = 0;
  2749   000BFC  968C               	bcf	140,3,c	;volatile
  2750                           
  2751                           ;motor.c: 81:     LATBbits.LATB4 = 0;
  2752   000BFE  988A               	bcf	138,4,c	;volatile
  2753                           
  2754                           ;motor.c: 82:     LATBbits.LATB5 = 0;
  2755   000C00  9A8A               	bcf	138,5,c	;volatile
  2756   000C02  0012               	return		;funcret
  2757   000C04                     __end_of_Motor_TurnRight:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _Motor_TurnLeft *****************
  2761 ;; Defined at:
  2762 ;;		line 61 in file "motor.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		None
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2776 ;;      Params:         0       0       0       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0
  2779 ;;      Totals:         0       0       0       0       0       0       0
  2780 ;;Total ram usage:        0 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 2
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text7
  2791   000C04                     __ptext7:
  2792                           	callstack 0
  2793   000C04                     _Motor_TurnLeft:
  2794                           	callstack 28
  2795   000C04                     
  2796                           ;motor.c: 63:     LATAbits.LATA0 = 0;
  2797   000C04  9089               	bcf	137,0,c	;volatile
  2798                           
  2799                           ;motor.c: 64:     LATAbits.LATA1 = 0;
  2800   000C06  9289               	bcf	137,1,c	;volatile
  2801                           
  2802                           ;motor.c: 65:     LATDbits.LATD0 = 0;
  2803   000C08  908C               	bcf	140,0,c	;volatile
  2804                           
  2805                           ;motor.c: 66:     LATDbits.LATD1 = 0;
  2806   000C0A  928C               	bcf	140,1,c	;volatile
  2807                           
  2808                           ;motor.c: 67:     LATDbits.LATD2 = 0;
  2809   000C0C  948C               	bcf	140,2,c	;volatile
  2810                           
  2811                           ;motor.c: 68:     LATDbits.LATD3 = 1;
  2812   000C0E  868C               	bsf	140,3,c	;volatile
  2813                           
  2814                           ;motor.c: 69:     LATBbits.LATB4 = 0;
  2815   000C10  988A               	bcf	138,4,c	;volatile
  2816                           
  2817                           ;motor.c: 70:     LATBbits.LATB5 = 1;
  2818   000C12  8A8A               	bsf	138,5,c	;volatile
  2819   000C14  0012               	return		;funcret
  2820   000C16                     __end_of_Motor_TurnLeft:
  2821                           	callstack 0
  2822                           
  2823 ;; *************** function _Motor_Stop *****************
  2824 ;; Defined at:
  2825 ;;		line 37 in file "motor.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;		None
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;		None
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		None
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2839 ;;      Params:         0       0       0       0       0       0       0
  2840 ;;      Locals:         0       0       0       0       0       0       0
  2841 ;;      Temps:          0       0       0       0       0       0       0
  2842 ;;      Totals:         0       0       0       0       0       0       0
  2843 ;;Total ram usage:        0 bytes
  2844 ;; Hardware stack levels used: 1
  2845 ;; Hardware stack levels required when called: 2
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_main
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text8
  2854   000C16                     __ptext8:
  2855                           	callstack 0
  2856   000C16                     _Motor_Stop:
  2857                           	callstack 28
  2858   000C16                     
  2859                           ;motor.c: 39:     LATAbits.LATA0 = 0;
  2860   000C16  9089               	bcf	137,0,c	;volatile
  2861                           
  2862                           ;motor.c: 40:     LATAbits.LATA1 = 0;
  2863   000C18  9289               	bcf	137,1,c	;volatile
  2864                           
  2865                           ;motor.c: 41:     LATDbits.LATD0 = 0;
  2866   000C1A  908C               	bcf	140,0,c	;volatile
  2867                           
  2868                           ;motor.c: 42:     LATDbits.LATD1 = 0;
  2869   000C1C  928C               	bcf	140,1,c	;volatile
  2870                           
  2871                           ;motor.c: 43:     LATDbits.LATD2 = 0;
  2872   000C1E  948C               	bcf	140,2,c	;volatile
  2873                           
  2874                           ;motor.c: 44:     LATDbits.LATD3 = 0;
  2875   000C20  968C               	bcf	140,3,c	;volatile
  2876                           
  2877                           ;motor.c: 45:     LATBbits.LATB4 = 0;
  2878   000C22  988A               	bcf	138,4,c	;volatile
  2879                           
  2880                           ;motor.c: 46:     LATBbits.LATB5 = 0;
  2881   000C24  9A8A               	bcf	138,5,c	;volatile
  2882   000C26  0012               	return		;funcret
  2883   000C28                     __end_of_Motor_Stop:
  2884                           	callstack 0
  2885                           
  2886 ;; *************** function _Motor_Forward *****************
  2887 ;; Defined at:
  2888 ;;		line 25 in file "motor.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		None
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2902 ;;      Params:         0       0       0       0       0       0       0
  2903 ;;      Locals:         0       0       0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0
  2905 ;;      Totals:         0       0       0       0       0       0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 2
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_main
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text9
  2917   000C28                     __ptext9:
  2918                           	callstack 0
  2919   000C28                     _Motor_Forward:
  2920                           	callstack 28
  2921   000C28                     
  2922                           ;motor.c: 27:     LATAbits.LATA0 = 0;
  2923   000C28  9089               	bcf	137,0,c	;volatile
  2924                           
  2925                           ;motor.c: 28:     LATAbits.LATA1 = 1;
  2926   000C2A  8289               	bsf	137,1,c	;volatile
  2927                           
  2928                           ;motor.c: 29:     LATDbits.LATD0 = 0;
  2929   000C2C  908C               	bcf	140,0,c	;volatile
  2930                           
  2931                           ;motor.c: 30:     LATDbits.LATD1 = 1;
  2932   000C2E  828C               	bsf	140,1,c	;volatile
  2933                           
  2934                           ;motor.c: 31:     LATDbits.LATD2 = 0;
  2935   000C30  948C               	bcf	140,2,c	;volatile
  2936                           
  2937                           ;motor.c: 32:     LATDbits.LATD3 = 1;
  2938   000C32  868C               	bsf	140,3,c	;volatile
  2939                           
  2940                           ;motor.c: 33:     LATBbits.LATB4 = 0;
  2941   000C34  988A               	bcf	138,4,c	;volatile
  2942                           
  2943                           ;motor.c: 34:     LATBbits.LATB5 = 1;
  2944   000C36  8A8A               	bsf	138,5,c	;volatile
  2945   000C38  0012               	return		;funcret
  2946   000C3A                     __end_of_Motor_Forward:
  2947                           	callstack 0
  2948                           
  2949 ;; *************** function _Motor_Backward *****************
  2950 ;; Defined at:
  2951 ;;		line 49 in file "motor.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;		None
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		None
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2965 ;;      Params:         0       0       0       0       0       0       0
  2966 ;;      Locals:         0       0       0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0
  2968 ;;      Totals:         0       0       0       0       0       0       0
  2969 ;;Total ram usage:        0 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; Hardware stack levels required when called: 2
  2972 ;; This function calls:
  2973 ;;		Nothing
  2974 ;; This function is called by:
  2975 ;;		_main
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text10
  2980   000C3A                     __ptext10:
  2981                           	callstack 0
  2982   000C3A                     _Motor_Backward:
  2983                           	callstack 28
  2984   000C3A                     
  2985                           ;motor.c: 51:     LATAbits.LATA0 = 1;
  2986   000C3A  8089               	bsf	137,0,c	;volatile
  2987                           
  2988                           ;motor.c: 52:     LATAbits.LATA1 = 0;
  2989   000C3C  9289               	bcf	137,1,c	;volatile
  2990                           
  2991                           ;motor.c: 53:     LATDbits.LATD0 = 1;
  2992   000C3E  808C               	bsf	140,0,c	;volatile
  2993                           
  2994                           ;motor.c: 54:     LATDbits.LATD1 = 0;
  2995   000C40  928C               	bcf	140,1,c	;volatile
  2996                           
  2997                           ;motor.c: 55:     LATDbits.LATD2 = 1;
  2998   000C42  848C               	bsf	140,2,c	;volatile
  2999                           
  3000                           ;motor.c: 56:     LATDbits.LATD3 = 0;
  3001   000C44  968C               	bcf	140,3,c	;volatile
  3002                           
  3003                           ;motor.c: 57:     LATBbits.LATB4 = 1;
  3004   000C46  888A               	bsf	138,4,c	;volatile
  3005                           
  3006                           ;motor.c: 58:     LATBbits.LATB5 = 0;
  3007   000C48  9A8A               	bcf	138,5,c	;volatile
  3008   000C4A  0012               	return		;funcret
  3009   000C4C                     __end_of_Motor_Backward:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _Ladder_Forward *****************
  3013 ;; Defined at:
  3014 ;;		line 29 in file "ladder.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  turns           2   48[COMRAM] int 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  i               2   54[COMRAM] int 
  3019 ;;  stepIndex       2   56[COMRAM] int 
  3020 ;;  steps           2   52[COMRAM] int 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3030 ;;      Params:         2       0       0       0       0       0       0
  3031 ;;      Locals:         6       0       0       0       0       0       0
  3032 ;;      Temps:          2       0       0       0       0       0       0
  3033 ;;      Totals:        10       0       0       0       0       0       0
  3034 ;;Total ram usage:       10 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; Hardware stack levels required when called: 3
  3037 ;; This function calls:
  3038 ;;		_Update_StepperMotor
  3039 ;; This function is called by:
  3040 ;;		_main
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text11
  3045   000852                     __ptext11:
  3046                           	callstack 0
  3047   000852                     _Ladder_Forward:
  3048                           	callstack 27
  3049   000852                     
  3050                           ;ladder.c: 29: void Ladder_Forward(int turns);ladder.c: 30: {;ladder.c: 31:     int step
      +                          s = turns * 2048;
  3051   000852  C031  F033         	movff	Ladder_Forward@turns,??_Ladder_Forward
  3052   000856  C032  F034         	movff	Ladder_Forward@turns+1,??_Ladder_Forward+1
  3053   00085A  0E0B               	movlw	11
  3054   00085C                     u935:
  3055   00085C  90D8               	bcf	status,0,c
  3056   00085E  3633               	rlcf	??_Ladder_Forward^0,f,c
  3057   000860  3634               	rlcf	(??_Ladder_Forward+1)^0,f,c
  3058   000862  2EE8               	decfsz	wreg,f,c
  3059   000864  EF2E  F004         	goto	u935
  3060   000868  C033  F035         	movff	??_Ladder_Forward,Ladder_Forward@steps
  3061   00086C  C034  F036         	movff	??_Ladder_Forward+1,Ladder_Forward@steps+1
  3062   000870                     
  3063                           ;ladder.c: 32:     int stepIndex = 0;
  3064   000870  0E00               	movlw	0
  3065   000872  6E3A               	movwf	(Ladder_Forward@stepIndex+1)^0,c
  3066   000874  0E00               	movlw	0
  3067   000876  6E39               	movwf	Ladder_Forward@stepIndex^0,c
  3068   000878                     
  3069                           ;ladder.c: 33:     for (int i = 0; i < steps; i++)
  3070   000878  0E00               	movlw	0
  3071   00087A  6E38               	movwf	(Ladder_Forward@i+1)^0,c
  3072   00087C  0E00               	movlw	0
  3073   00087E  6E37               	movwf	Ladder_Forward@i^0,c
  3074   000880  EF60  F004         	goto	l1870
  3075   000884                     l1862:
  3076                           
  3077                           ;ladder.c: 34:     {;ladder.c: 35:         Update_StepperMotor(stepSequence[stepIndex]);
  3078   000884  0EF9               	movlw	low _stepSequence
  3079   000886  2439               	addwf	Ladder_Forward@stepIndex^0,w,c
  3080   000888  6EF6               	movwf	tblptrl,c
  3081   00088A  0E7B               	movlw	high _stepSequence
  3082   00088C  203A               	addwfc	(Ladder_Forward@stepIndex+1)^0,w,c
  3083   00088E  6EF7               	movwf	tblptrh,c
  3084   000890                     	if	0	;There are less than 3 active tblptr bytes
  3085   000890                     	endif
  3086   000890  0008               	tblrd		*
  3087   000892  50F5               	movf	tablat,w,c
  3088   000894  ECEF  F005         	call	_Update_StepperMotor
  3089   000898                     
  3090                           ;ladder.c: 36:         _delay((unsigned long)((2)*(8000000/4000.0)));
  3091   000898  0E06               	movlw	6
  3092   00089A  6E33               	movwf	??_Ladder_Forward^0,c
  3093   00089C  0E30               	movlw	48
  3094   00089E                     u1077:
  3095   00089E  2EE8               	decfsz	wreg,f,c
  3096   0008A0  D7FE               	bra	u1077
  3097   0008A2  2E33               	decfsz	??_Ladder_Forward^0,f,c
  3098   0008A4  D7FC               	bra	u1077
  3099   0008A6  D000               	nop2	
  3100   0008A8                     
  3101                           ;ladder.c: 37:         stepIndex = (stepIndex + 1) % 4;
  3102   0008A8  0E01               	movlw	1
  3103   0008AA  2439               	addwf	Ladder_Forward@stepIndex^0,w,c
  3104   0008AC  6E33               	movwf	??_Ladder_Forward^0,c
  3105   0008AE  0E00               	movlw	0
  3106   0008B0  203A               	addwfc	(Ladder_Forward@stepIndex+1)^0,w,c
  3107   0008B2  6E34               	movwf	(??_Ladder_Forward+1)^0,c
  3108   0008B4  0E03               	movlw	3
  3109   0008B6  1433               	andwf	??_Ladder_Forward^0,w,c
  3110   0008B8  6E39               	movwf	Ladder_Forward@stepIndex^0,c
  3111   0008BA  6A3A               	clrf	(Ladder_Forward@stepIndex+1)^0,c
  3112   0008BC                     
  3113                           ;ladder.c: 38:     }
  3114   0008BC  4A37               	infsnz	Ladder_Forward@i^0,f,c
  3115   0008BE  2A38               	incf	(Ladder_Forward@i+1)^0,f,c
  3116   0008C0                     l1870:
  3117   0008C0  5035               	movf	Ladder_Forward@steps^0,w,c
  3118   0008C2  5C37               	subwf	Ladder_Forward@i^0,w,c
  3119   0008C4  5038               	movf	(Ladder_Forward@i+1)^0,w,c
  3120   0008C6  0A80               	xorlw	128
  3121   0008C8  6E33               	movwf	??_Ladder_Forward^0,c
  3122   0008CA  5036               	movf	(Ladder_Forward@steps+1)^0,w,c
  3123   0008CC  0A80               	xorlw	128
  3124   0008CE  5833               	subwfb	??_Ladder_Forward^0,w,c
  3125   0008D0  A0D8               	btfss	status,0,c
  3126   0008D2  EF6D  F004         	goto	u941
  3127   0008D6  EF6F  F004         	goto	u940
  3128   0008DA                     u941:
  3129   0008DA  EF42  F004         	goto	l1862
  3130   0008DE                     u940:
  3131   0008DE  0012               	return		;funcret
  3132   0008E0                     __end_of_Ladder_Forward:
  3133                           	callstack 0
  3134                           
  3135 ;; *************** function _Ladder_Backward *****************
  3136 ;; Defined at:
  3137 ;;		line 42 in file "ladder.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  turns           2   48[COMRAM] int 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  i               2   54[COMRAM] int 
  3142 ;;  stepIndex       2   56[COMRAM] int 
  3143 ;;  steps           2   52[COMRAM] int 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3153 ;;      Params:         2       0       0       0       0       0       0
  3154 ;;      Locals:         6       0       0       0       0       0       0
  3155 ;;      Temps:          2       0       0       0       0       0       0
  3156 ;;      Totals:        10       0       0       0       0       0       0
  3157 ;;Total ram usage:       10 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; Hardware stack levels required when called: 3
  3160 ;; This function calls:
  3161 ;;		_Update_StepperMotor
  3162 ;; This function is called by:
  3163 ;;		_main
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text12
  3168   0008E0                     __ptext12:
  3169                           	callstack 0
  3170   0008E0                     _Ladder_Backward:
  3171                           	callstack 27
  3172   0008E0                     
  3173                           ;ladder.c: 42: void Ladder_Backward(int turns);ladder.c: 43: {;ladder.c: 44:     int ste
      +                          ps = turns * 2048;
  3174   0008E0  C031  F033         	movff	Ladder_Backward@turns,??_Ladder_Backward
  3175   0008E4  C032  F034         	movff	Ladder_Backward@turns+1,??_Ladder_Backward+1
  3176   0008E8  0E0B               	movlw	11
  3177   0008EA                     u955:
  3178   0008EA  90D8               	bcf	status,0,c
  3179   0008EC  3633               	rlcf	??_Ladder_Backward^0,f,c
  3180   0008EE  3634               	rlcf	(??_Ladder_Backward+1)^0,f,c
  3181   0008F0  2EE8               	decfsz	wreg,f,c
  3182   0008F2  EF75  F004         	goto	u955
  3183   0008F6  C033  F035         	movff	??_Ladder_Backward,Ladder_Backward@steps
  3184   0008FA  C034  F036         	movff	??_Ladder_Backward+1,Ladder_Backward@steps+1
  3185   0008FE                     
  3186                           ;ladder.c: 45:     int stepIndex = 3;
  3187   0008FE  0E00               	movlw	0
  3188   000900  6E3A               	movwf	(Ladder_Backward@stepIndex+1)^0,c
  3189   000902  0E03               	movlw	3
  3190   000904  6E39               	movwf	Ladder_Backward@stepIndex^0,c
  3191   000906                     
  3192                           ;ladder.c: 46:     for (int i = 0; i < steps; i++)
  3193   000906  0E00               	movlw	0
  3194   000908  6E38               	movwf	(Ladder_Backward@i+1)^0,c
  3195   00090A  0E00               	movlw	0
  3196   00090C  6E37               	movwf	Ladder_Backward@i^0,c
  3197   00090E  EFA7  F004         	goto	l1886
  3198   000912                     l1878:
  3199                           
  3200                           ;ladder.c: 47:     {;ladder.c: 48:         Update_StepperMotor(stepSequence[stepIndex]);
  3201   000912  0EF9               	movlw	low _stepSequence
  3202   000914  2439               	addwf	Ladder_Backward@stepIndex^0,w,c
  3203   000916  6EF6               	movwf	tblptrl,c
  3204   000918  0E7B               	movlw	high _stepSequence
  3205   00091A  203A               	addwfc	(Ladder_Backward@stepIndex+1)^0,w,c
  3206   00091C  6EF7               	movwf	tblptrh,c
  3207   00091E                     	if	0	;There are less than 3 active tblptr bytes
  3208   00091E                     	endif
  3209   00091E  0008               	tblrd		*
  3210   000920  50F5               	movf	tablat,w,c
  3211   000922  ECEF  F005         	call	_Update_StepperMotor
  3212   000926                     
  3213                           ;ladder.c: 49:         _delay((unsigned long)((2)*(8000000/4000.0)));
  3214   000926  0E06               	movlw	6
  3215   000928  6E33               	movwf	??_Ladder_Backward^0,c
  3216   00092A  0E30               	movlw	48
  3217   00092C                     u1087:
  3218   00092C  2EE8               	decfsz	wreg,f,c
  3219   00092E  D7FE               	bra	u1087
  3220   000930  2E33               	decfsz	??_Ladder_Backward^0,f,c
  3221   000932  D7FC               	bra	u1087
  3222   000934  D000               	nop2	
  3223   000936                     
  3224                           ;ladder.c: 50:         stepIndex = (stepIndex - 1 + 4) % 4;
  3225   000936  0E03               	movlw	3
  3226   000938  2439               	addwf	Ladder_Backward@stepIndex^0,w,c
  3227   00093A  6E33               	movwf	??_Ladder_Backward^0,c
  3228   00093C  0E00               	movlw	0
  3229   00093E  203A               	addwfc	(Ladder_Backward@stepIndex+1)^0,w,c
  3230   000940  6E34               	movwf	(??_Ladder_Backward+1)^0,c
  3231   000942  0E03               	movlw	3
  3232   000944  1433               	andwf	??_Ladder_Backward^0,w,c
  3233   000946  6E39               	movwf	Ladder_Backward@stepIndex^0,c
  3234   000948  6A3A               	clrf	(Ladder_Backward@stepIndex+1)^0,c
  3235   00094A                     
  3236                           ;ladder.c: 51:     }
  3237   00094A  4A37               	infsnz	Ladder_Backward@i^0,f,c
  3238   00094C  2A38               	incf	(Ladder_Backward@i+1)^0,f,c
  3239   00094E                     l1886:
  3240   00094E  5035               	movf	Ladder_Backward@steps^0,w,c
  3241   000950  5C37               	subwf	Ladder_Backward@i^0,w,c
  3242   000952  5038               	movf	(Ladder_Backward@i+1)^0,w,c
  3243   000954  0A80               	xorlw	128
  3244   000956  6E33               	movwf	??_Ladder_Backward^0,c
  3245   000958  5036               	movf	(Ladder_Backward@steps+1)^0,w,c
  3246   00095A  0A80               	xorlw	128
  3247   00095C  5833               	subwfb	??_Ladder_Backward^0,w,c
  3248   00095E  A0D8               	btfss	status,0,c
  3249   000960  EFB4  F004         	goto	u961
  3250   000964  EFB6  F004         	goto	u960
  3251   000968                     u961:
  3252   000968  EF89  F004         	goto	l1878
  3253   00096C                     u960:
  3254   00096C  0012               	return		;funcret
  3255   00096E                     __end_of_Ladder_Backward:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function _Update_StepperMotor *****************
  3259 ;; Defined at:
  3260 ;;		line 23 in file "ladder.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  stepValue       1    wreg     unsigned char 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  stepValue       1   47[COMRAM] unsigned char 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3274 ;;      Params:         0       0       0       0       0       0       0
  3275 ;;      Locals:         1       0       0       0       0       0       0
  3276 ;;      Temps:          1       0       0       0       0       0       0
  3277 ;;      Totals:         2       0       0       0       0       0       0
  3278 ;;Total ram usage:        2 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 2
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_Ladder_Forward
  3285 ;;		_Ladder_Backward
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text13
  3290   000BDE                     __ptext13:
  3291                           	callstack 0
  3292   000BDE                     _Update_StepperMotor:
  3293                           	callstack 27
  3294                           
  3295                           ;incstack = 0
  3296                           ;Update_StepperMotor@stepValue stored from wreg
  3297   000BDE  6E30               	movwf	Update_StepperMotor@stepValue^0,c
  3298   000BE0                     
  3299                           ;ladder.c: 23: void Update_StepperMotor(unsigned char stepValue);ladder.c: 24: {;ladder.
      +                          c: 25:     LATD = (LATD & 0x0F) | (stepValue & 0xF0);
  3300   000BE0  C030  F02F         	movff	Update_StepperMotor@stepValue,??_Update_StepperMotor
  3301   000BE4  0EF0               	movlw	240
  3302   000BE6  162F               	andwf	??_Update_StepperMotor^0,f,c
  3303   000BE8  508C               	movf	140,w,c	;volatile
  3304   000BEA  0B0F               	andlw	15
  3305   000BEC  102F               	iorwf	??_Update_StepperMotor^0,w,c
  3306   000BEE  6E8C               	movwf	140,c	;volatile
  3307   000BF0  0012               	return		;funcret
  3308   000BF2                     __end_of_Update_StepperMotor:
  3309                           	callstack 0
  3310                           
  3311 ;; *************** function _Initialize_Motor *****************
  3312 ;; Defined at:
  3313 ;;		line 4 in file "motor.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		None
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3327 ;;      Params:         0       0       0       0       0       0       0
  3328 ;;      Locals:         0       0       0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0       0       0
  3330 ;;      Totals:         0       0       0       0       0       0       0
  3331 ;;Total ram usage:        0 bytes
  3332 ;; Hardware stack levels used: 1
  3333 ;; Hardware stack levels required when called: 2
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text14
  3342   000B88                     __ptext14:
  3343                           	callstack 0
  3344   000B88                     _Initialize_Motor:
  3345                           	callstack 28
  3346   000B88                     
  3347                           ;motor.c: 6:     TRISAbits.TRISA0 = 0;
  3348   000B88  9092               	bcf	146,0,c	;volatile
  3349                           
  3350                           ;motor.c: 7:     TRISAbits.TRISA1 = 0;
  3351   000B8A  9292               	bcf	146,1,c	;volatile
  3352                           
  3353                           ;motor.c: 8:     TRISDbits.TRISD0 = 0;
  3354   000B8C  9095               	bcf	149,0,c	;volatile
  3355                           
  3356                           ;motor.c: 9:     TRISDbits.TRISD1 = 0;
  3357   000B8E  9295               	bcf	149,1,c	;volatile
  3358                           
  3359                           ;motor.c: 10:     TRISDbits.TRISD2 = 0;
  3360   000B90  9495               	bcf	149,2,c	;volatile
  3361                           
  3362                           ;motor.c: 11:     TRISDbits.TRISD3 = 0;
  3363   000B92  9695               	bcf	149,3,c	;volatile
  3364                           
  3365                           ;motor.c: 12:     TRISBbits.TRISB4 = 0;
  3366   000B94  9893               	bcf	147,4,c	;volatile
  3367                           
  3368                           ;motor.c: 13:     TRISBbits.TRISB5 = 0;
  3369   000B96  9A93               	bcf	147,5,c	;volatile
  3370                           
  3371                           ;motor.c: 15:     LATAbits.LATA0 = 0;
  3372   000B98  9089               	bcf	137,0,c	;volatile
  3373                           
  3374                           ;motor.c: 16:     LATAbits.LATA1 = 0;
  3375   000B9A  9289               	bcf	137,1,c	;volatile
  3376                           
  3377                           ;motor.c: 17:     LATDbits.LATD0 = 0;
  3378   000B9C  908C               	bcf	140,0,c	;volatile
  3379                           
  3380                           ;motor.c: 18:     LATDbits.LATD1 = 0;
  3381   000B9E  928C               	bcf	140,1,c	;volatile
  3382                           
  3383                           ;motor.c: 19:     LATDbits.LATD2 = 0;
  3384   000BA0  948C               	bcf	140,2,c	;volatile
  3385                           
  3386                           ;motor.c: 20:     LATDbits.LATD3 = 0;
  3387   000BA2  968C               	bcf	140,3,c	;volatile
  3388                           
  3389                           ;motor.c: 21:     LATBbits.LATB4 = 0;
  3390   000BA4  988A               	bcf	138,4,c	;volatile
  3391                           
  3392                           ;motor.c: 22:     LATBbits.LATB5 = 0;
  3393   000BA6  9A8A               	bcf	138,5,c	;volatile
  3394   000BA8  0012               	return		;funcret
  3395   000BAA                     __end_of_Initialize_Motor:
  3396                           	callstack 0
  3397                           
  3398 ;; *************** function _Initialize_Ladder *****************
  3399 ;; Defined at:
  3400 ;;		line 10 in file "ladder.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;		None
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		None
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3414 ;;      Params:         0       0       0       0       0       0       0
  3415 ;;      Locals:         0       0       0       0       0       0       0
  3416 ;;      Temps:          0       0       0       0       0       0       0
  3417 ;;      Totals:         0       0       0       0       0       0       0
  3418 ;;Total ram usage:        0 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; Hardware stack levels required when called: 2
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text15
  3429   000C4C                     __ptext15:
  3430                           	callstack 0
  3431   000C4C                     _Initialize_Ladder:
  3432                           	callstack 28
  3433   000C4C                     
  3434                           ;ladder.c: 12:     TRISDbits.TRISD4 = 0;
  3435   000C4C  9895               	bcf	149,4,c	;volatile
  3436                           
  3437                           ;ladder.c: 13:     TRISDbits.TRISD5 = 0;
  3438   000C4E  9A95               	bcf	149,5,c	;volatile
  3439                           
  3440                           ;ladder.c: 14:     TRISDbits.TRISD6 = 0;
  3441   000C50  9C95               	bcf	149,6,c	;volatile
  3442                           
  3443                           ;ladder.c: 15:     TRISDbits.TRISD7 = 0;
  3444   000C52  9E95               	bcf	149,7,c	;volatile
  3445                           
  3446                           ;ladder.c: 16:     LATDbits.LATD4 = 0;
  3447   000C54  988C               	bcf	140,4,c	;volatile
  3448                           
  3449                           ;ladder.c: 17:     LATDbits.LATD5 = 0;
  3450   000C56  9A8C               	bcf	140,5,c	;volatile
  3451                           
  3452                           ;ladder.c: 18:     LATDbits.LATD6 = 0;
  3453   000C58  9C8C               	bcf	140,6,c	;volatile
  3454                           
  3455                           ;ladder.c: 19:     LATDbits.LATD7 = 0;
  3456   000C5A  9E8C               	bcf	140,7,c	;volatile
  3457   000C5C  0012               	return		;funcret
  3458   000C5E                     __end_of_Initialize_Ladder:
  3459                           	callstack 0
  3460                           
  3461 ;; *************** function _Initialize_Buzzer *****************
  3462 ;; Defined at:
  3463 ;;		line 17 in file "buzzer.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3477 ;;      Params:         0       0       0       0       0       0       0
  3478 ;;      Locals:         0       0       0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0
  3480 ;;      Totals:         0       0       0       0       0       0       0
  3481 ;;Total ram usage:        0 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; Hardware stack levels required when called: 2
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_main
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text16
  3492   000B38                     __ptext16:
  3493                           	callstack 0
  3494   000B38                     _Initialize_Buzzer:
  3495                           	callstack 28
  3496   000B38                     
  3497                           ;buzzer.c: 20:     TRISCbits.TRISC2 = 0;
  3498   000B38  9494               	bcf	148,2,c	;volatile
  3499                           
  3500                           ;buzzer.c: 21:     LATCbits.LATC2 = 0;
  3501   000B3A  948B               	bcf	139,2,c	;volatile
  3502   000B3C                     
  3503                           ;buzzer.c: 22:     CCP1CONbits.CCP1M = 0b1100;
  3504   000B3C  50BD               	movf	189,w,c	;volatile
  3505   000B3E  0BF0               	andlw	-16
  3506   000B40  090C               	iorlw	12
  3507   000B42  6EBD               	movwf	189,c	;volatile
  3508                           
  3509                           ;buzzer.c: 23:     T2CONbits.T2CKPS = 0b11;
  3510   000B44  0E03               	movlw	3
  3511   000B46  12CA               	iorwf	202,f,c	;volatile
  3512                           
  3513                           ;buzzer.c: 24:     T2CONbits.T2OUTPS = 0b0000;
  3514   000B48  0E87               	movlw	-121
  3515   000B4A  16CA               	andwf	202,f,c	;volatile
  3516   000B4C                     
  3517                           ;buzzer.c: 25:     PR2 = 0;
  3518   000B4C  6ACB               	clrf	203,c	;volatile
  3519   000B4E                     
  3520                           ;buzzer.c: 26:     CCPR1L = 0;
  3521   000B4E  6ABE               	clrf	190,c	;volatile
  3522   000B50                     
  3523                           ;buzzer.c: 27:     T2CONbits.TMR2ON = 1;
  3524   000B50  84CA               	bsf	202,2,c	;volatile
  3525                           
  3526                           ;buzzer.c: 31:     T0CON = 0b00000101;
  3527   000B52  0E05               	movlw	5
  3528   000B54  6ED5               	movwf	213,c	;volatile
  3529   000B56                     
  3530                           ;buzzer.c: 39:     TMR0H = 0;
  3531   000B56  6AD7               	clrf	215,c	;volatile
  3532   000B58                     
  3533                           ;buzzer.c: 40:     TMR0L = 0;
  3534   000B58  6AD6               	clrf	214,c	;volatile
  3535   000B5A                     
  3536                           ;buzzer.c: 42:     INTCONbits.TMR0IF = 0;
  3537   000B5A  94F2               	bcf	242,2,c	;volatile
  3538   000B5C                     
  3539                           ;buzzer.c: 43:     INTCONbits.TMR0IE = 1;
  3540   000B5C  8AF2               	bsf	242,5,c	;volatile
  3541   000B5E                     
  3542                           ;buzzer.c: 44:     INTCONbits.PEIE = 1;
  3543   000B5E  8CF2               	bsf	242,6,c	;volatile
  3544   000B60                     
  3545                           ;buzzer.c: 45:     INTCONbits.GIE = 1;
  3546   000B60  8EF2               	bsf	242,7,c	;volatile
  3547   000B62  0012               	return		;funcret
  3548   000B64                     __end_of_Initialize_Buzzer:
  3549                           	callstack 0
  3550                           
  3551 ;; *************** function _Initialize_Bluetooth *****************
  3552 ;; Defined at:
  3553 ;;		line 19 in file "bluetooth_main.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3567 ;;      Params:         0       0       0       0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0
  3570 ;;      Totals:         0       0       0       0       0       0       0
  3571 ;;Total ram usage:        0 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 2
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_main
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text17
  3582   000BAA                     __ptext17:
  3583                           	callstack 0
  3584   000BAA                     _Initialize_Bluetooth:
  3585                           	callstack 28
  3586   000BAA                     
  3587                           ;bluetooth_main.c: 22:     TXEN = 1;
  3588   000BAA  8C94               	bsf	3988,6,c	;volatile
  3589                           
  3590                           ;bluetooth_main.c: 23:     CREN = 1;
  3591   000BAC  8E94               	bsf	3988,7,c	;volatile
  3592                           
  3593                           ;bluetooth_main.c: 26: 
  3594   000BAE  84AC               	bsf	4012,2,c	;volatile
  3595   000BB0                     
  3596                           ;bluetooth_main.c: 27:     GIE = 0;
  3597   000BB0  0E33               	movlw	51
  3598   000BB2  6EAF               	movwf	175,c	;volatile
  3599   000BB4                     
  3600                           ;bluetooth_main.c: 30: 
  3601   000BB4  98AC               	bcf	4012,4,c	;volatile
  3602   000BB6                     
  3603                           ;bluetooth_main.c: 31:     RCIE = 0;
  3604   000BB6  8EAB               	bsf	4011,7,c	;volatile
  3605   000BB8                     
  3606                           ;bluetooth_main.c: 34: 
  3607   000BB8  9CAB               	bcf	4011,6,c	;volatile
  3608   000BBA                     
  3609                           ;bluetooth_main.c: 35: 
  3610   000BBA  9CAC               	bcf	4012,6,c	;volatile
  3611   000BBC                     
  3612                           ;bluetooth_main.c: 38:     TXREG = byte;
  3613   000BBC  8AAC               	bsf	4012,5,c	;volatile
  3614   000BBE                     
  3615                           ;bluetooth_main.c: 39:     while (!TXIF);
  3616   000BBE  88AB               	bsf	4011,4,c	;volatile
  3617   000BC0                     
  3618                           ;bluetooth_main.c: 43: 
  3619   000BC0  9EF2               	bcf	4082,7,c	;volatile
  3620   000BC2                     
  3621                           ;bluetooth_main.c: 44: void BT_load_string(char* string)
  3622   000BC2  8CF2               	bsf	4082,6,c	;volatile
  3623   000BC4                     
  3624                           ;bluetooth_main.c: 47:         BT_load_char(*string++);
  3625   000BC4  9A9D               	bcf	3997,5,c	;volatile
  3626   000BC6                     
  3627                           ;bluetooth_main.c: 48: }
  3628   000BC6  989D               	bcf	3997,4,c	;volatile
  3629   000BC8  0012               	return		;funcret
  3630   000BCA                     __end_of_Initialize_Bluetooth:
  3631                           	callstack 0
  3632                           
  3633 ;; *************** function _BT_load_string *****************
  3634 ;; Defined at:
  3635 ;;		line 60 in file "bluetooth_main.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  string          2   47[COMRAM] PTR unsigned char 
  3638 ;;		 -> STR_9(16), STR_8(15), STR_7(13), STR_6(11), 
  3639 ;;		 -> STR_5(16), STR_4(15), STR_3(15), STR_2(14), 
  3640 ;;		 -> STR_1(32), 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;		None
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  1    wreg      void 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3652 ;;      Params:         2       0       0       0       0       0       0
  3653 ;;      Locals:         0       0       0       0       0       0       0
  3654 ;;      Temps:          0       0       0       0       0       0       0
  3655 ;;      Totals:         2       0       0       0       0       0       0
  3656 ;;Total ram usage:        2 bytes
  3657 ;; Hardware stack levels used: 1
  3658 ;; Hardware stack levels required when called: 3
  3659 ;; This function calls:
  3660 ;;		_BT_load_char
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text18
  3667   000B02                     __ptext18:
  3668                           	callstack 0
  3669   000B02                     _BT_load_string:
  3670                           	callstack 27
  3671   000B02                     
  3672                           ;bluetooth_main.c: 60: ;bluetooth_main.c: 61:     if (OERR);bluetooth_main.c: 62:     {
  3673   000B02  EF8D  F005         	goto	l1766
  3674   000B06                     l1762:
  3675                           
  3676                           ;bluetooth_main.c: 63:         CREN = 0;
  3677   000B06  C030  FFF6         	movff	BT_load_string@string,tblptrl
  3678   000B0A  C031  FFF7         	movff	BT_load_string@string+1,tblptrh
  3679   000B0E                     	if	0	;tblptru may be non-zero
  3680   000B0E                     	endif
  3681   000B0E                     	if	0	;tblptru may be non-zero
  3682   000B0E                     	endif
  3683   000B0E  0008               	tblrd		*
  3684   000B10  50F5               	movf	tablat,w,c
  3685   000B12  ECB2  F005         	call	_BT_load_char
  3686   000B16  4A30               	infsnz	BT_load_string@string^0,f,c
  3687   000B18  2A31               	incf	(BT_load_string@string+1)^0,f,c
  3688   000B1A                     l1766:
  3689                           
  3690                           ;bluetooth_main.c: 62:     {
  3691   000B1A  C030  FFF6         	movff	BT_load_string@string,tblptrl
  3692   000B1E  C031  FFF7         	movff	BT_load_string@string+1,tblptrh
  3693   000B22                     	if	0	;tblptru may be non-zero
  3694   000B22                     	endif
  3695   000B22                     	if	0	;tblptru may be non-zero
  3696   000B22                     	endif
  3697   000B22  0008               	tblrd		*
  3698   000B24  50F5               	movf	tablat,w,c
  3699   000B26  0900               	iorlw	0
  3700   000B28  A4D8               	btfss	status,2,c
  3701   000B2A  EF99  F005         	goto	u871
  3702   000B2E  EF9B  F005         	goto	u870
  3703   000B32                     u871:
  3704   000B32  EF83  F005         	goto	l1762
  3705   000B36                     u870:
  3706   000B36  0012               	return		;funcret
  3707   000B38                     __end_of_BT_load_string:
  3708                           	callstack 0
  3709                           
  3710 ;; *************** function _BT_load_char *****************
  3711 ;; Defined at:
  3712 ;;		line 52 in file "bluetooth_main.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  byte            1    wreg     unsigned char 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  byte            1   46[COMRAM] unsigned char 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      void 
  3719 ;; Registers used:
  3720 ;;		wreg
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3726 ;;      Params:         0       0       0       0       0       0       0
  3727 ;;      Locals:         1       0       0       0       0       0       0
  3728 ;;      Temps:          0       0       0       0       0       0       0
  3729 ;;      Totals:         1       0       0       0       0       0       0
  3730 ;;Total ram usage:        1 bytes
  3731 ;; Hardware stack levels used: 1
  3732 ;; Hardware stack levels required when called: 2
  3733 ;; This function calls:
  3734 ;;		Nothing
  3735 ;; This function is called by:
  3736 ;;		_BT_load_string
  3737 ;;		_main
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text19
  3742   000B64                     __ptext19:
  3743                           	callstack 0
  3744   000B64                     _BT_load_char:
  3745                           	callstack 27
  3746                           
  3747                           ;incstack = 0
  3748                           ;BT_load_char@byte stored from wreg
  3749   000B64  6E2F               	movwf	BT_load_char@byte^0,c
  3750   000B66                     
  3751                           ;bluetooth_main.c: 52: {;bluetooth_main.c: 53:     TXREG = 13;;bluetooth_main.c: 54: 
  3752   000B66  C02F  FFAD         	movff	BT_load_char@byte,4013	;volatile
  3753   000B6A                     l74:
  3754   000B6A  A89E               	btfss	3998,4,c	;volatile
  3755   000B6C  EFBA  F005         	goto	u771
  3756   000B70  EFBC  F005         	goto	u770
  3757   000B74                     u771:
  3758   000B74  EFB5  F005         	goto	l74
  3759   000B78                     u770:
  3760   000B78                     l77:
  3761   000B78  A2AC               	btfss	4012,1,c	;volatile
  3762   000B7A  EFC1  F005         	goto	u781
  3763   000B7E  EFC3  F005         	goto	u780
  3764   000B82                     u781:
  3765   000B82  EFBC  F005         	goto	l77
  3766   000B86                     u780:
  3767   000B86  0012               	return		;funcret
  3768   000B88                     __end_of_BT_load_char:
  3769                           	callstack 0
  3770                           
  3771 ;; *************** function _BT_get_char *****************
  3772 ;; Defined at:
  3773 ;;		line 74 in file "bluetooth_main.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;		None
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;		None
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      unsigned char 
  3780 ;; Registers used:
  3781 ;;		wreg, status,2
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3787 ;;      Params:         0       0       0       0       0       0       0
  3788 ;;      Locals:         0       0       0       0       0       0       0
  3789 ;;      Temps:          0       0       0       0       0       0       0
  3790 ;;      Totals:         0       0       0       0       0       0       0
  3791 ;;Total ram usage:        0 bytes
  3792 ;; Hardware stack levels used: 1
  3793 ;; Hardware stack levels required when called: 2
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text20
  3802   000A94                     __ptext20:
  3803                           	callstack 0
  3804   000A94                     _BT_get_char:
  3805                           	callstack 28
  3806   000A94                     
  3807                           ;bluetooth_main.c: 77:         return 0;
  3808   000A94  A2AB               	btfss	4011,1,c	;volatile
  3809   000A96  EF4F  F005         	goto	u891
  3810   000A9A  EF51  F005         	goto	u890
  3811   000A9E                     u891:
  3812   000A9E  EF53  F005         	goto	l95
  3813   000AA2                     u890:
  3814   000AA2                     
  3815                           ;bluetooth_main.c: 78: };bluetooth_main.c: 79: 
  3816   000AA2  98AB               	bcf	4011,4,c	;volatile
  3817                           
  3818                           ;bluetooth_main.c: 80: void main(void)
  3819   000AA4  88AB               	bsf	4011,4,c	;volatile
  3820   000AA6                     l95:
  3821                           
  3822                           ;bluetooth_main.c: 84: 
  3823   000AA6  AA9E               	btfss	3998,5,c	;volatile
  3824   000AA8  EF58  F005         	goto	u901
  3825   000AAC  EF5A  F005         	goto	u900
  3826   000AB0                     u901:
  3827   000AB0  EF64  F005         	goto	l1782
  3828   000AB4                     u900:
  3829   000AB4                     l97:
  3830   000AB4  AA9E               	btfss	3998,5,c	;volatile
  3831   000AB6  EF5F  F005         	goto	u911
  3832   000ABA  EF61  F005         	goto	u910
  3833   000ABE                     u911:
  3834   000ABE  EF5A  F005         	goto	l97
  3835   000AC2                     u910:
  3836   000AC2                     
  3837                           ;bluetooth_main.c: 90: 
  3838   000AC2  50AE               	movf	174,w,c	;volatile
  3839   000AC4  EF65  F005         	goto	l100
  3840   000AC8                     l1782:
  3841                           
  3842                           ;bluetooth_main.c: 93:     broadcast_BT();
  3843   000AC8  0E00               	movlw	0
  3844   000ACA                     l100:
  3845   000ACA  0012               	return		;funcret
  3846   000ACC                     __end_of_BT_get_char:
  3847                           	callstack 0
  3848                           
  3849 ;; *************** function _ISR *****************
  3850 ;; Defined at:
  3851 ;;		line 56 in file "buzzer.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  duration        2   38[COMRAM] int 
  3856 ;;  duration        2   36[COMRAM] int 
  3857 ;;  pause_time      2   40[COMRAM] int 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      void 
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3867 ;;      Params:         0       0       0       0       0       0       0
  3868 ;;      Locals:        10       0       0       0       0       0       0
  3869 ;;      Temps:         10       0       0       0       0       0       0
  3870 ;;      Totals:        20       0       0       0       0       0       0
  3871 ;;Total ram usage:       20 bytes
  3872 ;; Hardware stack levels used: 1
  3873 ;; Hardware stack levels required when called: 1
  3874 ;; This function calls:
  3875 ;;		i2___aldiv
  3876 ;;		i2___lmul
  3877 ;; This function is called by:
  3878 ;;		Interrupt level 2
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	intcode
  3883   000008                     __pintcode:
  3884                           	callstack 0
  3885   000008                     _ISR:
  3886                           	callstack 27
  3887                           
  3888                           ;incstack = 0
  3889   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3890   00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
  3891                           
  3892                           	psect	intcode_body
  3893   000012                     __pintcode_body:
  3894                           	callstack 27
  3895   000012                     int_func:
  3896                           	callstack 27
  3897   000012  0006               	pop		; remove dummy address from shadow register refresh
  3898   000014  CFF3 F01F          	movff	prodl,??_ISR+4
  3899   000018  CFF4 F020          	movff	prodh,??_ISR+5
  3900   00001C  CFF6 F021          	movff	tblptrl,??_ISR+6
  3901   000020  CFF7 F022          	movff	tblptrh,??_ISR+7
  3902   000024  CFF8 F023          	movff	tblptru,??_ISR+8
  3903   000028  CFF5 F024          	movff	tablat,??_ISR+9
  3904   00002C                     
  3905                           ;buzzer.c: 58:     if (INTCONbits.TMR0IF)
  3906   00002C  A4F2               	btfss	242,2,c	;volatile
  3907   00002E  EF1B  F000         	goto	i2u73_41
  3908   000032  EF1D  F000         	goto	i2u73_40
  3909   000036                     i2u73_41:
  3910   000036  EF7E  F001         	goto	i2l224
  3911   00003A                     i2u73_40:
  3912   00003A                     
  3913                           ;buzzer.c: 59:     {;buzzer.c: 60:         INTCONbits.TMR0IF = 0;
  3914   00003A  94F2               	bcf	242,2,c	;volatile
  3915   00003C                     
  3916                           ;buzzer.c: 62:         if (playing)
  3917   00003C  5043               	movf	_playing^0,w,c
  3918   00003E  1044               	iorwf	(_playing+1)^0,w,c
  3919   000040  B4D8               	btfsc	status,2,c
  3920   000042  EF25  F000         	goto	i2u74_41
  3921   000046  EF27  F000         	goto	i2u74_40
  3922   00004A                     i2u74_41:
  3923   00004A  EF7E  F001         	goto	i2l224
  3924   00004E                     i2u74_40:
  3925   00004E                     
  3926                           ;buzzer.c: 63:         {;buzzer.c: 64:             if (is_pause)
  3927   00004E  5041               	movf	_is_pause^0,w,c
  3928   000050  1042               	iorwf	(_is_pause+1)^0,w,c
  3929   000052  B4D8               	btfsc	status,2,c
  3930   000054  EF2E  F000         	goto	i2u75_41
  3931   000058  EF30  F000         	goto	i2u75_40
  3932   00005C                     i2u75_41:
  3933   00005C  EF2D  F001         	goto	i2l1664
  3934   000060                     i2u75_40:
  3935   000060                     
  3936                           ;buzzer.c: 65:             {;buzzer.c: 67:                 is_pause = 0;
  3937   000060  0E00               	movlw	0
  3938   000062  6E42               	movwf	(_is_pause+1)^0,c
  3939   000064  0E00               	movlw	0
  3940   000066  6E41               	movwf	_is_pause^0,c
  3941   000068                     
  3942                           ;buzzer.c: 68:                 current_note++;
  3943   000068  4A45               	infsnz	_current_note^0,f,c
  3944   00006A  2A46               	incf	(_current_note+1)^0,f,c
  3945   00006C                     
  3946                           ;buzzer.c: 69:                 if (current_note >= current_melody_length)
  3947   00006C  5047               	movf	_current_melody_length^0,w,c
  3948   00006E  5C45               	subwf	_current_note^0,w,c
  3949   000070  5046               	movf	(_current_note+1)^0,w,c
  3950   000072  0A80               	xorlw	128
  3951   000074  6E1B               	movwf	??_ISR^0,c
  3952   000076  5048               	movf	(_current_melody_length+1)^0,w,c
  3953   000078  0A80               	xorlw	128
  3954   00007A  581B               	subwfb	??_ISR^0,w,c
  3955   00007C  A0D8               	btfss	status,0,c
  3956   00007E  EF43  F000         	goto	i2u76_41
  3957   000082  EF45  F000         	goto	i2u76_40
  3958   000086                     i2u76_41:
  3959   000086  EFC8  F000         	goto	i2l1654
  3960   00008A                     i2u76_40:
  3961   00008A                     
  3962                           ;buzzer.c: 70:                 {;buzzer.c: 71:                     current_note = 0;
  3963   00008A  0E00               	movlw	0
  3964   00008C  6E46               	movwf	(_current_note+1)^0,c
  3965   00008E  0E00               	movlw	0
  3966   000090  6E45               	movwf	_current_note^0,c
  3967   000092                     
  3968                           ;buzzer.c: 73:                     PR2 = current_melody[current_note][0];
  3969   000092  0E06               	movlw	6
  3970   000094  0245               	mulwf	_current_note^0,c
  3971   000096  CFF3 F01B          	movff	prodl,??_ISR
  3972   00009A  CFF4 F01C          	movff	prodh,??_ISR+1
  3973   00009E  0246               	mulwf	(_current_note+1)^0,c
  3974   0000A0  50F3               	movf	prodl,w,c
  3975   0000A2  261C               	addwf	(??_ISR+1)^0,f,c
  3976   0000A4  501B               	movf	??_ISR^0,w,c
  3977   0000A6  2449               	addwf	_current_melody^0,w,c
  3978   0000A8  6E1D               	movwf	(??_ISR+2)^0,c
  3979   0000AA  501C               	movf	(??_ISR+1)^0,w,c
  3980   0000AC  204A               	addwfc	(_current_melody+1)^0,w,c
  3981   0000AE  6E1E               	movwf	(??_ISR+3)^0,c
  3982   0000B0  C01D  FFF6         	movff	??_ISR+2,tblptrl
  3983   0000B4  C01E  FFF7         	movff	??_ISR+3,tblptrh
  3984   0000B8                     	if	0	;tblptru may be non-zero
  3985   0000B8                     	endif
  3986   0000B8                     	if	0	;tblptru may be non-zero
  3987   0000B8                     	endif
  3988   0000B8  0008               	tblrd		*
  3989   0000BA  CFF5 FFCB          	movff	tablat,4043	;volatile
  3990   0000BE                     
  3991                           ;buzzer.c: 74:                     CCPR1L = PR2 >> 4;
  3992   0000BE  38CB               	swapf	203,w,c	;volatile
  3993   0000C0  0B0F               	andlw	15
  3994   0000C2  6EBE               	movwf	190,c	;volatile
  3995   0000C4                     
  3996                           ;buzzer.c: 77:                     int duration = current_melody[current_note][1];
  3997   0000C4  0E06               	movlw	6
  3998   0000C6  0245               	mulwf	_current_note^0,c
  3999   0000C8  CFF3 F01B          	movff	prodl,??_ISR
  4000   0000CC  CFF4 F01C          	movff	prodh,??_ISR+1
  4001   0000D0  0246               	mulwf	(_current_note+1)^0,c
  4002   0000D2  50F3               	movf	prodl,w,c
  4003   0000D4  261C               	addwf	(??_ISR+1)^0,f,c
  4004   0000D6  501B               	movf	??_ISR^0,w,c
  4005   0000D8  2449               	addwf	_current_melody^0,w,c
  4006   0000DA  6E1D               	movwf	(??_ISR+2)^0,c
  4007   0000DC  501C               	movf	(??_ISR+1)^0,w,c
  4008   0000DE  204A               	addwfc	(_current_melody+1)^0,w,c
  4009   0000E0  6E1E               	movwf	(??_ISR+3)^0,c
  4010   0000E2  0E02               	movlw	2
  4011   0000E4  261D               	addwf	(??_ISR+2)^0,f,c
  4012   0000E6  0E00               	movlw	0
  4013   0000E8  221E               	addwfc	(??_ISR+3)^0,f,c
  4014   0000EA  C01D  FFF6         	movff	??_ISR+2,tblptrl
  4015   0000EE  C01E  FFF7         	movff	??_ISR+3,tblptrh
  4016   0000F2                     	if	0	;tblptru may be non-zero
  4017   0000F2                     	endif
  4018   0000F2                     	if	0	;tblptru may be non-zero
  4019   0000F2                     	endif
  4020   0000F2  0009               	tblrd		*+
  4021   0000F4  CFF5 F025          	movff	tablat,ISR@duration
  4022   0000F8  000A               	tblrd		*-
  4023   0000FA  CFF5 F026          	movff	tablat,ISR@duration+1
  4024   0000FE                     
  4025                           ;buzzer.c: 78:                     TMR0 = 65536 - (duration * (8000000 / 8) / 32 / 1000)
      +                          ;
  4026   0000FE  0E20               	movlw	32
  4027   000100  6E11               	movwf	i2___aldiv@divisor^0,c
  4028   000102  0E00               	movlw	0
  4029   000104  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
  4030   000106  0E00               	movlw	0
  4031   000108  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
  4032   00010A  0E00               	movlw	0
  4033   00010C  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
  4034   00010E  C025  F001         	movff	ISR@duration,i2___lmul@multiplier
  4035   000112  C026  F002         	movff	ISR@duration+1,i2___lmul@multiplier+1
  4036   000116  0E00               	movlw	0
  4037   000118  BE02               	btfsc	(i2___lmul@multiplier+1)^0,7,c
  4038   00011A  0EFF               	movlw	-1
  4039   00011C  6E03               	movwf	(i2___lmul@multiplier+2)^0,c
  4040   00011E  6E04               	movwf	(i2___lmul@multiplier+3)^0,c
  4041   000120  0E40               	movlw	64
  4042   000122  6E05               	movwf	i2___lmul@multiplicand^0,c
  4043   000124  0E42               	movlw	66
  4044   000126  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
  4045   000128  0E0F               	movlw	15
  4046   00012A  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
  4047   00012C  0E00               	movlw	0
  4048   00012E  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
  4049   000130  ECEC  F004         	call	i2___lmul	;wreg free
  4050   000134  C001  F00D         	movff	?i2___lmul,i2___aldiv@dividend
  4051   000138  C002  F00E         	movff	?i2___lmul+1,i2___aldiv@dividend+1
  4052   00013C  C003  F00F         	movff	?i2___lmul+2,i2___aldiv@dividend+2
  4053   000140  C004  F010         	movff	?i2___lmul+3,i2___aldiv@dividend+3
  4054   000144  ECA4  F003         	call	i2___aldiv	;wreg free
  4055   000148  C00D  F02B         	movff	?i2___aldiv,_ISR$1542
  4056   00014C  C00E  F02C         	movff	?i2___aldiv+1,_ISR$1542+1
  4057   000150  C00F  F02D         	movff	?i2___aldiv+2,_ISR$1542+2
  4058   000154  C010  F02E         	movff	?i2___aldiv+3,_ISR$1542+3
  4059   000158                     i2l1652:
  4060                           
  4061                           ;buzzer.c: 78:                     TMR0 = 65536 - (duration * (8000000 / 8) / 32 / 1000)
      +                          ;
  4062   000158  C02B  F00D         	movff	_ISR$1542,i2___aldiv@dividend
  4063   00015C  C02C  F00E         	movff	_ISR$1542+1,i2___aldiv@dividend+1
  4064   000160  C02D  F00F         	movff	_ISR$1542+2,i2___aldiv@dividend+2
  4065   000164  C02E  F010         	movff	_ISR$1542+3,i2___aldiv@dividend+3
  4066   000168  0EE8               	movlw	232
  4067   00016A  6E11               	movwf	i2___aldiv@divisor^0,c
  4068   00016C  0E03               	movlw	3
  4069   00016E  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
  4070   000170  0E00               	movlw	0
  4071   000172  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
  4072   000174  0E00               	movlw	0
  4073   000176  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
  4074   000178  ECA4  F003         	call	i2___aldiv	;wreg free
  4075   00017C  500D               	movf	?i2___aldiv^0,w,c
  4076   00017E  0800               	sublw	0
  4077   000180  6ED6               	movwf	214,c	;volatile
  4078   000182  500E               	movf	(?i2___aldiv+1)^0,w,c
  4079   000184  A0D8               	btfss	status,0,c
  4080   000186  2AE8               	incf	wreg,f,c
  4081   000188  0800               	sublw	0
  4082   00018A  6ED7               	movwf	215,c	;volatile
  4083                           
  4084                           ;buzzer.c: 79:                 }
  4085   00018C  EF7E  F001         	goto	i2l224
  4086   000190                     i2l1654:
  4087                           
  4088                           ;buzzer.c: 81:                 {;buzzer.c: 83:                     PR2 = current_melody[
      +                          current_note][0];
  4089   000190  0E06               	movlw	6
  4090   000192  0245               	mulwf	_current_note^0,c
  4091   000194  CFF3 F01B          	movff	prodl,??_ISR
  4092   000198  CFF4 F01C          	movff	prodh,??_ISR+1
  4093   00019C  0246               	mulwf	(_current_note+1)^0,c
  4094   00019E  50F3               	movf	prodl,w,c
  4095   0001A0  261C               	addwf	(??_ISR+1)^0,f,c
  4096   0001A2  501B               	movf	??_ISR^0,w,c
  4097   0001A4  2449               	addwf	_current_melody^0,w,c
  4098   0001A6  6E1D               	movwf	(??_ISR+2)^0,c
  4099   0001A8  501C               	movf	(??_ISR+1)^0,w,c
  4100   0001AA  204A               	addwfc	(_current_melody+1)^0,w,c
  4101   0001AC  6E1E               	movwf	(??_ISR+3)^0,c
  4102   0001AE  C01D  FFF6         	movff	??_ISR+2,tblptrl
  4103   0001B2  C01E  FFF7         	movff	??_ISR+3,tblptrh
  4104   0001B6                     	if	0	;tblptru may be non-zero
  4105   0001B6                     	endif
  4106   0001B6                     	if	0	;tblptru may be non-zero
  4107   0001B6                     	endif
  4108   0001B6  0008               	tblrd		*
  4109   0001B8  CFF5 FFCB          	movff	tablat,4043	;volatile
  4110   0001BC                     
  4111                           ;buzzer.c: 84:                     CCPR1L = PR2 >> 4;
  4112   0001BC  38CB               	swapf	203,w,c	;volatile
  4113   0001BE  0B0F               	andlw	15
  4114   0001C0  6EBE               	movwf	190,c	;volatile
  4115   0001C2                     
  4116                           ;buzzer.c: 87:                     int duration = current_melody[current_note][1];
  4117   0001C2  0E06               	movlw	6
  4118   0001C4  0245               	mulwf	_current_note^0,c
  4119   0001C6  CFF3 F01B          	movff	prodl,??_ISR
  4120   0001CA  CFF4 F01C          	movff	prodh,??_ISR+1
  4121   0001CE  0246               	mulwf	(_current_note+1)^0,c
  4122   0001D0  50F3               	movf	prodl,w,c
  4123   0001D2  261C               	addwf	(??_ISR+1)^0,f,c
  4124   0001D4  501B               	movf	??_ISR^0,w,c
  4125   0001D6  2449               	addwf	_current_melody^0,w,c
  4126   0001D8  6E1D               	movwf	(??_ISR+2)^0,c
  4127   0001DA  501C               	movf	(??_ISR+1)^0,w,c
  4128   0001DC  204A               	addwfc	(_current_melody+1)^0,w,c
  4129   0001DE  6E1E               	movwf	(??_ISR+3)^0,c
  4130   0001E0  0E02               	movlw	2
  4131   0001E2  261D               	addwf	(??_ISR+2)^0,f,c
  4132   0001E4  0E00               	movlw	0
  4133   0001E6  221E               	addwfc	(??_ISR+3)^0,f,c
  4134   0001E8  C01D  FFF6         	movff	??_ISR+2,tblptrl
  4135   0001EC  C01E  FFF7         	movff	??_ISR+3,tblptrh
  4136   0001F0                     	if	0	;tblptru may be non-zero
  4137   0001F0                     	endif
  4138   0001F0                     	if	0	;tblptru may be non-zero
  4139   0001F0                     	endif
  4140   0001F0  0009               	tblrd		*+
  4141   0001F2  CFF5 F027          	movff	tablat,ISR@duration_827
  4142   0001F6  000A               	tblrd		*-
  4143   0001F8  CFF5 F028          	movff	tablat,ISR@duration_827+1
  4144   0001FC                     
  4145                           ;buzzer.c: 88:                     TMR0 = 65536 - (duration * (8000000 / 8) / 32 / 1000)
      +                          ;
  4146   0001FC  0E20               	movlw	32
  4147   0001FE  6E11               	movwf	i2___aldiv@divisor^0,c
  4148   000200  0E00               	movlw	0
  4149   000202  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
  4150   000204  0E00               	movlw	0
  4151   000206  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
  4152   000208  0E00               	movlw	0
  4153   00020A  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
  4154   00020C  C027  F001         	movff	ISR@duration_827,i2___lmul@multiplier
  4155   000210  C028  F002         	movff	ISR@duration_827+1,i2___lmul@multiplier+1
  4156   000214  0E00               	movlw	0
  4157   000216  BE02               	btfsc	(i2___lmul@multiplier+1)^0,7,c
  4158   000218  0EFF               	movlw	-1
  4159   00021A  6E03               	movwf	(i2___lmul@multiplier+2)^0,c
  4160   00021C  6E04               	movwf	(i2___lmul@multiplier+3)^0,c
  4161   00021E  0E40               	movlw	64
  4162   000220  6E05               	movwf	i2___lmul@multiplicand^0,c
  4163   000222  0E42               	movlw	66
  4164   000224  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
  4165   000226  0E0F               	movlw	15
  4166   000228  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
  4167   00022A  0E00               	movlw	0
  4168   00022C  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
  4169   00022E  ECEC  F004         	call	i2___lmul	;wreg free
  4170   000232  C001  F00D         	movff	?i2___lmul,i2___aldiv@dividend
  4171   000236  C002  F00E         	movff	?i2___lmul+1,i2___aldiv@dividend+1
  4172   00023A  C003  F00F         	movff	?i2___lmul+2,i2___aldiv@dividend+2
  4173   00023E  C004  F010         	movff	?i2___lmul+3,i2___aldiv@dividend+3
  4174   000242  ECA4  F003         	call	i2___aldiv	;wreg free
  4175   000246  C00D  F02B         	movff	?i2___aldiv,_ISR$1542
  4176   00024A  C00E  F02C         	movff	?i2___aldiv+1,_ISR$1542+1
  4177   00024E  C00F  F02D         	movff	?i2___aldiv+2,_ISR$1542+2
  4178   000252  C010  F02E         	movff	?i2___aldiv+3,_ISR$1542+3
  4179   000256  EFAC  F000         	goto	i2l1652
  4180   00025A                     i2l1664:
  4181                           
  4182                           ;buzzer.c: 92:             {;buzzer.c: 94:                 is_pause = 1;
  4183   00025A  0E00               	movlw	0
  4184   00025C  6E42               	movwf	(_is_pause+1)^0,c
  4185   00025E  0E01               	movlw	1
  4186   000260  6E41               	movwf	_is_pause^0,c
  4187   000262                     
  4188                           ;buzzer.c: 95:                 CCPR1L = 0;
  4189   000262  6ABE               	clrf	190,c	;volatile
  4190   000264                     
  4191                           ;buzzer.c: 98:                 int pause_time = current_melody[current_note][2];
  4192   000264  0E06               	movlw	6
  4193   000266  0245               	mulwf	_current_note^0,c
  4194   000268  CFF3 F01B          	movff	prodl,??_ISR
  4195   00026C  CFF4 F01C          	movff	prodh,??_ISR+1
  4196   000270  0246               	mulwf	(_current_note+1)^0,c
  4197   000272  50F3               	movf	prodl,w,c
  4198   000274  261C               	addwf	(??_ISR+1)^0,f,c
  4199   000276  501B               	movf	??_ISR^0,w,c
  4200   000278  2449               	addwf	_current_melody^0,w,c
  4201   00027A  6E1D               	movwf	(??_ISR+2)^0,c
  4202   00027C  501C               	movf	(??_ISR+1)^0,w,c
  4203   00027E  204A               	addwfc	(_current_melody+1)^0,w,c
  4204   000280  6E1E               	movwf	(??_ISR+3)^0,c
  4205   000282  0E04               	movlw	4
  4206   000284  261D               	addwf	(??_ISR+2)^0,f,c
  4207   000286  0E00               	movlw	0
  4208   000288  221E               	addwfc	(??_ISR+3)^0,f,c
  4209   00028A  C01D  FFF6         	movff	??_ISR+2,tblptrl
  4210   00028E  C01E  FFF7         	movff	??_ISR+3,tblptrh
  4211   000292                     	if	0	;tblptru may be non-zero
  4212   000292                     	endif
  4213   000292                     	if	0	;tblptru may be non-zero
  4214   000292                     	endif
  4215   000292  0009               	tblrd		*+
  4216   000294  CFF5 F029          	movff	tablat,ISR@pause_time
  4217   000298  000A               	tblrd		*-
  4218   00029A  CFF5 F02A          	movff	tablat,ISR@pause_time+1
  4219   00029E                     
  4220                           ;buzzer.c: 99:                 TMR0 = 65536 - (pause_time * (8000000 / 8) / 32 / 1000);
  4221   00029E  0E20               	movlw	32
  4222   0002A0  6E11               	movwf	i2___aldiv@divisor^0,c
  4223   0002A2  0E00               	movlw	0
  4224   0002A4  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
  4225   0002A6  0E00               	movlw	0
  4226   0002A8  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
  4227   0002AA  0E00               	movlw	0
  4228   0002AC  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
  4229   0002AE  C029  F001         	movff	ISR@pause_time,i2___lmul@multiplier
  4230   0002B2  C02A  F002         	movff	ISR@pause_time+1,i2___lmul@multiplier+1
  4231   0002B6  0E00               	movlw	0
  4232   0002B8  BE02               	btfsc	(i2___lmul@multiplier+1)^0,7,c
  4233   0002BA  0EFF               	movlw	-1
  4234   0002BC  6E03               	movwf	(i2___lmul@multiplier+2)^0,c
  4235   0002BE  6E04               	movwf	(i2___lmul@multiplier+3)^0,c
  4236   0002C0  0E40               	movlw	64
  4237   0002C2  6E05               	movwf	i2___lmul@multiplicand^0,c
  4238   0002C4  0E42               	movlw	66
  4239   0002C6  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
  4240   0002C8  0E0F               	movlw	15
  4241   0002CA  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
  4242   0002CC  0E00               	movlw	0
  4243   0002CE  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
  4244   0002D0  ECEC  F004         	call	i2___lmul	;wreg free
  4245   0002D4  C001  F00D         	movff	?i2___lmul,i2___aldiv@dividend
  4246   0002D8  C002  F00E         	movff	?i2___lmul+1,i2___aldiv@dividend+1
  4247   0002DC  C003  F00F         	movff	?i2___lmul+2,i2___aldiv@dividend+2
  4248   0002E0  C004  F010         	movff	?i2___lmul+3,i2___aldiv@dividend+3
  4249   0002E4  ECA4  F003         	call	i2___aldiv	;wreg free
  4250   0002E8  C00D  F02B         	movff	?i2___aldiv,_ISR$1542
  4251   0002EC  C00E  F02C         	movff	?i2___aldiv+1,_ISR$1542+1
  4252   0002F0  C00F  F02D         	movff	?i2___aldiv+2,_ISR$1542+2
  4253   0002F4  C010  F02E         	movff	?i2___aldiv+3,_ISR$1542+3
  4254   0002F8  EFAC  F000         	goto	i2l1652
  4255   0002FC                     i2l224:
  4256   0002FC  C024  FFF5         	movff	??_ISR+9,tablat
  4257   000300  C023  FFF8         	movff	??_ISR+8,tblptru
  4258   000304  C022  FFF7         	movff	??_ISR+7,tblptrh
  4259   000308  C021  FFF6         	movff	??_ISR+6,tblptrl
  4260   00030C  C020  FFF4         	movff	??_ISR+5,prodh
  4261   000310  C01F  FFF3         	movff	??_ISR+4,prodl
  4262   000314  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4263   000316  0011               	retfie		f
  4264   000318                     __end_of_ISR:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function i2___lmul *****************
  4268 ;; Defined at:
  4269 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  multiplier      4    0[COMRAM] unsigned long 
  4272 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  product         4    8[COMRAM] unsigned long 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  4    0[COMRAM] unsigned long 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4284 ;;      Params:         8       0       0       0       0       0       0
  4285 ;;      Locals:         4       0       0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0
  4287 ;;      Totals:        12       0       0       0       0       0       0
  4288 ;;Total ram usage:       12 bytes
  4289 ;; Hardware stack levels used: 1
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_ISR
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text22
  4298   0009D8                     __ptext22:
  4299                           	callstack 0
  4300   0009D8                     i2___lmul:
  4301                           	callstack 27
  4302   0009D8  0E00               	movlw	0
  4303   0009DA  6E09               	movwf	i2___lmul@product^0,c
  4304   0009DC  0E00               	movlw	0
  4305   0009DE  6E0A               	movwf	(i2___lmul@product+1)^0,c
  4306   0009E0  0E00               	movlw	0
  4307   0009E2  6E0B               	movwf	(i2___lmul@product+2)^0,c
  4308   0009E4  0E00               	movlw	0
  4309   0009E6  6E0C               	movwf	(i2___lmul@product+3)^0,c
  4310   0009E8                     i2l1478:
  4311   0009E8  A001               	btfss	i2___lmul@multiplier^0,0,c
  4312   0009EA  EFF9  F004         	goto	i2u56_41
  4313   0009EE  EFFB  F004         	goto	i2u56_40
  4314   0009F2                     i2u56_41:
  4315   0009F2  EF03  F005         	goto	i2l1482
  4316   0009F6                     i2u56_40:
  4317   0009F6  5005               	movf	i2___lmul@multiplicand^0,w,c
  4318   0009F8  2609               	addwf	i2___lmul@product^0,f,c
  4319   0009FA  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
  4320   0009FC  220A               	addwfc	(i2___lmul@product+1)^0,f,c
  4321   0009FE  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
  4322   000A00  220B               	addwfc	(i2___lmul@product+2)^0,f,c
  4323   000A02  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
  4324   000A04  220C               	addwfc	(i2___lmul@product+3)^0,f,c
  4325   000A06                     i2l1482:
  4326   000A06  90D8               	bcf	status,0,c
  4327   000A08  3605               	rlcf	i2___lmul@multiplicand^0,f,c
  4328   000A0A  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
  4329   000A0C  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
  4330   000A0E  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
  4331   000A10  90D8               	bcf	status,0,c
  4332   000A12  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
  4333   000A14  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
  4334   000A16  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
  4335   000A18  3201               	rrcf	i2___lmul@multiplier^0,f,c
  4336   000A1A  5001               	movf	i2___lmul@multiplier^0,w,c
  4337   000A1C  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
  4338   000A1E  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
  4339   000A20  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
  4340   000A22  A4D8               	btfss	status,2,c
  4341   000A24  EF16  F005         	goto	i2u57_41
  4342   000A28  EF18  F005         	goto	i2u57_40
  4343   000A2C                     i2u57_41:
  4344   000A2C  EFF4  F004         	goto	i2l1478
  4345   000A30                     i2u57_40:
  4346   000A30  C009  F001         	movff	i2___lmul@product,?i2___lmul
  4347   000A34  C00A  F002         	movff	i2___lmul@product+1,?i2___lmul+1
  4348   000A38  C00B  F003         	movff	i2___lmul@product+2,?i2___lmul+2
  4349   000A3C  C00C  F004         	movff	i2___lmul@product+3,?i2___lmul+3
  4350   000A40  0012               	return		;funcret
  4351   000A42                     __end_ofi2___lmul:
  4352                           	callstack 0
  4353                           
  4354 ;; *************** function i2___aldiv *****************
  4355 ;; Defined at:
  4356 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  dividend        4   12[COMRAM] long 
  4359 ;;  divisor         4   16[COMRAM] long 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  quotient        4   22[COMRAM] long 
  4362 ;;  sign            1   21[COMRAM] unsigned char 
  4363 ;;  counter         1   20[COMRAM] unsigned char 
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  4   12[COMRAM] long 
  4366 ;; Registers used:
  4367 ;;		wreg, status,2, status,0
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4373 ;;      Params:         8       0       0       0       0       0       0
  4374 ;;      Locals:         6       0       0       0       0       0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0
  4376 ;;      Totals:        14       0       0       0       0       0       0
  4377 ;;Total ram usage:       14 bytes
  4378 ;; Hardware stack levels used: 1
  4379 ;; This function calls:
  4380 ;;		Nothing
  4381 ;; This function is called by:
  4382 ;;		_ISR
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text23
  4387   000748                     __ptext23:
  4388                           	callstack 0
  4389   000748                     i2___aldiv:
  4390                           	callstack 27
  4391   000748  6A16               	clrf	i2___aldiv@sign^0,c
  4392   00074A  BE14               	btfsc	(i2___aldiv@divisor+3)^0,7,c
  4393   00074C  EFAC  F003         	goto	i2u58_40
  4394   000750  EFAA  F003         	goto	i2u58_41
  4395   000754                     i2u58_41:
  4396   000754  EFB6  F003         	goto	i2l1494
  4397   000758                     i2u58_40:
  4398   000758  1E14               	comf	(i2___aldiv@divisor+3)^0,f,c
  4399   00075A  1E13               	comf	(i2___aldiv@divisor+2)^0,f,c
  4400   00075C  1E12               	comf	(i2___aldiv@divisor+1)^0,f,c
  4401   00075E  6C11               	negf	i2___aldiv@divisor^0,c
  4402   000760  0E00               	movlw	0
  4403   000762  2212               	addwfc	(i2___aldiv@divisor+1)^0,f,c
  4404   000764  2213               	addwfc	(i2___aldiv@divisor+2)^0,f,c
  4405   000766  2214               	addwfc	(i2___aldiv@divisor+3)^0,f,c
  4406   000768  0E01               	movlw	1
  4407   00076A  6E16               	movwf	i2___aldiv@sign^0,c
  4408   00076C                     i2l1494:
  4409   00076C  BE10               	btfsc	(i2___aldiv@dividend+3)^0,7,c
  4410   00076E  EFBD  F003         	goto	i2u59_40
  4411   000772  EFBB  F003         	goto	i2u59_41
  4412   000776                     i2u59_41:
  4413   000776  EFC7  F003         	goto	i2l1500
  4414   00077A                     i2u59_40:
  4415   00077A  1E10               	comf	(i2___aldiv@dividend+3)^0,f,c
  4416   00077C  1E0F               	comf	(i2___aldiv@dividend+2)^0,f,c
  4417   00077E  1E0E               	comf	(i2___aldiv@dividend+1)^0,f,c
  4418   000780  6C0D               	negf	i2___aldiv@dividend^0,c
  4419   000782  0E00               	movlw	0
  4420   000784  220E               	addwfc	(i2___aldiv@dividend+1)^0,f,c
  4421   000786  220F               	addwfc	(i2___aldiv@dividend+2)^0,f,c
  4422   000788  2210               	addwfc	(i2___aldiv@dividend+3)^0,f,c
  4423   00078A  0E01               	movlw	1
  4424   00078C  1A16               	xorwf	i2___aldiv@sign^0,f,c
  4425   00078E                     i2l1500:
  4426   00078E  0E00               	movlw	0
  4427   000790  6E17               	movwf	i2___aldiv@quotient^0,c
  4428   000792  0E00               	movlw	0
  4429   000794  6E18               	movwf	(i2___aldiv@quotient+1)^0,c
  4430   000796  0E00               	movlw	0
  4431   000798  6E19               	movwf	(i2___aldiv@quotient+2)^0,c
  4432   00079A  0E00               	movlw	0
  4433   00079C  6E1A               	movwf	(i2___aldiv@quotient+3)^0,c
  4434   00079E  5011               	movf	i2___aldiv@divisor^0,w,c
  4435   0007A0  1012               	iorwf	(i2___aldiv@divisor+1)^0,w,c
  4436   0007A2  1013               	iorwf	(i2___aldiv@divisor+2)^0,w,c
  4437   0007A4  1014               	iorwf	(i2___aldiv@divisor+3)^0,w,c
  4438   0007A6  B4D8               	btfsc	status,2,c
  4439   0007A8  EFD8  F003         	goto	i2u60_41
  4440   0007AC  EFDA  F003         	goto	i2u60_40
  4441   0007B0                     i2u60_41:
  4442   0007B0  EF10  F004         	goto	i2l1522
  4443   0007B4                     i2u60_40:
  4444   0007B4  0E01               	movlw	1
  4445   0007B6  6E15               	movwf	i2___aldiv@counter^0,c
  4446   0007B8  EFE4  F003         	goto	i2l1508
  4447   0007BC                     i2l1506:
  4448   0007BC  90D8               	bcf	status,0,c
  4449   0007BE  3611               	rlcf	i2___aldiv@divisor^0,f,c
  4450   0007C0  3612               	rlcf	(i2___aldiv@divisor+1)^0,f,c
  4451   0007C2  3613               	rlcf	(i2___aldiv@divisor+2)^0,f,c
  4452   0007C4  3614               	rlcf	(i2___aldiv@divisor+3)^0,f,c
  4453   0007C6  2A15               	incf	i2___aldiv@counter^0,f,c
  4454   0007C8                     i2l1508:
  4455   0007C8  AE14               	btfss	(i2___aldiv@divisor+3)^0,7,c
  4456   0007CA  EFE9  F003         	goto	i2u61_41
  4457   0007CE  EFEB  F003         	goto	i2u61_40
  4458   0007D2                     i2u61_41:
  4459   0007D2  EFDE  F003         	goto	i2l1506
  4460   0007D6                     i2u61_40:
  4461   0007D6                     i2l1510:
  4462   0007D6  90D8               	bcf	status,0,c
  4463   0007D8  3617               	rlcf	i2___aldiv@quotient^0,f,c
  4464   0007DA  3618               	rlcf	(i2___aldiv@quotient+1)^0,f,c
  4465   0007DC  3619               	rlcf	(i2___aldiv@quotient+2)^0,f,c
  4466   0007DE  361A               	rlcf	(i2___aldiv@quotient+3)^0,f,c
  4467   0007E0  5011               	movf	i2___aldiv@divisor^0,w,c
  4468   0007E2  5C0D               	subwf	i2___aldiv@dividend^0,w,c
  4469   0007E4  5012               	movf	(i2___aldiv@divisor+1)^0,w,c
  4470   0007E6  580E               	subwfb	(i2___aldiv@dividend+1)^0,w,c
  4471   0007E8  5013               	movf	(i2___aldiv@divisor+2)^0,w,c
  4472   0007EA  580F               	subwfb	(i2___aldiv@dividend+2)^0,w,c
  4473   0007EC  5014               	movf	(i2___aldiv@divisor+3)^0,w,c
  4474   0007EE  5810               	subwfb	(i2___aldiv@dividend+3)^0,w,c
  4475   0007F0  A0D8               	btfss	status,0,c
  4476   0007F2  EFFD  F003         	goto	i2u62_41
  4477   0007F6  EFFF  F003         	goto	i2u62_40
  4478   0007FA                     i2u62_41:
  4479   0007FA  EF08  F004         	goto	i2l1518
  4480   0007FE                     i2u62_40:
  4481   0007FE  5011               	movf	i2___aldiv@divisor^0,w,c
  4482   000800  5E0D               	subwf	i2___aldiv@dividend^0,f,c
  4483   000802  5012               	movf	(i2___aldiv@divisor+1)^0,w,c
  4484   000804  5A0E               	subwfb	(i2___aldiv@dividend+1)^0,f,c
  4485   000806  5013               	movf	(i2___aldiv@divisor+2)^0,w,c
  4486   000808  5A0F               	subwfb	(i2___aldiv@dividend+2)^0,f,c
  4487   00080A  5014               	movf	(i2___aldiv@divisor+3)^0,w,c
  4488   00080C  5A10               	subwfb	(i2___aldiv@dividend+3)^0,f,c
  4489   00080E  8017               	bsf	i2___aldiv@quotient^0,0,c
  4490   000810                     i2l1518:
  4491   000810  90D8               	bcf	status,0,c
  4492   000812  3214               	rrcf	(i2___aldiv@divisor+3)^0,f,c
  4493   000814  3213               	rrcf	(i2___aldiv@divisor+2)^0,f,c
  4494   000816  3212               	rrcf	(i2___aldiv@divisor+1)^0,f,c
  4495   000818  3211               	rrcf	i2___aldiv@divisor^0,f,c
  4496   00081A  2E15               	decfsz	i2___aldiv@counter^0,f,c
  4497   00081C  EFEB  F003         	goto	i2l1510
  4498   000820                     i2l1522:
  4499   000820  5016               	movf	i2___aldiv@sign^0,w,c
  4500   000822  B4D8               	btfsc	status,2,c
  4501   000824  EF16  F004         	goto	i2u63_41
  4502   000828  EF18  F004         	goto	i2u63_40
  4503   00082C                     i2u63_41:
  4504   00082C  EF20  F004         	goto	i2l1526
  4505   000830                     i2u63_40:
  4506   000830  1E1A               	comf	(i2___aldiv@quotient+3)^0,f,c
  4507   000832  1E19               	comf	(i2___aldiv@quotient+2)^0,f,c
  4508   000834  1E18               	comf	(i2___aldiv@quotient+1)^0,f,c
  4509   000836  6C17               	negf	i2___aldiv@quotient^0,c
  4510   000838  0E00               	movlw	0
  4511   00083A  2218               	addwfc	(i2___aldiv@quotient+1)^0,f,c
  4512   00083C  2219               	addwfc	(i2___aldiv@quotient+2)^0,f,c
  4513   00083E  221A               	addwfc	(i2___aldiv@quotient+3)^0,f,c
  4514   000840                     i2l1526:
  4515   000840  C017  F00D         	movff	i2___aldiv@quotient,?i2___aldiv
  4516   000844  C018  F00E         	movff	i2___aldiv@quotient+1,?i2___aldiv+1
  4517   000848  C019  F00F         	movff	i2___aldiv@quotient+2,?i2___aldiv+2
  4518   00084C  C01A  F010         	movff	i2___aldiv@quotient+3,?i2___aldiv+3
  4519   000850  0012               	return		;funcret
  4520   000852                     __end_ofi2___aldiv:
  4521                           	callstack 0
  4522                           
  4523                           	psect	rparam
  4524   000001                     ___rparam_used  equ	1
  4525   000000                     ___param_bank   equ	0
  4526   000000                     __Lparam        equ	__Lrparam
  4527   000000                     __Hparam        equ	__Hrparam
  4528                           
  4529                           	psect	temp
  4530   000051                     btemp:
  4531                           	callstack 0
  4532   000051                     	ds	1
  4533   000051                     int$flags       set	btemp
  4534   000052                     wtemp8          set	btemp+1
  4535   000052                     ttemp5          set	btemp+1
  4536   000055                     ttemp6          set	btemp+4
  4537   000059                     ttemp7          set	btemp+8
  4538                           
  4539                           	psect	idloc
  4540                           
  4541                           ;Config register IDLOC0 @ 0x200000
  4542                           ;	unspecified, using default values
  4543   200000                     	org	2097152
  4544   200000  FF                 	db	255
  4545                           
  4546                           ;Config register IDLOC1 @ 0x200001
  4547                           ;	unspecified, using default values
  4548   200001                     	org	2097153
  4549   200001  FF                 	db	255
  4550                           
  4551                           ;Config register IDLOC2 @ 0x200002
  4552                           ;	unspecified, using default values
  4553   200002                     	org	2097154
  4554   200002  FF                 	db	255
  4555                           
  4556                           ;Config register IDLOC3 @ 0x200003
  4557                           ;	unspecified, using default values
  4558   200003                     	org	2097155
  4559   200003  FF                 	db	255
  4560                           
  4561                           ;Config register IDLOC4 @ 0x200004
  4562                           ;	unspecified, using default values
  4563   200004                     	org	2097156
  4564   200004  FF                 	db	255
  4565                           
  4566                           ;Config register IDLOC5 @ 0x200005
  4567                           ;	unspecified, using default values
  4568   200005                     	org	2097157
  4569   200005  FF                 	db	255
  4570                           
  4571                           ;Config register IDLOC6 @ 0x200006
  4572                           ;	unspecified, using default values
  4573   200006                     	org	2097158
  4574   200006  FF                 	db	255
  4575                           
  4576                           ;Config register IDLOC7 @ 0x200007
  4577                           ;	unspecified, using default values
  4578   200007                     	org	2097159
  4579   200007  FF                 	db	255
  4580                           
  4581                           	psect	config
  4582                           
  4583                           ; Padding undefined space
  4584   300000                     	org	3145728
  4585   300000  FF                 	db	255
  4586                           
  4587                           ;Config register CONFIG1H @ 0x300001
  4588                           ;	Oscillator Selection bits
  4589                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  4590                           ;	Fail-Safe Clock Monitor Enable bit
  4591                           ;	FCMEN = 0x0, unprogrammed default
  4592                           ;	Internal/External Oscillator Switchover bit
  4593                           ;	IESO = 0x0, unprogrammed default
  4594   300001                     	org	3145729
  4595   300001  08                 	db	8
  4596                           
  4597                           ;Config register CONFIG2L @ 0x300002
  4598                           ;	Power-up Timer Enable bit
  4599                           ;	PWRT = OFF, PWRT disabled
  4600                           ;	Brown-out Reset Enable bits
  4601                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
  4602                           ;	Brown Out Reset Voltage bits
  4603                           ;	BORV = 0x3, unprogrammed default
  4604   300002                     	org	3145730
  4605   300002  1B                 	db	27
  4606                           
  4607                           ;Config register CONFIG2H @ 0x300003
  4608                           ;	Watchdog Timer Enable bit
  4609                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4610                           ;	Watchdog Timer Postscale Select bits
  4611                           ;	WDTPS = 0xF, unprogrammed default
  4612   300003                     	org	3145731
  4613   300003  1E                 	db	30
  4614                           
  4615                           ; Padding undefined space
  4616   300004                     	org	3145732
  4617   300004  FF                 	db	255
  4618                           
  4619                           ;Config register CONFIG3H @ 0x300005
  4620                           ;	CCP2 MUX bit
  4621                           ;	CCP2MX = 0x1, unprogrammed default
  4622                           ;	PORTB A/D Enable bit
  4623                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4624                           ;	Low-Power Timer1 Oscillator Enable bit
  4625                           ;	LPT1OSC = 0x0, unprogrammed default
  4626                           ;	MCLR Pin Enable bit
  4627                           ;	MCLRE = 0x1, unprogrammed default
  4628   300005                     	org	3145733
  4629   300005  81                 	db	129
  4630                           
  4631                           ;Config register CONFIG4L @ 0x300006
  4632                           ;	Stack Full/Underflow Reset Enable bit
  4633                           ;	STVREN = 0x1, unprogrammed default
  4634                           ;	Single-Supply ICSP Enable bit
  4635                           ;	LVP = OFF, Single-Supply ICSP disabled
  4636                           ;	Extended Instruction Set Enable bit
  4637                           ;	XINST = 0x0, unprogrammed default
  4638                           ;	Background Debugger Enable bit
  4639                           ;	DEBUG = 0x1, unprogrammed default
  4640   300006                     	org	3145734
  4641   300006  81                 	db	129
  4642                           
  4643                           ; Padding undefined space
  4644   300007                     	org	3145735
  4645   300007  FF                 	db	255
  4646                           
  4647                           ;Config register CONFIG5L @ 0x300008
  4648                           ;	unspecified, using default values
  4649                           ;	Code Protection bit
  4650                           ;	CP0 = 0x1, unprogrammed default
  4651                           ;	Code Protection bit
  4652                           ;	CP1 = 0x1, unprogrammed default
  4653                           ;	Code Protection bit
  4654                           ;	CP2 = 0x1, unprogrammed default
  4655                           ;	Code Protection bit
  4656                           ;	CP3 = 0x1, unprogrammed default
  4657   300008                     	org	3145736
  4658   300008  0F                 	db	15
  4659                           
  4660                           ;Config register CONFIG5H @ 0x300009
  4661                           ;	Boot Block Code Protection bit
  4662                           ;	CPB = 0x1, unprogrammed default
  4663                           ;	Data EEPROM Code Protection bit
  4664                           ;	CPD = OFF, Data EEPROM not code-protected
  4665   300009                     	org	3145737
  4666   300009  C0                 	db	192
  4667                           
  4668                           ;Config register CONFIG6L @ 0x30000A
  4669                           ;	unspecified, using default values
  4670                           ;	Write Protection bit
  4671                           ;	WRT0 = 0x1, unprogrammed default
  4672                           ;	Write Protection bit
  4673                           ;	WRT1 = 0x1, unprogrammed default
  4674                           ;	Write Protection bit
  4675                           ;	WRT2 = 0x1, unprogrammed default
  4676                           ;	Write Protection bit
  4677                           ;	WRT3 = 0x1, unprogrammed default
  4678   30000A                     	org	3145738
  4679   30000A  0F                 	db	15
  4680                           
  4681                           ;Config register CONFIG6H @ 0x30000B
  4682                           ;	unspecified, using default values
  4683                           ;	Configuration Register Write Protection bit
  4684                           ;	WRTC = 0x1, unprogrammed default
  4685                           ;	Boot Block Write Protection bit
  4686                           ;	WRTB = 0x1, unprogrammed default
  4687                           ;	Data EEPROM Write Protection bit
  4688                           ;	WRTD = 0x1, unprogrammed default
  4689   30000B                     	org	3145739
  4690   30000B  E0                 	db	224
  4691                           
  4692                           ;Config register CONFIG7L @ 0x30000C
  4693                           ;	unspecified, using default values
  4694                           ;	Table Read Protection bit
  4695                           ;	EBTR0 = 0x1, unprogrammed default
  4696                           ;	Table Read Protection bit
  4697                           ;	EBTR1 = 0x1, unprogrammed default
  4698                           ;	Table Read Protection bit
  4699                           ;	EBTR2 = 0x1, unprogrammed default
  4700                           ;	Table Read Protection bit
  4701                           ;	EBTR3 = 0x1, unprogrammed default
  4702   30000C                     	org	3145740
  4703   30000C  0F                 	db	15
  4704                           
  4705                           ;Config register CONFIG7H @ 0x30000D
  4706                           ;	unspecified, using default values
  4707                           ;	Boot Block Table Read Protection bit
  4708                           ;	EBTRB = 0x1, unprogrammed default
  4709   30000D                     	org	3145741
  4710   30000D  40                 	db	64
  4711                           tosu	equ	0xFFF
  4712                           tosh	equ	0xFFE
  4713                           tosl	equ	0xFFD
  4714                           stkptr	equ	0xFFC
  4715                           pclatu	equ	0xFFB
  4716                           pclath	equ	0xFFA
  4717                           pcl	equ	0xFF9
  4718                           tblptru	equ	0xFF8
  4719                           tblptrh	equ	0xFF7
  4720                           tblptrl	equ	0xFF6
  4721                           tablat	equ	0xFF5
  4722                           prodh	equ	0xFF4
  4723                           prodl	equ	0xFF3
  4724                           indf0	equ	0xFEF
  4725                           postinc0	equ	0xFEE
  4726                           postdec0	equ	0xFED
  4727                           preinc0	equ	0xFEC
  4728                           plusw0	equ	0xFEB
  4729                           fsr0h	equ	0xFEA
  4730                           fsr0l	equ	0xFE9
  4731                           wreg	equ	0xFE8
  4732                           indf1	equ	0xFE7
  4733                           postinc1	equ	0xFE6
  4734                           postdec1	equ	0xFE5
  4735                           preinc1	equ	0xFE4
  4736                           plusw1	equ	0xFE3
  4737                           fsr1h	equ	0xFE2
  4738                           fsr1l	equ	0xFE1
  4739                           bsr	equ	0xFE0
  4740                           indf2	equ	0xFDF
  4741                           postinc2	equ	0xFDE
  4742                           postdec2	equ	0xFDD
  4743                           preinc2	equ	0xFDC
  4744                           plusw2	equ	0xFDB
  4745                           fsr2h	equ	0xFDA
  4746                           fsr2l	equ	0xFD9
  4747                           status	equ	0xFD8

Data Sizes:
    Strings     147
    Constant    984
    Data        8
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     64      80
    BANK0           128     22      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    BT_load_string@string	PTR unsigned char  size(2) Largest target is 32
		 -> STR_1(CODE[32]), STR_2(CODE[14]), STR_3(CODE[15]), STR_4(CODE[15]), 
		 -> STR_5(CODE[16]), STR_6(CODE[11]), STR_7(CODE[13]), STR_8(CODE[15]), 
		 -> STR_9(CODE[16]), 

    current_melody	PTR const int [3] size(2) Largest target is 426
		 -> deja_vu(CODE[150]), fur_elise(CODE[426]), rick_roll(CODE[300]), NULL(NULL[0]), 

    melodies	PTR const int [3] size(2) Largest target is 426
		 -> deja_vu(CODE[150]), fur_elise(CODE[426]), rick_roll(CODE[300]), 


Critical Paths under _main in COMRAM

    _music_start->___aldiv
    ___aldiv->___lmul
    _Ladder_Forward->_Update_StepperMotor
    _Ladder_Backward->_Update_StepperMotor
    _BT_load_string->_BT_load_char

Critical Paths under _ISR in COMRAM

    _ISR->i2___aldiv
    i2___aldiv->i2___lmul

Critical Paths under _main in BANK0

    _main->_music_start
    _music_start->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1543
                                             18 BANK0      4     4      0
                        _BT_get_char
                       _BT_load_char
                     _BT_load_string
               _Initialize_Bluetooth
                  _Initialize_Buzzer
                  _Initialize_Ladder
                   _Initialize_Motor
                    _Ladder_Backward
                     _Ladder_Forward
                     _Motor_Backward
                      _Motor_Forward
                         _Motor_Stop
                     _Motor_TurnLeft
                    _Motor_TurnRight
                       _broadcast_BT
                        _music_start
 ---------------------------------------------------------------------------------
 (1) _music_start                                         10    10      0     667
                                              8 BANK0     10    10      0
                   _Initialize_Songs
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     142
                                             46 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     457
                                             58 COMRAM     6     6      0
                                              0 BANK0      8     0      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Initialize_Songs                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _broadcast_BT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_TurnRight                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_TurnLeft                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_Forward                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_Backward                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ladder_Forward                                      10     8      2     202
                                             48 COMRAM    10     8      2
                _Update_StepperMotor
 ---------------------------------------------------------------------------------
 (1) _Ladder_Backward                                     10     8      2     202
                                             48 COMRAM    10     8      2
                _Update_StepperMotor
 ---------------------------------------------------------------------------------
 (2) _Update_StepperMotor                                  2     2      0      29
                                             46 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Motor                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Ladder                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Bluetooth                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BT_load_string                                       2     0      2     121
                                             47 COMRAM     2     0      2
                       _BT_load_char
 ---------------------------------------------------------------------------------
 (2) _BT_load_char                                         1     1      0      29
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BT_get_char                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 20    20      0     548
                                             26 COMRAM    20    20      0
                          i2___aldiv
                           i2___lmul
 ---------------------------------------------------------------------------------
 (4) i2___lmul                                            12     4      8      98
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) i2___aldiv                                           14     6      8     312
                                             12 COMRAM    14     6      8
                           i2___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BT_get_char
   _BT_load_char
   _BT_load_string
     _BT_load_char
   _Initialize_Bluetooth
   _Initialize_Buzzer
   _Initialize_Ladder
   _Initialize_Motor
   _Ladder_Backward
     _Update_StepperMotor
   _Ladder_Forward
     _Update_StepperMotor
   _Motor_Backward
   _Motor_Forward
   _Motor_Stop
   _Motor_TurnLeft
   _Motor_TurnRight
   _broadcast_BT
   _music_start
     _Initialize_Songs
     ___aldiv
       ___lmul (ARG)
     ___lmul

 _ISR (ROOT)
   i2___aldiv
     i2___lmul (ARG)
   i2___lmul

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128     22      24     18.8%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     64      80     63.5%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         35      0       0      0.0%
BITBIGSFRll          9      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     104      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Dec 24 01:29:01 2024

                          l71 0BC8                            l80 0B86                            l74 0B6A  
                          l92 0BDC                            l77 0B78                            l86 0B36  
                          l95 0AA6                            l97 0AB4                            l89 0BCE  
            ?_Ladder_Backward 0031                  _stepSequence 7BF9                           l100 0ACA  
                         l210 0B62                           l213 0B00                           l142 0BA8  
                         l151 0C4A                           l241 0C5C                           l145 0C38  
                         l250 08DE                           l154 0C14                           l244 0BF0  
                         l148 0C26                           l228 063A                           l157 0C02  
                         l270 09C6                           l271 09D6                           l256 096C  
                         l338 0746                           _GIE 7F97                           _PR2 0FCB  
                         _ISR 0008                           u800 09C6                           u801 09C2  
                         u810 064E                           u811 064A                           u900 0AB4  
                         u820 0670                           u901 0AB0                           u821 066C  
                         u910 0AC2                           u830 06AA                           u911 0ABE  
                         u831 06A6                           u840 06CC                           u920 0504  
                         u841 06C8                           u921 0500                           u770 0B78  
                         u850 06F4                           u771 0B74                           u851 06F0  
                         u780 0B86                           u940 08DE                           u860 0726  
                         u781 0B82                           u941 08DA                           u861 0722  
                         u870 0B36                           u790 098C                           u871 0B32  
                         u935 085C                           u791 0988                           u960 096C  
                         u880 0BDC                           u961 0968                           u881 0BD8  
                         _RX9 7D5E                           u890 0AA2                           u970 0360  
                         u891 0A9E                           u955 08EA                           u971 035C  
                         u980 039C                           u981 0398                           u990 03C2  
                         u991 03BE                           _TX9 7D66                           wreg 0FE8  
                 _total_songs 7BFD                          ?_ISR 0001                          l1700 0662  
                        l1710 06AA                          l1702 0670                          l1800 0B58  
                        l1720 06F4                          l1712 06B2                          l1704 0680  
                        l1802 0B5A                          l1810 0C4C                          l1730 0726  
                        l1722 0704                          l1714 06BE                          l1706 0684  
                        l1740 0BB4                          l1804 0B5C                          l1812 0C28  
                        l1820 0C16                          l1732 0736                          l1724 0706  
                        l1716 06CC                          l1708 0694                          l1900 0342  
                        l1750 0BBE                          l1742 0BB6                          l1806 0B5E  
                        l1814 0C04                          l1726 0710                          l1718 06D6  
                        l1830 0512                          l1822 04EE                          l1910 0370  
                        l1902 0346                          l1760 0B02                          l1752 0BC0  
                        l1744 0BB8                          l1736 0BAA                          l1808 0B60  
                        l1680 0BE0                          l1816 0C3A                          l1728 0716  
                        l1840 0528                          l1824 0504                          l1912 0374  
                        l1904 034E                          l1770 0A94                          l1674 0B66  
                        l1762 0B06                          l1754 0BC2                          l1746 0BBA  
                        l1738 0BB0                          l1818 0BF2                          l1690 09A6  
                        l1682 096E                          l1850 05A6                          l1842 0530  
                        l1826 050C                          l1834 0518                          l1906 0360  
                        l1914 038A                          l1772 0AA2                          l1764 0B16  
                        l1756 0BC4                          l1748 0BBC                          l1860 0878  
                        l1676 0ACC                          l1692 063C                          l1684 097E  
                        l1852 0600                          l1844 0538                          l1836 051C  
                        l1828 0510                          l1916 039C                          l1924 03B0  
                        l1908 0364                          l1782 0AC8                          l1766 0B1A  
                        l1758 0BC6                          l1790 0B3C                          l1862 0884  
                        l1870 08C0                          l1678 0AE2                          l1694 063E  
                        l1686 098C                          l1854 0638                          l1846 0566  
                        l1838 0520                          l1926 03C2                          l1934 03D6  
                        l1918 03A0                          l1776 0AC2                          l1792 0B4C  
                        l1880 0926                          l1872 08E0                          l1864 0898  
                        l1856 0852                          l1768 0BCA                          l1696 064E  
                        l1688 099C                          l1848 056C                          l1960 044C  
                        l1952 0422                          l1936 03E8                          l1944 03FC  
                        l1928 03C6                          l1794 0B4E                          l1786 0B88  
                        l1882 0936                          l1874 08FE                          l1866 08A8  
                        l1858 0870                          l1698 065E                          l1970 048C  
                        l1962 045E                          l1954 0434                          l1946 040E  
                        l1938 03EC                          l1890 031C                          l1796 0B50  
                        l1788 0B38                          l1884 094A                          l1876 0906  
                        l1868 08BC                          l1964 0470                          l1972 049A  
                        l1980 04C4                          l1956 0440                          l1948 0412  
                        l1892 0324                          l1798 0B56                          l1878 0912  
                        l1886 094E                          l1982 04D4                          l1974 04A6  
                        l1966 047C                          l1958 0444                          l1894 0328  
                        l1984 04E2                          l1976 04AA                          l1968 0480  
                        l1896 032C                          l1888 0318                          l1978 04B6  
                        l1898 0336                          STR_1 7F6B                          STR_2 7FD8  
                        STR_3 7FC9                          STR_4 7FAB                          STR_5 7F9B  
                        STR_6 7FF3                          STR_7 7FE6                          STR_8 7FBA  
                        STR_9 7F8B                          _BRGH 7D62                          u1000 03E8  
                        _CREN 7D5C                          u1001 03E4                          u1010 040E  
                        u1011 040A                          u1020 0434                          u1021 0430  
                        u1030 045E                          u1031 045A                          u1040 0470  
                        u1041 046C                          u1050 04D4                          u1051 04D0  
                        u1067 037C                          u1077 089E                          u1087 092C  
                        _LATD 0F8C                          _PEIE 7F96                          _RCIE 7CED  
                        _RCIF 7CF5                          _OERR 7D59                          _TMR0 0FD6  
                        _SPEN 7D5F                          _TRMT 7D61                          _TXIE 7CEC  
                        _TXEN 7D65                          _TXIF 7CF4                          _SYNC 7D64  
              ??_broadcast_BT 002F                          _main 0318                          fsr2h 0FDA  
                        fsr1l 0FE1                          fsr2l 0FD9                          btemp 0051  
                        prodh 0FF4                          prodl 0FF3                          start 000E  
                ___param_bank 0000                         ??_ISR 001B               __end_of___aldiv 0748  
                       ?_main 0001                         _T0CON 0FD5                         i2l224 02FC  
                       i2l270 0A30                         i2l271 0A40                         i2l338 0850  
                       _RCREG 0FAE                         _TMR0H 0FD7                         _TMR0L 0FD6  
                       _SPBRG 0FAF                         _TXREG 0FAD               __end_of_deja_vu 7F6B  
         ___lmul@multiplicand 0033               __end_of_melody2 7BF3                         tablat 0FF5  
            __end_ofi2___lmul 0A42                         ttemp5 0052                         ttemp6 0055  
                       ttemp7 0059                         status 0FD8                         wtemp8 0052  
             __initialization 0A42                  __end_of_main 04EE         __end_of_Motor_Forward 0C3A  
                ?_BT_get_char 0001                        ??_main 0092                 __activetblptr 0002  
    Ladder_Backward@stepIndex 0039                 main@get_value 0095              _music_start$1525 008C  
                      _CCPR1L 0FBE                i2___aldiv@sign 0016                        i2l1500 078E  
                      i2l1510 07D6                        i2l1502 079E                        i2l1520 081A  
                      i2l1512 07E0                        i2l1504 07B4                        i2l1514 07FE  
                      i2l1506 07BC                        i2l1522 0820                        i2l1524 0830  
                      i2l1516 080E                        i2l1508 07C8                        i2l1526 0840  
                      i2l1518 0810                        i2l1630 003A                        i2l1480 09F6  
                      i2l1640 006C                        i2l1632 003C                        i2l1490 0758  
                      i2l1482 0A06                        i2l1650 00FE                        i2l1642 008A  
                      i2l1634 004E                        i2l1492 0768                        i2l1484 0A10  
                      i2l1476 09D8                        i2l1660 01FC                        i2l1652 0158  
                      i2l1644 0092                        i2l1636 0060                        i2l1628 002C  
                      i2l1494 076C                        i2l1486 0748                        i2l1478 09E8  
                      i2l1670 029E                        i2l1646 00BE                        i2l1654 0190  
                      i2l1638 0068                        i2l1496 077A                        i2l1488 074A  
                      i2l1656 01BC                        i2l1648 00C4                        i2l1664 025A  
                      i2l1498 078A                        i2l1666 0262                        i2l1658 01C2  
                      i2l1668 0264                _BT_load_string 0B02              i2___lmul@product 0009  
                      _TRISC6 7CA6                        _TRISC7 7CA7                _Motor_Backward 0C3A  
               ISR@pause_time 0029                    _Motor_Stop 0C16                        ___lmul 096E  
                   ??___aldiv 003B                        clear_0 0A80                        isa$std 0001  
            Ladder_Backward@i 0037          __end_of_broadcast_BT 0BDE             __end_ofi2___aldiv 0852  
                __pdataCOMRAM 004B                  __mediumconst 7B92                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8                  ?_music_start 0001  
      __end_of_BT_load_string 0B38                    __accesstop 0080       __end_of__initialization 0A86  
      __end_of_Motor_Backward 0C4C                 ___rparam_used 0001                _Motor_TurnLeft 0C04  
              __pcstackCOMRAM 0001                  __pidataBANK0 0C64         _current_melody_length 0047  
           ??_Motor_TurnRight 002F                     ?i2___lmul 0001                   ISR@duration 0025  
             ?_BT_load_string 0030              main@ladder_state 0093        __end_of_Motor_TurnLeft 0C16  
               ?_BT_load_char 0001               ?_Motor_Backward 0001                   ?_Motor_Stop 0001  
         music_start@duration 0090                       ?___lmul 002F           _Update_StepperMotor 0BDE  
              ___lmul@product 0037              _Initialize_Motor 0B88              _Initialize_Songs 0ACC  
                  ??i2___lmul 0009  __end_of_Initialize_Bluetooth 0BCA                       i2u60_40 07B4  
                     i2u60_41 07B0                       i2u61_40 07D6                       i2u61_41 07D2  
                     i2u62_40 07FE                       i2u62_41 07FA                       i2u63_40 0830  
                     i2u63_41 082C                       i2u56_40 09F6                       i2u56_41 09F2  
                     i2u57_40 0A30                       i2u73_40 003A                       i2u57_41 0A2C  
                     i2u73_41 0036                       i2u58_40 0758                       i2u74_40 004E  
                     i2u58_41 0754                       i2u74_41 004A                       i2u59_40 077A  
                     i2u75_40 0060                       i2u59_41 0776                       i2u75_41 005C  
                     i2u76_40 008A                       i2u76_41 0086          ?_Update_StepperMotor 0001  
              ??_BT_load_char 002F               ?_Motor_TurnLeft 0001             i2___aldiv@divisor 0011  
           i2___aldiv@counter 0015                       __Hparam 0000                       __Lparam 0000  
              _Ladder_Forward 0852                       ___aldiv 063C                       _deja_vu 7ED5  
                     __pcinit 0A42                       __ramtop 0600                       __ptext0 0318  
                     __ptext1 04EE                       __ptext2 096E                       __ptext3 063C  
                     __ptext4 0ACC                       __ptext5 0BCA                       __ptext6 0BF2  
                     __ptext7 0C04                       __ptext8 0C16                       __ptext9 0C28  
                   _T0CONbits 0FD5                     _T2CONbits 0FCA                       _melody2 7B93  
           __end_of_fur_elise 7DA9              ___aldiv@dividend 0080       Ladder_Forward@stepIndex 0039  
Update_StepperMotor@stepValue 0030                       _playing 0043         ??_Update_StepperMotor 002F  
              __pintcode_body 0012          end_of_initialization 0A86             __end_of_rick_roll 7ED5  
               __Lmediumconst 7B92                       int_func 0012                  _broadcast_BT 0BCA  
      __end_of_Ladder_Forward 08E0              ___aldiv@quotient 003D                       postdec1 0FE5  
                     postdec2 0FDD                       postinc0 0FEE                       postinc2 0FDE  
         i2___lmul@multiplier 0001                     _TRISAbits 0F92                     _TRISBbits 0F93  
                   _TRISCbits 0F94                     _TRISDbits 0F95              BT_load_char@byte 002F  
                   i2___aldiv 0748          Ladder_Backward@steps 0035          Ladder_Backward@turns 0031  
                 _CCP1CONbits 0FBD             ??_Ladder_Backward 0033                     _TXSTAbits 0FAC  
             _Motor_TurnRight 0BF2               ?_Ladder_Forward 0031          _Initialize_Bluetooth 0BAA  
              __end_of___lmul 09D8                 __pidataCOMRAM 0C5E          __end_of_BT_load_char 0B88  
            ??_BT_load_string 0032           start_initialization 0A42                   __end_of_ISR 0318  
                  ?i2___aldiv 000D              ??_Motor_Backward 002F      __end_of_Initialize_Motor 0BAA  
    __end_of_Initialize_Songs 0B02         ?_Initialize_Bluetooth 0001                  ??_Motor_Stop 002F  
                    ??___lmul 0037                   __pdataBANK0 0096                 _Motor_Forward 0C28  
              _current_melody 0049                   __pbssCOMRAM 0041                 __pcstackBANK0 0080  
            ??_Motor_TurnLeft 002F       __end_of_Motor_TurnRight 0C04            __end_of_Motor_Stop 0C28  
              _melody_lengths 7BF3                  _current_note 0045                  _current_song 0096  
             ISR@duration_827 0027                     __pintcode 0008                 __pmediumconst 7B92  
                    ?___aldiv 0080               Ladder_Forward@i 0037                ?_Motor_Forward 0001  
               ??_BT_get_char 002F             _Initialize_Ladder 0C4C             _Initialize_Buzzer 0B38  
          ?_Initialize_Ladder 0001            ?_Initialize_Buzzer 0001                   ??i2___aldiv 0015  
      __end_of_melody_lengths 7BF9                     _fur_elise 7BFF                      _ISR$1542 002B  
         ??_Initialize_Ladder 002F               ___aldiv@divisor 0084               ___aldiv@counter 003B  
         ??_Initialize_Buzzer 002F                      _LATAbits 0F89                      _LATBbits 0F8A  
                    _LATCbits 0F8B                      _LATDbits 0F8C        ??_Initialize_Bluetooth 002F  
                   _rick_roll 7DA9     __end_of_Initialize_Ladder 0C5E   __end_of_Update_StepperMotor 0BF2  
   __end_of_Initialize_Buzzer 0B64                      i2___lmul 09D8               _Ladder_Backward 08E0  
         __end_of_BT_get_char 0ACC                 ??_music_start 0088             ___lmul@multiplier 002F  
                   copy_data0 0A6E              ?_Motor_TurnRight 0001              ??_Ladder_Forward 0033  
         Ladder_Forward@steps 0035           Ladder_Forward@turns 0031            i2___aldiv@dividend 000D  
        __end_of_stepSequence 7BFD                  _BT_load_char 0B64                      __Hrparam 0000  
                    __Lrparam 0000               ??_Motor_Forward 002F            i2___aldiv@quotient 0017  
                    __ptext10 0C3A                      __ptext11 0852                      __ptext20 0A94  
                    __ptext12 08E0                      __ptext13 0BDE                      __ptext22 09D8  
                    __ptext14 0B88                      __ptext23 0748                      __ptext15 0C4C  
                    __ptext16 0B38                      __ptext17 0BAA                      __ptext18 0B02  
                    __ptext19 0B64             ?_Initialize_Motor 0001                      _melodies 004B  
                    _is_pause 0041             ?_Initialize_Songs 0001           __end_of_music_start 063C  
          ??_Initialize_Motor 002F            ??_Initialize_Songs 002F                      isa$xinst 0000  
                    int$flags 0051       __end_of_Ladder_Backward 096E                   _BT_get_char 0A94  
        BT_load_string@string 0030                    _INTCONbits 0FF2         i2___lmul@multiplicand 0005  
                    intlevel2 0000           __end_of_total_songs 7BFF                    _OSCCONbits 0FD3  
                ___aldiv@sign 003C                   _music_start 04EE                 ?_broadcast_BT 0001  
