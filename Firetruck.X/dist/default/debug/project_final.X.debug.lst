

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Dec 24 01:14:47 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Generated 25/07/2024 GMT
    46                           ; 
    47                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4520 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000FE0                     bsr             equ	4064
    80   000FE9                     fsr0            equ	4073
    81   000FEA                     fsr0h           equ	4074
    82   000FE9                     fsr0l           equ	4073
    83   000FE1                     fsr1            equ	4065
    84   000FE2                     fsr1h           equ	4066
    85   000FE1                     fsr1l           equ	4065
    86   000FD9                     fsr2            equ	4057
    87   000FDA                     fsr2h           equ	4058
    88   000FD9                     fsr2l           equ	4057
    89   000FEF                     indf0           equ	4079
    90   000FE7                     indf1           equ	4071
    91   000FDF                     indf2           equ	4063
    92   000FF2                     intcon          equ	4082
    93   000000                     nvmcon          equ	0
    94   000FF9                     pcl             equ	4089
    95   000FFA                     pclath          equ	4090
    96   000FFB                     pclatu          equ	4091
    97   000FEB                     plusw0          equ	4075
    98   000FE3                     plusw1          equ	4067
    99   000FDB                     plusw2          equ	4059
   100   000FED                     postdec0        equ	4077
   101   000FE5                     postdec1        equ	4069
   102   000FDD                     postdec2        equ	4061
   103   000FEE                     postinc0        equ	4078
   104   000FE6                     postinc1        equ	4070
   105   000FDE                     postinc2        equ	4062
   106   000FEC                     preinc0         equ	4076
   107   000FE4                     preinc1         equ	4068
   108   000FDC                     preinc2         equ	4060
   109   000FF3                     prod            equ	4083
   110   000FF4                     prodh           equ	4084
   111   000FF3                     prodl           equ	4083
   112   000FD8                     status          equ	4056
   113   000FF5                     tablat          equ	4085
   114   000FF6                     tblptr          equ	4086
   115   000FF7                     tblptrh         equ	4087
   116   000FF6                     tblptrl         equ	4086
   117   000FF8                     tblptru         equ	4088
   118   000FFD                     tosl            equ	4093
   119   000FE8                     wreg            equ	4072
   120   000F80                     PORTA           equ	3968	;# 
   121   000F81                     PORTB           equ	3969	;# 
   122   000F82                     PORTC           equ	3970	;# 
   123   000F83                     PORTD           equ	3971	;# 
   124   000F84                     PORTE           equ	3972	;# 
   125   000F89                     LATA            equ	3977	;# 
   126   000F8A                     LATB            equ	3978	;# 
   127   000F8B                     LATC            equ	3979	;# 
   128   000F8C                     LATD            equ	3980	;# 
   129   000F8D                     LATE            equ	3981	;# 
   130   000F92                     TRISA           equ	3986	;# 
   131   000F92                     DDRA            equ	3986	;# 
   132   000F93                     TRISB           equ	3987	;# 
   133   000F93                     DDRB            equ	3987	;# 
   134   000F94                     TRISC           equ	3988	;# 
   135   000F94                     DDRC            equ	3988	;# 
   136   000F95                     TRISD           equ	3989	;# 
   137   000F95                     DDRD            equ	3989	;# 
   138   000F96                     TRISE           equ	3990	;# 
   139   000F96                     DDRE            equ	3990	;# 
   140   000F9B                     OSCTUNE         equ	3995	;# 
   141   000F9D                     PIE1            equ	3997	;# 
   142   000F9E                     PIR1            equ	3998	;# 
   143   000F9F                     IPR1            equ	3999	;# 
   144   000FA0                     PIE2            equ	4000	;# 
   145   000FA1                     PIR2            equ	4001	;# 
   146   000FA2                     IPR2            equ	4002	;# 
   147   000FA6                     EECON1          equ	4006	;# 
   148   000FA7                     EECON2          equ	4007	;# 
   149   000FA8                     EEDATA          equ	4008	;# 
   150   000FA9                     EEADR           equ	4009	;# 
   151   000FAB                     RCSTA           equ	4011	;# 
   152   000FAB                     RCSTA1          equ	4011	;# 
   153   000FAC                     TXSTA           equ	4012	;# 
   154   000FAC                     TXSTA1          equ	4012	;# 
   155   000FAD                     TXREG           equ	4013	;# 
   156   000FAD                     TXREG1          equ	4013	;# 
   157   000FAE                     RCREG           equ	4014	;# 
   158   000FAE                     RCREG1          equ	4014	;# 
   159   000FAF                     SPBRG           equ	4015	;# 
   160   000FAF                     SPBRG1          equ	4015	;# 
   161   000FB0                     SPBRGH          equ	4016	;# 
   162   000FB1                     T3CON           equ	4017	;# 
   163   000FB2                     TMR3            equ	4018	;# 
   164   000FB2                     TMR3L           equ	4018	;# 
   165   000FB3                     TMR3H           equ	4019	;# 
   166   000FB4                     CMCON           equ	4020	;# 
   167   000FB5                     CVRCON          equ	4021	;# 
   168   000FB6                     ECCP1AS         equ	4022	;# 
   169   000FB6                     ECCPAS          equ	4022	;# 
   170   000FB7                     PWM1CON         equ	4023	;# 
   171   000FB7                     ECCP1DEL        equ	4023	;# 
   172   000FB8                     BAUDCON         equ	4024	;# 
   173   000FB8                     BAUDCTL         equ	4024	;# 
   174   000FBA                     CCP2CON         equ	4026	;# 
   175   000FBB                     CCPR2           equ	4027	;# 
   176   000FBB                     CCPR2L          equ	4027	;# 
   177   000FBC                     CCPR2H          equ	4028	;# 
   178   000FBD                     CCP1CON         equ	4029	;# 
   179   000FBE                     CCPR1           equ	4030	;# 
   180   000FBE                     CCPR1L          equ	4030	;# 
   181   000FBF                     CCPR1H          equ	4031	;# 
   182   000FC0                     ADCON2          equ	4032	;# 
   183   000FC1                     ADCON1          equ	4033	;# 
   184   000FC2                     ADCON0          equ	4034	;# 
   185   000FC3                     ADRES           equ	4035	;# 
   186   000FC3                     ADRESL          equ	4035	;# 
   187   000FC4                     ADRESH          equ	4036	;# 
   188   000FC5                     SSPCON2         equ	4037	;# 
   189   000FC6                     SSPCON1         equ	4038	;# 
   190   000FC7                     SSPSTAT         equ	4039	;# 
   191   000FC8                     SSPADD          equ	4040	;# 
   192   000FC9                     SSPBUF          equ	4041	;# 
   193   000FCA                     T2CON           equ	4042	;# 
   194   000FCB                     PR2             equ	4043	;# 
   195   000FCB                     MEMCON          equ	4043	;# 
   196   000FCC                     TMR2            equ	4044	;# 
   197   000FCD                     T1CON           equ	4045	;# 
   198   000FCE                     TMR1            equ	4046	;# 
   199   000FCE                     TMR1L           equ	4046	;# 
   200   000FCF                     TMR1H           equ	4047	;# 
   201   000FD0                     RCON            equ	4048	;# 
   202   000FD1                     WDTCON          equ	4049	;# 
   203   000FD2                     HLVDCON         equ	4050	;# 
   204   000FD2                     LVDCON          equ	4050	;# 
   205   000FD3                     OSCCON          equ	4051	;# 
   206   000FD5                     T0CON           equ	4053	;# 
   207   000FD6                     TMR0            equ	4054	;# 
   208   000FD6                     TMR0L           equ	4054	;# 
   209   000FD7                     TMR0H           equ	4055	;# 
   210   000FD8                     STATUS          equ	4056	;# 
   211   000FD9                     FSR2            equ	4057	;# 
   212   000FD9                     FSR2L           equ	4057	;# 
   213   000FDA                     FSR2H           equ	4058	;# 
   214   000FDB                     PLUSW2          equ	4059	;# 
   215   000FDC                     PREINC2         equ	4060	;# 
   216   000FDD                     POSTDEC2        equ	4061	;# 
   217   000FDE                     POSTINC2        equ	4062	;# 
   218   000FDF                     INDF2           equ	4063	;# 
   219   000FE0                     BSR             equ	4064	;# 
   220   000FE1                     FSR1            equ	4065	;# 
   221   000FE1                     FSR1L           equ	4065	;# 
   222   000FE2                     FSR1H           equ	4066	;# 
   223   000FE3                     PLUSW1          equ	4067	;# 
   224   000FE4                     PREINC1         equ	4068	;# 
   225   000FE5                     POSTDEC1        equ	4069	;# 
   226   000FE6                     POSTINC1        equ	4070	;# 
   227   000FE7                     INDF1           equ	4071	;# 
   228   000FE8                     WREG            equ	4072	;# 
   229   000FE9                     FSR0            equ	4073	;# 
   230   000FE9                     FSR0L           equ	4073	;# 
   231   000FEA                     FSR0H           equ	4074	;# 
   232   000FEB                     PLUSW0          equ	4075	;# 
   233   000FEC                     PREINC0         equ	4076	;# 
   234   000FED                     POSTDEC0        equ	4077	;# 
   235   000FEE                     POSTINC0        equ	4078	;# 
   236   000FEF                     INDF0           equ	4079	;# 
   237   000FF0                     INTCON3         equ	4080	;# 
   238   000FF1                     INTCON2         equ	4081	;# 
   239   000FF2                     INTCON          equ	4082	;# 
   240   000FF3                     PROD            equ	4083	;# 
   241   000FF3                     PRODL           equ	4083	;# 
   242   000FF4                     PRODH           equ	4084	;# 
   243   000FF5                     TABLAT          equ	4085	;# 
   244   000FF6                     TBLPTR          equ	4086	;# 
   245   000FF6                     TBLPTRL         equ	4086	;# 
   246   000FF7                     TBLPTRH         equ	4087	;# 
   247   000FF8                     TBLPTRU         equ	4088	;# 
   248   000FF9                     PCLAT           equ	4089	;# 
   249   000FF9                     PC              equ	4089	;# 
   250   000FF9                     PCL             equ	4089	;# 
   251   000FFA                     PCLATH          equ	4090	;# 
   252   000FFB                     PCLATU          equ	4091	;# 
   253   000FFC                     STKPTR          equ	4092	;# 
   254   000FFD                     TOS             equ	4093	;# 
   255   000FFD                     TOSL            equ	4093	;# 
   256   000FFE                     TOSH            equ	4094	;# 
   257   000FFF                     TOSU            equ	4095	;# 
   258   000F80                     PORTA           equ	3968	;# 
   259   000F81                     PORTB           equ	3969	;# 
   260   000F82                     PORTC           equ	3970	;# 
   261   000F83                     PORTD           equ	3971	;# 
   262   000F84                     PORTE           equ	3972	;# 
   263   000F89                     LATA            equ	3977	;# 
   264   000F8A                     LATB            equ	3978	;# 
   265   000F8B                     LATC            equ	3979	;# 
   266   000F8C                     LATD            equ	3980	;# 
   267   000F8D                     LATE            equ	3981	;# 
   268   000F92                     TRISA           equ	3986	;# 
   269   000F92                     DDRA            equ	3986	;# 
   270   000F93                     TRISB           equ	3987	;# 
   271   000F93                     DDRB            equ	3987	;# 
   272   000F94                     TRISC           equ	3988	;# 
   273   000F94                     DDRC            equ	3988	;# 
   274   000F95                     TRISD           equ	3989	;# 
   275   000F95                     DDRD            equ	3989	;# 
   276   000F96                     TRISE           equ	3990	;# 
   277   000F96                     DDRE            equ	3990	;# 
   278   000F9B                     OSCTUNE         equ	3995	;# 
   279   000F9D                     PIE1            equ	3997	;# 
   280   000F9E                     PIR1            equ	3998	;# 
   281   000F9F                     IPR1            equ	3999	;# 
   282   000FA0                     PIE2            equ	4000	;# 
   283   000FA1                     PIR2            equ	4001	;# 
   284   000FA2                     IPR2            equ	4002	;# 
   285   000FA6                     EECON1          equ	4006	;# 
   286   000FA7                     EECON2          equ	4007	;# 
   287   000FA8                     EEDATA          equ	4008	;# 
   288   000FA9                     EEADR           equ	4009	;# 
   289   000FAB                     RCSTA           equ	4011	;# 
   290   000FAB                     RCSTA1          equ	4011	;# 
   291   000FAC                     TXSTA           equ	4012	;# 
   292   000FAC                     TXSTA1          equ	4012	;# 
   293   000FAD                     TXREG           equ	4013	;# 
   294   000FAD                     TXREG1          equ	4013	;# 
   295   000FAE                     RCREG           equ	4014	;# 
   296   000FAE                     RCREG1          equ	4014	;# 
   297   000FAF                     SPBRG           equ	4015	;# 
   298   000FAF                     SPBRG1          equ	4015	;# 
   299   000FB0                     SPBRGH          equ	4016	;# 
   300   000FB1                     T3CON           equ	4017	;# 
   301   000FB2                     TMR3            equ	4018	;# 
   302   000FB2                     TMR3L           equ	4018	;# 
   303   000FB3                     TMR3H           equ	4019	;# 
   304   000FB4                     CMCON           equ	4020	;# 
   305   000FB5                     CVRCON          equ	4021	;# 
   306   000FB6                     ECCP1AS         equ	4022	;# 
   307   000FB6                     ECCPAS          equ	4022	;# 
   308   000FB7                     PWM1CON         equ	4023	;# 
   309   000FB7                     ECCP1DEL        equ	4023	;# 
   310   000FB8                     BAUDCON         equ	4024	;# 
   311   000FB8                     BAUDCTL         equ	4024	;# 
   312   000FBA                     CCP2CON         equ	4026	;# 
   313   000FBB                     CCPR2           equ	4027	;# 
   314   000FBB                     CCPR2L          equ	4027	;# 
   315   000FBC                     CCPR2H          equ	4028	;# 
   316   000FBD                     CCP1CON         equ	4029	;# 
   317   000FBE                     CCPR1           equ	4030	;# 
   318   000FBE                     CCPR1L          equ	4030	;# 
   319   000FBF                     CCPR1H          equ	4031	;# 
   320   000FC0                     ADCON2          equ	4032	;# 
   321   000FC1                     ADCON1          equ	4033	;# 
   322   000FC2                     ADCON0          equ	4034	;# 
   323   000FC3                     ADRES           equ	4035	;# 
   324   000FC3                     ADRESL          equ	4035	;# 
   325   000FC4                     ADRESH          equ	4036	;# 
   326   000FC5                     SSPCON2         equ	4037	;# 
   327   000FC6                     SSPCON1         equ	4038	;# 
   328   000FC7                     SSPSTAT         equ	4039	;# 
   329   000FC8                     SSPADD          equ	4040	;# 
   330   000FC9                     SSPBUF          equ	4041	;# 
   331   000FCA                     T2CON           equ	4042	;# 
   332   000FCB                     PR2             equ	4043	;# 
   333   000FCB                     MEMCON          equ	4043	;# 
   334   000FCC                     TMR2            equ	4044	;# 
   335   000FCD                     T1CON           equ	4045	;# 
   336   000FCE                     TMR1            equ	4046	;# 
   337   000FCE                     TMR1L           equ	4046	;# 
   338   000FCF                     TMR1H           equ	4047	;# 
   339   000FD0                     RCON            equ	4048	;# 
   340   000FD1                     WDTCON          equ	4049	;# 
   341   000FD2                     HLVDCON         equ	4050	;# 
   342   000FD2                     LVDCON          equ	4050	;# 
   343   000FD3                     OSCCON          equ	4051	;# 
   344   000FD5                     T0CON           equ	4053	;# 
   345   000FD6                     TMR0            equ	4054	;# 
   346   000FD6                     TMR0L           equ	4054	;# 
   347   000FD7                     TMR0H           equ	4055	;# 
   348   000FD8                     STATUS          equ	4056	;# 
   349   000FD9                     FSR2            equ	4057	;# 
   350   000FD9                     FSR2L           equ	4057	;# 
   351   000FDA                     FSR2H           equ	4058	;# 
   352   000FDB                     PLUSW2          equ	4059	;# 
   353   000FDC                     PREINC2         equ	4060	;# 
   354   000FDD                     POSTDEC2        equ	4061	;# 
   355   000FDE                     POSTINC2        equ	4062	;# 
   356   000FDF                     INDF2           equ	4063	;# 
   357   000FE0                     BSR             equ	4064	;# 
   358   000FE1                     FSR1            equ	4065	;# 
   359   000FE1                     FSR1L           equ	4065	;# 
   360   000FE2                     FSR1H           equ	4066	;# 
   361   000FE3                     PLUSW1          equ	4067	;# 
   362   000FE4                     PREINC1         equ	4068	;# 
   363   000FE5                     POSTDEC1        equ	4069	;# 
   364   000FE6                     POSTINC1        equ	4070	;# 
   365   000FE7                     INDF1           equ	4071	;# 
   366   000FE8                     WREG            equ	4072	;# 
   367   000FE9                     FSR0            equ	4073	;# 
   368   000FE9                     FSR0L           equ	4073	;# 
   369   000FEA                     FSR0H           equ	4074	;# 
   370   000FEB                     PLUSW0          equ	4075	;# 
   371   000FEC                     PREINC0         equ	4076	;# 
   372   000FED                     POSTDEC0        equ	4077	;# 
   373   000FEE                     POSTINC0        equ	4078	;# 
   374   000FEF                     INDF0           equ	4079	;# 
   375   000FF0                     INTCON3         equ	4080	;# 
   376   000FF1                     INTCON2         equ	4081	;# 
   377   000FF2                     INTCON          equ	4082	;# 
   378   000FF3                     PROD            equ	4083	;# 
   379   000FF3                     PRODL           equ	4083	;# 
   380   000FF4                     PRODH           equ	4084	;# 
   381   000FF5                     TABLAT          equ	4085	;# 
   382   000FF6                     TBLPTR          equ	4086	;# 
   383   000FF6                     TBLPTRL         equ	4086	;# 
   384   000FF7                     TBLPTRH         equ	4087	;# 
   385   000FF8                     TBLPTRU         equ	4088	;# 
   386   000FF9                     PCLAT           equ	4089	;# 
   387   000FF9                     PC              equ	4089	;# 
   388   000FF9                     PCL             equ	4089	;# 
   389   000FFA                     PCLATH          equ	4090	;# 
   390   000FFB                     PCLATU          equ	4091	;# 
   391   000FFC                     STKPTR          equ	4092	;# 
   392   000FFD                     TOS             equ	4093	;# 
   393   000FFD                     TOSL            equ	4093	;# 
   394   000FFE                     TOSH            equ	4094	;# 
   395   000FFF                     TOSU            equ	4095	;# 
   396   000F80                     PORTA           equ	3968	;# 
   397   000F81                     PORTB           equ	3969	;# 
   398   000F82                     PORTC           equ	3970	;# 
   399   000F83                     PORTD           equ	3971	;# 
   400   000F84                     PORTE           equ	3972	;# 
   401   000F89                     LATA            equ	3977	;# 
   402   000F8A                     LATB            equ	3978	;# 
   403   000F8B                     LATC            equ	3979	;# 
   404   000F8C                     LATD            equ	3980	;# 
   405   000F8D                     LATE            equ	3981	;# 
   406   000F92                     TRISA           equ	3986	;# 
   407   000F92                     DDRA            equ	3986	;# 
   408   000F93                     TRISB           equ	3987	;# 
   409   000F93                     DDRB            equ	3987	;# 
   410   000F94                     TRISC           equ	3988	;# 
   411   000F94                     DDRC            equ	3988	;# 
   412   000F95                     TRISD           equ	3989	;# 
   413   000F95                     DDRD            equ	3989	;# 
   414   000F96                     TRISE           equ	3990	;# 
   415   000F96                     DDRE            equ	3990	;# 
   416   000F9B                     OSCTUNE         equ	3995	;# 
   417   000F9D                     PIE1            equ	3997	;# 
   418   000F9E                     PIR1            equ	3998	;# 
   419   000F9F                     IPR1            equ	3999	;# 
   420   000FA0                     PIE2            equ	4000	;# 
   421   000FA1                     PIR2            equ	4001	;# 
   422   000FA2                     IPR2            equ	4002	;# 
   423   000FA6                     EECON1          equ	4006	;# 
   424   000FA7                     EECON2          equ	4007	;# 
   425   000FA8                     EEDATA          equ	4008	;# 
   426   000FA9                     EEADR           equ	4009	;# 
   427   000FAB                     RCSTA           equ	4011	;# 
   428   000FAB                     RCSTA1          equ	4011	;# 
   429   000FAC                     TXSTA           equ	4012	;# 
   430   000FAC                     TXSTA1          equ	4012	;# 
   431   000FAD                     TXREG           equ	4013	;# 
   432   000FAD                     TXREG1          equ	4013	;# 
   433   000FAE                     RCREG           equ	4014	;# 
   434   000FAE                     RCREG1          equ	4014	;# 
   435   000FAF                     SPBRG           equ	4015	;# 
   436   000FAF                     SPBRG1          equ	4015	;# 
   437   000FB0                     SPBRGH          equ	4016	;# 
   438   000FB1                     T3CON           equ	4017	;# 
   439   000FB2                     TMR3            equ	4018	;# 
   440   000FB2                     TMR3L           equ	4018	;# 
   441   000FB3                     TMR3H           equ	4019	;# 
   442   000FB4                     CMCON           equ	4020	;# 
   443   000FB5                     CVRCON          equ	4021	;# 
   444   000FB6                     ECCP1AS         equ	4022	;# 
   445   000FB6                     ECCPAS          equ	4022	;# 
   446   000FB7                     PWM1CON         equ	4023	;# 
   447   000FB7                     ECCP1DEL        equ	4023	;# 
   448   000FB8                     BAUDCON         equ	4024	;# 
   449   000FB8                     BAUDCTL         equ	4024	;# 
   450   000FBA                     CCP2CON         equ	4026	;# 
   451   000FBB                     CCPR2           equ	4027	;# 
   452   000FBB                     CCPR2L          equ	4027	;# 
   453   000FBC                     CCPR2H          equ	4028	;# 
   454   000FBD                     CCP1CON         equ	4029	;# 
   455   000FBE                     CCPR1           equ	4030	;# 
   456   000FBE                     CCPR1L          equ	4030	;# 
   457   000FBF                     CCPR1H          equ	4031	;# 
   458   000FC0                     ADCON2          equ	4032	;# 
   459   000FC1                     ADCON1          equ	4033	;# 
   460   000FC2                     ADCON0          equ	4034	;# 
   461   000FC3                     ADRES           equ	4035	;# 
   462   000FC3                     ADRESL          equ	4035	;# 
   463   000FC4                     ADRESH          equ	4036	;# 
   464   000FC5                     SSPCON2         equ	4037	;# 
   465   000FC6                     SSPCON1         equ	4038	;# 
   466   000FC7                     SSPSTAT         equ	4039	;# 
   467   000FC8                     SSPADD          equ	4040	;# 
   468   000FC9                     SSPBUF          equ	4041	;# 
   469   000FCA                     T2CON           equ	4042	;# 
   470   000FCB                     PR2             equ	4043	;# 
   471   000FCB                     MEMCON          equ	4043	;# 
   472   000FCC                     TMR2            equ	4044	;# 
   473   000FCD                     T1CON           equ	4045	;# 
   474   000FCE                     TMR1            equ	4046	;# 
   475   000FCE                     TMR1L           equ	4046	;# 
   476   000FCF                     TMR1H           equ	4047	;# 
   477   000FD0                     RCON            equ	4048	;# 
   478   000FD1                     WDTCON          equ	4049	;# 
   479   000FD2                     HLVDCON         equ	4050	;# 
   480   000FD2                     LVDCON          equ	4050	;# 
   481   000FD3                     OSCCON          equ	4051	;# 
   482   000FD5                     T0CON           equ	4053	;# 
   483   000FD6                     TMR0            equ	4054	;# 
   484   000FD6                     TMR0L           equ	4054	;# 
   485   000FD7                     TMR0H           equ	4055	;# 
   486   000FD8                     STATUS          equ	4056	;# 
   487   000FD9                     FSR2            equ	4057	;# 
   488   000FD9                     FSR2L           equ	4057	;# 
   489   000FDA                     FSR2H           equ	4058	;# 
   490   000FDB                     PLUSW2          equ	4059	;# 
   491   000FDC                     PREINC2         equ	4060	;# 
   492   000FDD                     POSTDEC2        equ	4061	;# 
   493   000FDE                     POSTINC2        equ	4062	;# 
   494   000FDF                     INDF2           equ	4063	;# 
   495   000FE0                     BSR             equ	4064	;# 
   496   000FE1                     FSR1            equ	4065	;# 
   497   000FE1                     FSR1L           equ	4065	;# 
   498   000FE2                     FSR1H           equ	4066	;# 
   499   000FE3                     PLUSW1          equ	4067	;# 
   500   000FE4                     PREINC1         equ	4068	;# 
   501   000FE5                     POSTDEC1        equ	4069	;# 
   502   000FE6                     POSTINC1        equ	4070	;# 
   503   000FE7                     INDF1           equ	4071	;# 
   504   000FE8                     WREG            equ	4072	;# 
   505   000FE9                     FSR0            equ	4073	;# 
   506   000FE9                     FSR0L           equ	4073	;# 
   507   000FEA                     FSR0H           equ	4074	;# 
   508   000FEB                     PLUSW0          equ	4075	;# 
   509   000FEC                     PREINC0         equ	4076	;# 
   510   000FED                     POSTDEC0        equ	4077	;# 
   511   000FEE                     POSTINC0        equ	4078	;# 
   512   000FEF                     INDF0           equ	4079	;# 
   513   000FF0                     INTCON3         equ	4080	;# 
   514   000FF1                     INTCON2         equ	4081	;# 
   515   000FF2                     INTCON          equ	4082	;# 
   516   000FF3                     PROD            equ	4083	;# 
   517   000FF3                     PRODL           equ	4083	;# 
   518   000FF4                     PRODH           equ	4084	;# 
   519   000FF5                     TABLAT          equ	4085	;# 
   520   000FF6                     TBLPTR          equ	4086	;# 
   521   000FF6                     TBLPTRL         equ	4086	;# 
   522   000FF7                     TBLPTRH         equ	4087	;# 
   523   000FF8                     TBLPTRU         equ	4088	;# 
   524   000FF9                     PCLAT           equ	4089	;# 
   525   000FF9                     PC              equ	4089	;# 
   526   000FF9                     PCL             equ	4089	;# 
   527   000FFA                     PCLATH          equ	4090	;# 
   528   000FFB                     PCLATU          equ	4091	;# 
   529   000FFC                     STKPTR          equ	4092	;# 
   530   000FFD                     TOS             equ	4093	;# 
   531   000FFD                     TOSL            equ	4093	;# 
   532   000FFE                     TOSH            equ	4094	;# 
   533   000FFF                     TOSU            equ	4095	;# 
   534   000F80                     PORTA           equ	3968	;# 
   535   000F81                     PORTB           equ	3969	;# 
   536   000F82                     PORTC           equ	3970	;# 
   537   000F83                     PORTD           equ	3971	;# 
   538   000F84                     PORTE           equ	3972	;# 
   539   000F89                     LATA            equ	3977	;# 
   540   000F8A                     LATB            equ	3978	;# 
   541   000F8B                     LATC            equ	3979	;# 
   542   000F8C                     LATD            equ	3980	;# 
   543   000F8D                     LATE            equ	3981	;# 
   544   000F92                     TRISA           equ	3986	;# 
   545   000F92                     DDRA            equ	3986	;# 
   546   000F93                     TRISB           equ	3987	;# 
   547   000F93                     DDRB            equ	3987	;# 
   548   000F94                     TRISC           equ	3988	;# 
   549   000F94                     DDRC            equ	3988	;# 
   550   000F95                     TRISD           equ	3989	;# 
   551   000F95                     DDRD            equ	3989	;# 
   552   000F96                     TRISE           equ	3990	;# 
   553   000F96                     DDRE            equ	3990	;# 
   554   000F9B                     OSCTUNE         equ	3995	;# 
   555   000F9D                     PIE1            equ	3997	;# 
   556   000F9E                     PIR1            equ	3998	;# 
   557   000F9F                     IPR1            equ	3999	;# 
   558   000FA0                     PIE2            equ	4000	;# 
   559   000FA1                     PIR2            equ	4001	;# 
   560   000FA2                     IPR2            equ	4002	;# 
   561   000FA6                     EECON1          equ	4006	;# 
   562   000FA7                     EECON2          equ	4007	;# 
   563   000FA8                     EEDATA          equ	4008	;# 
   564   000FA9                     EEADR           equ	4009	;# 
   565   000FAB                     RCSTA           equ	4011	;# 
   566   000FAB                     RCSTA1          equ	4011	;# 
   567   000FAC                     TXSTA           equ	4012	;# 
   568   000FAC                     TXSTA1          equ	4012	;# 
   569   000FAD                     TXREG           equ	4013	;# 
   570   000FAD                     TXREG1          equ	4013	;# 
   571   000FAE                     RCREG           equ	4014	;# 
   572   000FAE                     RCREG1          equ	4014	;# 
   573   000FAF                     SPBRG           equ	4015	;# 
   574   000FAF                     SPBRG1          equ	4015	;# 
   575   000FB0                     SPBRGH          equ	4016	;# 
   576   000FB1                     T3CON           equ	4017	;# 
   577   000FB2                     TMR3            equ	4018	;# 
   578   000FB2                     TMR3L           equ	4018	;# 
   579   000FB3                     TMR3H           equ	4019	;# 
   580   000FB4                     CMCON           equ	4020	;# 
   581   000FB5                     CVRCON          equ	4021	;# 
   582   000FB6                     ECCP1AS         equ	4022	;# 
   583   000FB6                     ECCPAS          equ	4022	;# 
   584   000FB7                     PWM1CON         equ	4023	;# 
   585   000FB7                     ECCP1DEL        equ	4023	;# 
   586   000FB8                     BAUDCON         equ	4024	;# 
   587   000FB8                     BAUDCTL         equ	4024	;# 
   588   000FBA                     CCP2CON         equ	4026	;# 
   589   000FBB                     CCPR2           equ	4027	;# 
   590   000FBB                     CCPR2L          equ	4027	;# 
   591   000FBC                     CCPR2H          equ	4028	;# 
   592   000FBD                     CCP1CON         equ	4029	;# 
   593   000FBE                     CCPR1           equ	4030	;# 
   594   000FBE                     CCPR1L          equ	4030	;# 
   595   000FBF                     CCPR1H          equ	4031	;# 
   596   000FC0                     ADCON2          equ	4032	;# 
   597   000FC1                     ADCON1          equ	4033	;# 
   598   000FC2                     ADCON0          equ	4034	;# 
   599   000FC3                     ADRES           equ	4035	;# 
   600   000FC3                     ADRESL          equ	4035	;# 
   601   000FC4                     ADRESH          equ	4036	;# 
   602   000FC5                     SSPCON2         equ	4037	;# 
   603   000FC6                     SSPCON1         equ	4038	;# 
   604   000FC7                     SSPSTAT         equ	4039	;# 
   605   000FC8                     SSPADD          equ	4040	;# 
   606   000FC9                     SSPBUF          equ	4041	;# 
   607   000FCA                     T2CON           equ	4042	;# 
   608   000FCB                     PR2             equ	4043	;# 
   609   000FCB                     MEMCON          equ	4043	;# 
   610   000FCC                     TMR2            equ	4044	;# 
   611   000FCD                     T1CON           equ	4045	;# 
   612   000FCE                     TMR1            equ	4046	;# 
   613   000FCE                     TMR1L           equ	4046	;# 
   614   000FCF                     TMR1H           equ	4047	;# 
   615   000FD0                     RCON            equ	4048	;# 
   616   000FD1                     WDTCON          equ	4049	;# 
   617   000FD2                     HLVDCON         equ	4050	;# 
   618   000FD2                     LVDCON          equ	4050	;# 
   619   000FD3                     OSCCON          equ	4051	;# 
   620   000FD5                     T0CON           equ	4053	;# 
   621   000FD6                     TMR0            equ	4054	;# 
   622   000FD6                     TMR0L           equ	4054	;# 
   623   000FD7                     TMR0H           equ	4055	;# 
   624   000FD8                     STATUS          equ	4056	;# 
   625   000FD9                     FSR2            equ	4057	;# 
   626   000FD9                     FSR2L           equ	4057	;# 
   627   000FDA                     FSR2H           equ	4058	;# 
   628   000FDB                     PLUSW2          equ	4059	;# 
   629   000FDC                     PREINC2         equ	4060	;# 
   630   000FDD                     POSTDEC2        equ	4061	;# 
   631   000FDE                     POSTINC2        equ	4062	;# 
   632   000FDF                     INDF2           equ	4063	;# 
   633   000FE0                     BSR             equ	4064	;# 
   634   000FE1                     FSR1            equ	4065	;# 
   635   000FE1                     FSR1L           equ	4065	;# 
   636   000FE2                     FSR1H           equ	4066	;# 
   637   000FE3                     PLUSW1          equ	4067	;# 
   638   000FE4                     PREINC1         equ	4068	;# 
   639   000FE5                     POSTDEC1        equ	4069	;# 
   640   000FE6                     POSTINC1        equ	4070	;# 
   641   000FE7                     INDF1           equ	4071	;# 
   642   000FE8                     WREG            equ	4072	;# 
   643   000FE9                     FSR0            equ	4073	;# 
   644   000FE9                     FSR0L           equ	4073	;# 
   645   000FEA                     FSR0H           equ	4074	;# 
   646   000FEB                     PLUSW0          equ	4075	;# 
   647   000FEC                     PREINC0         equ	4076	;# 
   648   000FED                     POSTDEC0        equ	4077	;# 
   649   000FEE                     POSTINC0        equ	4078	;# 
   650   000FEF                     INDF0           equ	4079	;# 
   651   000FF0                     INTCON3         equ	4080	;# 
   652   000FF1                     INTCON2         equ	4081	;# 
   653   000FF2                     INTCON          equ	4082	;# 
   654   000FF3                     PROD            equ	4083	;# 
   655   000FF3                     PRODL           equ	4083	;# 
   656   000FF4                     PRODH           equ	4084	;# 
   657   000FF5                     TABLAT          equ	4085	;# 
   658   000FF6                     TBLPTR          equ	4086	;# 
   659   000FF6                     TBLPTRL         equ	4086	;# 
   660   000FF7                     TBLPTRH         equ	4087	;# 
   661   000FF8                     TBLPTRU         equ	4088	;# 
   662   000FF9                     PCLAT           equ	4089	;# 
   663   000FF9                     PC              equ	4089	;# 
   664   000FF9                     PCL             equ	4089	;# 
   665   000FFA                     PCLATH          equ	4090	;# 
   666   000FFB                     PCLATU          equ	4091	;# 
   667   000FFC                     STKPTR          equ	4092	;# 
   668   000FFD                     TOS             equ	4093	;# 
   669   000FFD                     TOSL            equ	4093	;# 
   670   000FFE                     TOSH            equ	4094	;# 
   671   000FFF                     TOSU            equ	4095	;# 
   672                           
   673                           	psect	idataCOMRAM
   674   000C5E                     __pidataCOMRAM:
   675                           	callstack 0
   676                           
   677                           ;initializer for _melodies
   678   000C5E  BF                 	db	low _fur_elise
   679   000C5F  79                 	db	high _fur_elise
   680   000C60  69                 	db	low _rick_roll_test
   681   000C61  7B                 	db	high _rick_roll_test
   682   000C62  95                 	db	low _deja_vu
   683   000C63  7C                 	db	high _deja_vu
   684                           
   685                           	psect	idataBANK0
   686   000C64                     __pidataBANK0:
   687                           	callstack 0
   688                           
   689                           ;initializer for _current_song
   690   000C64  FFFF               	dw	65535
   691                           
   692                           	psect	mediumconst
   693   007826                     __pmediumconst:
   694                           	callstack 0
   695   007826  00                 	db	0
   696   007827                     _rick_roll:
   697                           	callstack 0
   698   007827  008D               	dw	141
   699   007829  0014               	dw	20
   700   00782B  007D               	dw	125
   701   00782D  007E               	dw	126
   702   00782F  0014               	dw	20
   703   007831  007D               	dw	125
   704   007833  0069               	dw	105
   705   007835  0014               	dw	20
   706   007837  007D               	dw	125
   707   007839  007E               	dw	126
   708   00783B  0014               	dw	20
   709   00783D  0177               	dw	375
   710   00783F  0053               	dw	83
   711   007841  0032               	dw	50
   712   007843  0177               	dw	375
   713   007845  0053               	dw	83
   714   007847  0032               	dw	50
   715   007849  02EE               	dw	750
   716   00784B  005F               	dw	95
   717   00784D  004B               	dw	75
   718   00784F  007D               	dw	125
   719   007851  008D               	dw	141
   720   007853  0014               	dw	20
   721   007855  007D               	dw	125
   722   007857  007E               	dw	126
   723   007859  0014               	dw	20
   724   00785B  007D               	dw	125
   725   00785D  0069               	dw	105
   726   00785F  0014               	dw	20
   727   007861  007D               	dw	125
   728   007863  007E               	dw	126
   729   007865  0014               	dw	20
   730   007867  0177               	dw	375
   731   007869  005F               	dw	95
   732   00786B  0032               	dw	50
   733   00786D  0177               	dw	375
   734   00786F  005F               	dw	95
   735   007871  0032               	dw	50
   736   007873  02EE               	dw	750
   737   007875  0069               	dw	105
   738   007877  004B               	dw	75
   739   007879  007D               	dw	125
   740   00787B  008D               	dw	141
   741   00787D  0014               	dw	20
   742   00787F  007D               	dw	125
   743   007881  007E               	dw	126
   744   007883  0014               	dw	20
   745   007885  007D               	dw	125
   746   007887  0069               	dw	105
   747   007889  0014               	dw	20
   748   00788B  007D               	dw	125
   749   00788D  007E               	dw	126
   750   00788F  0014               	dw	20
   751   007891  02EE               	dw	750
   752   007893  0069               	dw	105
   753   007895  004B               	dw	75
   754   007897  00FA               	dw	250
   755   007899  005F               	dw	95
   756   00789B  0023               	dw	35
   757   00789D  0177               	dw	375
   758   00789F  006F               	dw	111
   759   0078A1  0032               	dw	50
   760   0078A3  007D               	dw	125
   761   0078A5  007E               	dw	126
   762   0078A7  0014               	dw	20
   763   0078A9  01F4               	dw	500
   764   0078AB  008D               	dw	141
   765   0078AD  0096               	dw	150
   766   0078AF  01F4               	dw	500
   767   0078B1  005F               	dw	95
   768   0078B3  0023               	dw	35
   769   0078B5  00FA               	dw	250
   770   0078B7  0069               	dw	105
   771   0078B9  0217               	dw	535
   772   0078BB  007D               	dw	125
   773   0078BD  008D               	dw	141
   774   0078BF  0014               	dw	20
   775   0078C1  007D               	dw	125
   776   0078C3  007E               	dw	126
   777   0078C5  0014               	dw	20
   778   0078C7  007D               	dw	125
   779   0078C9  0069               	dw	105
   780   0078CB  0014               	dw	20
   781   0078CD  007D               	dw	125
   782   0078CF  007E               	dw	126
   783   0078D1  0014               	dw	20
   784   0078D3  0177               	dw	375
   785   0078D5  0053               	dw	83
   786   0078D7  0032               	dw	50
   787   0078D9  0177               	dw	375
   788   0078DB  0053               	dw	83
   789   0078DD  0032               	dw	50
   790   0078DF  02EE               	dw	750
   791   0078E1  005F               	dw	95
   792   0078E3  004B               	dw	75
   793   0078E5  007D               	dw	125
   794   0078E7  008D               	dw	141
   795   0078E9  0014               	dw	20
   796   0078EB  007D               	dw	125
   797   0078ED  007E               	dw	126
   798   0078EF  0014               	dw	20
   799   0078F1  007D               	dw	125
   800   0078F3  0069               	dw	105
   801   0078F5  0014               	dw	20
   802   0078F7  007D               	dw	125
   803   0078F9  007E               	dw	126
   804   0078FB  0014               	dw	20
   805   0078FD  01F4               	dw	500
   806   0078FF  0045               	dw	69
   807   007901  0041               	dw	65
   808   007903  00FA               	dw	250
   809   007905  006F               	dw	111
   810   007907  0014               	dw	20
   811   007909  01F4               	dw	500
   812   00790B  0069               	dw	105
   813   00790D  0235               	dw	565
   814   00790F  007D               	dw	125
   815   007911  008D               	dw	141
   816   007913  0014               	dw	20
   817   007915  007D               	dw	125
   818   007917  007E               	dw	126
   819   007919  0014               	dw	20
   820   00791B  007D               	dw	125
   821   00791D  0069               	dw	105
   822   00791F  0014               	dw	20
   823   007921  007D               	dw	125
   824   007923  007E               	dw	126
   825   007925  0014               	dw	20
   826   007927  02EE               	dw	750
   827   007929  0069               	dw	105
   828   00792B  004B               	dw	75
   829   00792D  00FA               	dw	250
   830   00792F  005F               	dw	95
   831   007931  0023               	dw	35
   832   007933  0177               	dw	375
   833   007935  006F               	dw	111
   834   007937  0032               	dw	50
   835   007939  007D               	dw	125
   836   00793B  007E               	dw	126
   837   00793D  0014               	dw	20
   838   00793F  01F4               	dw	500
   839   007941  008D               	dw	141
   840   007943  0096               	dw	150
   841   007945  01F4               	dw	500
   842   007947  005F               	dw	95
   843   007949  0023               	dw	35
   844   00794B  00FA               	dw	250
   845   00794D  0069               	dw	105
   846   00794F  0235               	dw	565
   847   007951  007D               	dw	125
   848   007953                     __end_of_rick_roll:
   849                           	callstack 0
   850   007953                     _melody2:
   851                           	callstack 0
   852   007953  00C8               	dw	200
   853   007955  012C               	dw	300
   854   007957  001E               	dw	30
   855   007959  0096               	dw	150
   856   00795B  012C               	dw	300
   857   00795D  001E               	dw	30
   858   00795F  0064               	dw	100
   859   007961  012C               	dw	300
   860   007963  001E               	dw	30
   861   007965  0032               	dw	50
   862   007967  012C               	dw	300
   863   007969  001E               	dw	30
   864   00796B  00EE               	dw	238
   865   00796D  012C               	dw	300
   866   00796F  001E               	dw	30
   867   007971  00BD               	dw	189
   868   007973  012C               	dw	300
   869   007975  001E               	dw	30
   870   007977  009E               	dw	158
   871   007979  012C               	dw	300
   872   00797B  001E               	dw	30
   873   00797D  0076               	dw	118
   874   00797F  012C               	dw	300
   875   007981  001E               	dw	30
   876   007983  00C8               	dw	200
   877   007985  012C               	dw	300
   878   007987  001E               	dw	30
   879   007989  0096               	dw	150
   880   00798B  012C               	dw	300
   881   00798D  001E               	dw	30
   882   00798F  0064               	dw	100
   883   007991  012C               	dw	300
   884   007993  001E               	dw	30
   885   007995  0032               	dw	50
   886   007997  012C               	dw	300
   887   007999  001E               	dw	30
   888   00799B  00EE               	dw	238
   889   00799D  012C               	dw	300
   890   00799F  001E               	dw	30
   891   0079A1  00BD               	dw	189
   892   0079A3  012C               	dw	300
   893   0079A5  001E               	dw	30
   894   0079A7  009E               	dw	158
   895   0079A9  012C               	dw	300
   896   0079AB  001E               	dw	30
   897   0079AD  0076               	dw	118
   898   0079AF  012C               	dw	300
   899   0079B1  001E               	dw	30
   900   0079B3                     __end_of_melody2:
   901                           	callstack 0
   902   0079B3                     _melody_lengths:
   903                           	callstack 0
   904   0079B3  0047               	dw	71
   905   0079B5  0032               	dw	50
   906   0079B7  0019               	dw	25
   907   0079B9                     __end_of_melody_lengths:
   908                           	callstack 0
   909   0079B9                     _stepSequence:
   910                           	callstack 0
   911   0079B9  30                 	db	48
   912   0079BA  60                 	db	96
   913   0079BB  C0                 	db	192
   914   0079BC  90                 	db	144
   915   0079BD                     __end_of_stepSequence:
   916                           	callstack 0
   917   0079BD  0003               	dw	3
   918   0079BF                     __end_of_total_songs:
   919                           	callstack 0
   920   0079BF                     _fur_elise:
   921                           	callstack 0
   922   0079BF  002E               	dw	46
   923   0079C1  004B               	dw	75
   924   0079C3  00FA               	dw	250
   925   0079C5  0031               	dw	49
   926   0079C7  004B               	dw	75
   927   0079C9  00FA               	dw	250
   928   0079CB  002E               	dw	46
   929   0079CD  004B               	dw	75
   930   0079CF  00FA               	dw	250
   931   0079D1  0031               	dw	49
   932   0079D3  004B               	dw	75
   933   0079D5  00FA               	dw	250
   934   0079D7  002E               	dw	46
   935   0079D9  004B               	dw	75
   936   0079DB  00FA               	dw	250
   937   0079DD  003E               	dw	62
   938   0079DF  004B               	dw	75
   939   0079E1  00FA               	dw	250
   940   0079E3  0034               	dw	52
   941   0079E5  004B               	dw	75
   942   0079E7  00FA               	dw	250
   943   0079E9  003B               	dw	59
   944   0079EB  004B               	dw	75
   945   0079ED  00FA               	dw	250
   946   0079EF  0046               	dw	70
   947   0079F1  004B               	dw	75
   948   0079F3  00FA               	dw	250
   949   0079F5  00BD               	dw	189
   950   0079F7  004B               	dw	75
   951   0079F9  00FA               	dw	250
   952   0079FB  008D               	dw	141
   953   0079FD  004B               	dw	75
   954   0079FF  00FA               	dw	250
   955   007A01  0076               	dw	118
   956   007A03  004B               	dw	75
   957   007A05  00FA               	dw	250
   958   007A07  005E               	dw	94
   959   007A09  004B               	dw	75
   960   007A0B  00FA               	dw	250
   961   007A0D  0046               	dw	70
   962   007A0F  004B               	dw	75
   963   007A11  00FA               	dw	250
   964   007A13  003E               	dw	62
   965   007A15  004B               	dw	75
   966   007A17  00FA               	dw	250
   967   007A19  00BD               	dw	189
   968   007A1B  004B               	dw	75
   969   007A1D  00FA               	dw	250
   970   007A1F  007E               	dw	126
   971   007A21  004B               	dw	75
   972   007A23  00FA               	dw	250
   973   007A25  005E               	dw	94
   974   007A27  004B               	dw	75
   975   007A29  00FA               	dw	250
   976   007A2B  004A               	dw	74
   977   007A2D  004B               	dw	75
   978   007A2F  00FA               	dw	250
   979   007A31  003E               	dw	62
   980   007A33  004B               	dw	75
   981   007A35  00FA               	dw	250
   982   007A37  003B               	dw	59
   983   007A39  004B               	dw	75
   984   007A3B  00FA               	dw	250
   985   007A3D  00BD               	dw	189
   986   007A3F  004B               	dw	75
   987   007A41  00FA               	dw	250
   988   007A43  008D               	dw	141
   989   007A45  004B               	dw	75
   990   007A47  00FA               	dw	250
   991   007A49  005E               	dw	94
   992   007A4B  004B               	dw	75
   993   007A4D  00FA               	dw	250
   994   007A4F  002E               	dw	46
   995   007A51  004B               	dw	75
   996   007A53  00FA               	dw	250
   997   007A55  0031               	dw	49
   998   007A57  004B               	dw	75
   999   007A59  00FA               	dw	250
  1000   007A5B  002E               	dw	46
  1001   007A5D  004B               	dw	75
  1002   007A5F  00FA               	dw	250
  1003   007A61  0031               	dw	49
  1004   007A63  004B               	dw	75
  1005   007A65  00FA               	dw	250
  1006   007A67  002E               	dw	46
  1007   007A69  004B               	dw	75
  1008   007A6B  00FA               	dw	250
  1009   007A6D  003E               	dw	62
  1010   007A6F  004B               	dw	75
  1011   007A71  00FA               	dw	250
  1012   007A73  0034               	dw	52
  1013   007A75  004B               	dw	75
  1014   007A77  00FA               	dw	250
  1015   007A79  003B               	dw	59
  1016   007A7B  004B               	dw	75
  1017   007A7D  00FA               	dw	250
  1018   007A7F  0046               	dw	70
  1019   007A81  004B               	dw	75
  1020   007A83  00FA               	dw	250
  1021   007A85  00BD               	dw	189
  1022   007A87  004B               	dw	75
  1023   007A89  00FA               	dw	250
  1024   007A8B  008D               	dw	141
  1025   007A8D  004B               	dw	75
  1026   007A8F  00FA               	dw	250
  1027   007A91  0076               	dw	118
  1028   007A93  004B               	dw	75
  1029   007A95  00FA               	dw	250
  1030   007A97  005E               	dw	94
  1031   007A99  004B               	dw	75
  1032   007A9B  00FA               	dw	250
  1033   007A9D  0046               	dw	70
  1034   007A9F  004B               	dw	75
  1035   007AA1  00FA               	dw	250
  1036   007AA3  003E               	dw	62
  1037   007AA5  004B               	dw	75
  1038   007AA7  00FA               	dw	250
  1039   007AA9  00BD               	dw	189
  1040   007AAB  004B               	dw	75
  1041   007AAD  00FA               	dw	250
  1042   007AAF  007E               	dw	126
  1043   007AB1  004B               	dw	75
  1044   007AB3  00FA               	dw	250
  1045   007AB5  005E               	dw	94
  1046   007AB7  004B               	dw	75
  1047   007AB9  00FA               	dw	250
  1048   007ABB  004A               	dw	74
  1049   007ABD  004B               	dw	75
  1050   007ABF  00FA               	dw	250
  1051   007AC1  003E               	dw	62
  1052   007AC3  004B               	dw	75
  1053   007AC5  00FA               	dw	250
  1054   007AC7  003B               	dw	59
  1055   007AC9  004B               	dw	75
  1056   007ACB  00FA               	dw	250
  1057   007ACD  00BD               	dw	189
  1058   007ACF  004B               	dw	75
  1059   007AD1  00FA               	dw	250
  1060   007AD3  008D               	dw	141
  1061   007AD5  004B               	dw	75
  1062   007AD7  00FA               	dw	250
  1063   007AD9  005E               	dw	94
  1064   007ADB  004B               	dw	75
  1065   007ADD  00FA               	dw	250
  1066   007ADF  002E               	dw	46
  1067   007AE1  004B               	dw	75
  1068   007AE3  00FA               	dw	250
  1069   007AE5  0031               	dw	49
  1070   007AE7  004B               	dw	75
  1071   007AE9  00FA               	dw	250
  1072   007AEB  002E               	dw	46
  1073   007AED  004B               	dw	75
  1074   007AEF  00FA               	dw	250
  1075   007AF1  0031               	dw	49
  1076   007AF3  004B               	dw	75
  1077   007AF5  00FA               	dw	250
  1078   007AF7  002E               	dw	46
  1079   007AF9  004B               	dw	75
  1080   007AFB  00FA               	dw	250
  1081   007AFD  003E               	dw	62
  1082   007AFF  004B               	dw	75
  1083   007B01  00FA               	dw	250
  1084   007B03  0034               	dw	52
  1085   007B05  004B               	dw	75
  1086   007B07  00FA               	dw	250
  1087   007B09  003B               	dw	59
  1088   007B0B  004B               	dw	75
  1089   007B0D  00FA               	dw	250
  1090   007B0F  0046               	dw	70
  1091   007B11  004B               	dw	75
  1092   007B13  00FA               	dw	250
  1093   007B15  00BD               	dw	189
  1094   007B17  004B               	dw	75
  1095   007B19  00FA               	dw	250
  1096   007B1B  008D               	dw	141
  1097   007B1D  004B               	dw	75
  1098   007B1F  00FA               	dw	250
  1099   007B21  0076               	dw	118
  1100   007B23  004B               	dw	75
  1101   007B25  00FA               	dw	250
  1102   007B27  005E               	dw	94
  1103   007B29  004B               	dw	75
  1104   007B2B  00FA               	dw	250
  1105   007B2D  0046               	dw	70
  1106   007B2F  004B               	dw	75
  1107   007B31  00FA               	dw	250
  1108   007B33  003E               	dw	62
  1109   007B35  004B               	dw	75
  1110   007B37  00FA               	dw	250
  1111   007B39  00BD               	dw	189
  1112   007B3B  004B               	dw	75
  1113   007B3D  00FA               	dw	250
  1114   007B3F  007E               	dw	126
  1115   007B41  004B               	dw	75
  1116   007B43  00FA               	dw	250
  1117   007B45  005E               	dw	94
  1118   007B47  004B               	dw	75
  1119   007B49  00FA               	dw	250
  1120   007B4B  003B               	dw	59
  1121   007B4D  004B               	dw	75
  1122   007B4F  00FA               	dw	250
  1123   007B51  003E               	dw	62
  1124   007B53  004B               	dw	75
  1125   007B55  00FA               	dw	250
  1126   007B57  0046               	dw	70
  1127   007B59  004B               	dw	75
  1128   007B5B  00FA               	dw	250
  1129   007B5D  00BD               	dw	189
  1130   007B5F  004B               	dw	75
  1131   007B61  00FA               	dw	250
  1132   007B63  008D               	dw	141
  1133   007B65  004B               	dw	75
  1134   007B67  00FA               	dw	250
  1135   007B69                     __end_of_fur_elise:
  1136                           	callstack 0
  1137   007B69                     _rick_roll_test:
  1138                           	callstack 0
  1139   007B69  005F               	dw	95
  1140   007B6B  004B               	dw	75
  1141   007B6D  00FA               	dw	250
  1142   007B6F  005F               	dw	95
  1143   007B71  004B               	dw	75
  1144   007B73  00FA               	dw	250
  1145   007B75  005F               	dw	95
  1146   007B77  004B               	dw	75
  1147   007B79  00FA               	dw	250
  1148   007B7B  005F               	dw	95
  1149   007B7D  004B               	dw	75
  1150   007B7F  00FA               	dw	250
  1151   007B81  005F               	dw	95
  1152   007B83  004B               	dw	75
  1153   007B85  00FA               	dw	250
  1154   007B87  005F               	dw	95
  1155   007B89  004B               	dw	75
  1156   007B8B  00FA               	dw	250
  1157   007B8D  005F               	dw	95
  1158   007B8F  004B               	dw	75
  1159   007B91  00FA               	dw	250
  1160   007B93  008D               	dw	141
  1161   007B95  004B               	dw	75
  1162   007B97  00FA               	dw	250
  1163   007B99  007E               	dw	126
  1164   007B9B  004B               	dw	75
  1165   007B9D  00FA               	dw	250
  1166   007B9F  0069               	dw	105
  1167   007BA1  004B               	dw	75
  1168   007BA3  00FA               	dw	250
  1169   007BA5  007E               	dw	126
  1170   007BA7  004B               	dw	75
  1171   007BA9  00FA               	dw	250
  1172   007BAB  005F               	dw	95
  1173   007BAD  004B               	dw	75
  1174   007BAF  00FA               	dw	250
  1175   007BB1  005F               	dw	95
  1176   007BB3  004B               	dw	75
  1177   007BB5  00FA               	dw	250
  1178   007BB7  0069               	dw	105
  1179   007BB9  004B               	dw	75
  1180   007BBB  00FA               	dw	250
  1181   007BBD  008D               	dw	141
  1182   007BBF  004B               	dw	75
  1183   007BC1  00FA               	dw	250
  1184   007BC3  007E               	dw	126
  1185   007BC5  004B               	dw	75
  1186   007BC7  00FA               	dw	250
  1187   007BC9  0069               	dw	105
  1188   007BCB  004B               	dw	75
  1189   007BCD  00FA               	dw	250
  1190   007BCF  007E               	dw	126
  1191   007BD1  004B               	dw	75
  1192   007BD3  00FA               	dw	250
  1193   007BD5  0069               	dw	105
  1194   007BD7  004B               	dw	75
  1195   007BD9  00FA               	dw	250
  1196   007BDB  005F               	dw	95
  1197   007BDD  004B               	dw	75
  1198   007BDF  00FA               	dw	250
  1199   007BE1  006F               	dw	111
  1200   007BE3  004B               	dw	75
  1201   007BE5  00FA               	dw	250
  1202   007BE7  007E               	dw	126
  1203   007BE9  004B               	dw	75
  1204   007BEB  00FA               	dw	250
  1205   007BED  008D               	dw	141
  1206   007BEF  004B               	dw	75
  1207   007BF1  00FA               	dw	250
  1208   007BF3  005F               	dw	95
  1209   007BF5  004B               	dw	75
  1210   007BF7  00FA               	dw	250
  1211   007BF9  0069               	dw	105
  1212   007BFB  004B               	dw	75
  1213   007BFD  00FA               	dw	250
  1214   007BFF  008D               	dw	141
  1215   007C01  004B               	dw	75
  1216   007C03  00FA               	dw	250
  1217   007C05  007E               	dw	126
  1218   007C07  004B               	dw	75
  1219   007C09  00FA               	dw	250
  1220   007C0B  0069               	dw	105
  1221   007C0D  004B               	dw	75
  1222   007C0F  00FA               	dw	250
  1223   007C11  007E               	dw	126
  1224   007C13  004B               	dw	75
  1225   007C15  00FA               	dw	250
  1226   007C17  0053               	dw	83
  1227   007C19  004B               	dw	75
  1228   007C1B  00FA               	dw	250
  1229   007C1D  0053               	dw	83
  1230   007C1F  004B               	dw	75
  1231   007C21  00FA               	dw	250
  1232   007C23  005F               	dw	95
  1233   007C25  004B               	dw	75
  1234   007C27  00FA               	dw	250
  1235   007C29  008D               	dw	141
  1236   007C2B  004B               	dw	75
  1237   007C2D  00FA               	dw	250
  1238   007C2F  007E               	dw	126
  1239   007C31  004B               	dw	75
  1240   007C33  00FA               	dw	250
  1241   007C35  0069               	dw	105
  1242   007C37  004B               	dw	75
  1243   007C39  00FA               	dw	250
  1244   007C3B  007E               	dw	126
  1245   007C3D  004B               	dw	75
  1246   007C3F  00FA               	dw	250
  1247   007C41  0045               	dw	69
  1248   007C43  004B               	dw	75
  1249   007C45  00FA               	dw	250
  1250   007C47  006F               	dw	111
  1251   007C49  004B               	dw	75
  1252   007C4B  00FA               	dw	250
  1253   007C4D  0069               	dw	105
  1254   007C4F  004B               	dw	75
  1255   007C51  00FA               	dw	250
  1256   007C53  008D               	dw	141
  1257   007C55  004B               	dw	75
  1258   007C57  00FA               	dw	250
  1259   007C59  007E               	dw	126
  1260   007C5B  004B               	dw	75
  1261   007C5D  00FA               	dw	250
  1262   007C5F  0069               	dw	105
  1263   007C61  004B               	dw	75
  1264   007C63  00FA               	dw	250
  1265   007C65  007E               	dw	126
  1266   007C67  004B               	dw	75
  1267   007C69  00FA               	dw	250
  1268   007C6B  0069               	dw	105
  1269   007C6D  004B               	dw	75
  1270   007C6F  00FA               	dw	250
  1271   007C71  005F               	dw	95
  1272   007C73  004B               	dw	75
  1273   007C75  00FA               	dw	250
  1274   007C77  006F               	dw	111
  1275   007C79  004B               	dw	75
  1276   007C7B  00FA               	dw	250
  1277   007C7D  007E               	dw	126
  1278   007C7F  004B               	dw	75
  1279   007C81  00FA               	dw	250
  1280   007C83  008D               	dw	141
  1281   007C85  004B               	dw	75
  1282   007C87  00FA               	dw	250
  1283   007C89  005F               	dw	95
  1284   007C8B  004B               	dw	75
  1285   007C8D  00FA               	dw	250
  1286   007C8F  0069               	dw	105
  1287   007C91  004B               	dw	75
  1288   007C93  00FA               	dw	250
  1289   007C95                     __end_of_rick_roll_test:
  1290                           	callstack 0
  1291   007C95                     _deja_vu:
  1292                           	callstack 0
  1293   007C95  0076               	dw	118
  1294   007C97  0028               	dw	40
  1295   007C99  0096               	dw	150
  1296   007C9B  0069               	dw	105
  1297   007C9D  0028               	dw	40
  1298   007C9F  00C8               	dw	200
  1299   007CA1  0063               	dw	99
  1300   007CA3  0078               	dw	120
  1301   007CA5  00A6               	dw	166
  1302   007CA7  0063               	dw	99
  1303   007CA9  0017               	dw	23
  1304   007CAB  00A6               	dw	166
  1305   007CAD  0063               	dw	99
  1306   007CAF  0017               	dw	23
  1307   007CB1  00A6               	dw	166
  1308   007CB3  0069               	dw	105
  1309   007CB5  0017               	dw	23
  1310   007CB7  00A6               	dw	166
  1311   007CB9  0085               	dw	133
  1312   007CBB  0017               	dw	23
  1313   007CBD  00A6               	dw	166
  1314   007CBF  009E               	dw	158
  1315   007CC1  0017               	dw	23
  1316   007CC3  00A6               	dw	166
  1317   007CC5  0085               	dw	133
  1318   007CC7  0064               	dw	100
  1319   007CC9  00C8               	dw	200
  1320   007CCB  0076               	dw	118
  1321   007CCD  0017               	dw	23
  1322   007CCF  00A6               	dw	166
  1323   007CD1  0076               	dw	118
  1324   007CD3  0099               	dw	153
  1325   007CD5  00A6               	dw	166
  1326   007CD7  0076               	dw	118
  1327   007CD9  0017               	dw	23
  1328   007CDB  00A6               	dw	166
  1329   007CDD  0058               	dw	88
  1330   007CDF  0017               	dw	23
  1331   007CE1  00A6               	dw	166
  1332   007CE3  0063               	dw	99
  1333   007CE5  0017               	dw	23
  1334   007CE7  00A6               	dw	166
  1335   007CE9  0069               	dw	105
  1336   007CEB  0017               	dw	23
  1337   007CED  00A6               	dw	166
  1338   007CEF  0063               	dw	99
  1339   007CF1  0078               	dw	120
  1340   007CF3  00A6               	dw	166
  1341   007CF5  0063               	dw	99
  1342   007CF7  0017               	dw	23
  1343   007CF9  00A6               	dw	166
  1344   007CFB  0063               	dw	99
  1345   007CFD  0017               	dw	23
  1346   007CFF  00A6               	dw	166
  1347   007D01  0058               	dw	88
  1348   007D03  0017               	dw	23
  1349   007D05  00A6               	dw	166
  1350   007D07  0063               	dw	99
  1351   007D09  0017               	dw	23
  1352   007D0B  00A6               	dw	166
  1353   007D0D  0058               	dw	88
  1354   007D0F  0017               	dw	23
  1355   007D11  00A6               	dw	166
  1356   007D13  0058               	dw	88
  1357   007D15  0064               	dw	100
  1358   007D17  00A6               	dw	166
  1359   007D19  004F               	dw	79
  1360   007D1B  0017               	dw	23
  1361   007D1D  00A6               	dw	166
  1362   007D1F  004F               	dw	79
  1363   007D21  0017               	dw	23
  1364   007D23  00A6               	dw	166
  1365   007D25  0058               	dw	88
  1366   007D27  0085               	dw	133
  1367   007D29  0096               	dw	150
  1368   007D2B                     __end_of_deja_vu:
  1369                           	callstack 0
  1370   007CA7                     _TRISC7         set	31911
  1371   007CA6                     _TRISC6         set	31910
  1372   007CF5                     _RCIF           set	31989
  1373   007D59                     _OERR           set	32089
  1374   007D61                     _TRMT           set	32097
  1375   007CF4                     _TXIF           set	31988
  1376   007CEC                     _TXIE           set	31980
  1377   007CED                     _RCIE           set	31981
  1378   007D5C                     _CREN           set	32092
  1379   007D65                     _TXEN           set	32101
  1380   007D66                     _TX9            set	32102
  1381   007D5E                     _RX9            set	32094
  1382   007D5F                     _SPEN           set	32095
  1383   007D64                     _SYNC           set	32100
  1384   007D62                     _BRGH           set	32098
  1385   007F96                     _PEIE           set	32662
  1386   007F97                     _GIE            set	32663
  1387   000F8C                     _LATD           set	3980
  1388   000F8B                     _LATCbits       set	3979
  1389   000F94                     _TRISCbits      set	3988
  1390   000F8A                     _LATBbits       set	3978
  1391   000F8C                     _LATDbits       set	3980
  1392   000F89                     _LATAbits       set	3977
  1393   000F93                     _TRISBbits      set	3987
  1394   000F95                     _TRISDbits      set	3989
  1395   000F92                     _TRISAbits      set	3986
  1396   000FBE                     _CCPR1L         set	4030
  1397   000FCB                     _PR2            set	4043
  1398   000FCA                     _T2CONbits      set	4042
  1399   000FBD                     _CCP1CONbits    set	4029
  1400   000FD3                     _OSCCONbits     set	4051
  1401   000FAE                     _RCREG          set	4014
  1402   000FAC                     _TXSTAbits      set	4012
  1403   000FAD                     _TXREG          set	4013
  1404   000FAF                     _SPBRG          set	4015
  1405   000FD6                     _TMR0           set	4054
  1406   000FD5                     _T0CONbits      set	4053
  1407   000FD6                     _TMR0L          set	4054
  1408   000FD7                     _TMR0H          set	4055
  1409   000FD5                     _T0CON          set	4053
  1410   000FF2                     _INTCONbits     set	4082
  1411   007D2B                     STR_1:
  1412   007D2B  42                 	db	66	;'B'
  1413   007D2C  6C                 	db	108	;'l'
  1414   007D2D  75                 	db	117	;'u'
  1415   007D2E  65                 	db	101	;'e'
  1416   007D2F  74                 	db	116	;'t'
  1417   007D30  6F                 	db	111	;'o'
  1418   007D31  6F                 	db	111	;'o'
  1419   007D32  74                 	db	116	;'t'
  1420   007D33  68                 	db	104	;'h'
  1421   007D34  20                 	db	32
  1422   007D35  49                 	db	73	;'I'
  1423   007D36  6E                 	db	110	;'n'
  1424   007D37  69                 	db	105	;'i'
  1425   007D38  74                 	db	116	;'t'
  1426   007D39  69                 	db	105	;'i'
  1427   007D3A  61                 	db	97	;'a'
  1428   007D3B  6C                 	db	108	;'l'
  1429   007D3C  69                 	db	105	;'i'
  1430   007D3D  7A                 	db	122	;'z'
  1431   007D3E  65                 	db	101	;'e'
  1432   007D3F  64                 	db	100	;'d'
  1433   007D40  20                 	db	32
  1434   007D41  61                 	db	97	;'a'
  1435   007D42  6E                 	db	110	;'n'
  1436   007D43  64                 	db	100	;'d'
  1437   007D44  20                 	db	32
  1438   007D45  52                 	db	82	;'R'
  1439   007D46  65                 	db	101	;'e'
  1440   007D47  61                 	db	97	;'a'
  1441   007D48  64                 	db	100	;'d'
  1442   007D49  79                 	db	121	;'y'
  1443   007D4A  00                 	db	0
  1444   007D4B                     STR_9:
  1445   007D4B  4C                 	db	76	;'L'
  1446   007D4C  61                 	db	97	;'a'
  1447   007D4D  64                 	db	100	;'d'
  1448   007D4E  64                 	db	100	;'d'
  1449   007D4F  65                 	db	101	;'e'
  1450   007D50  72                 	db	114	;'r'
  1451   007D51  5F                 	db	95	;'_'
  1452   007D52  42                 	db	66	;'B'
  1453   007D53  61                 	db	97	;'a'
  1454   007D54  63                 	db	99	;'c'
  1455   007D55  6B                 	db	107	;'k'
  1456   007D56  77                 	db	119	;'w'
  1457   007D57  61                 	db	97	;'a'
  1458   007D58  72                 	db	114	;'r'
  1459   007D59  64                 	db	100	;'d'
  1460   007D5A  00                 	db	0
  1461   007D5B                     STR_5:
  1462   007D5B  4D                 	db	77	;'M'
  1463   007D5C  6F                 	db	111	;'o'
  1464   007D5D  74                 	db	116	;'t'
  1465   007D5E  6F                 	db	111	;'o'
  1466   007D5F  72                 	db	114	;'r'
  1467   007D60  5F                 	db	95	;'_'
  1468   007D61  54                 	db	84	;'T'
  1469   007D62  75                 	db	117	;'u'
  1470   007D63  72                 	db	114	;'r'
  1471   007D64  6E                 	db	110	;'n'
  1472   007D65  52                 	db	82	;'R'
  1473   007D66  69                 	db	105	;'i'
  1474   007D67  67                 	db	103	;'g'
  1475   007D68  68                 	db	104	;'h'
  1476   007D69  74                 	db	116	;'t'
  1477   007D6A  00                 	db	0
  1478   007D6B                     STR_4:
  1479   007D6B  4D                 	db	77	;'M'
  1480   007D6C  6F                 	db	111	;'o'
  1481   007D6D  74                 	db	116	;'t'
  1482   007D6E  6F                 	db	111	;'o'
  1483   007D6F  72                 	db	114	;'r'
  1484   007D70  5F                 	db	95	;'_'
  1485   007D71  42                 	db	66	;'B'
  1486   007D72  61                 	db	97	;'a'
  1487   007D73  63                 	db	99	;'c'
  1488   007D74  6B                 	db	107	;'k'
  1489   007D75  77                 	db	119	;'w'
  1490   007D76  61                 	db	97	;'a'
  1491   007D77  72                 	db	114	;'r'
  1492   007D78  64                 	db	100	;'d'
  1493   007D79  00                 	db	0
  1494   007D7A                     STR_8:
  1495   007D7A  4C                 	db	76	;'L'
  1496   007D7B  61                 	db	97	;'a'
  1497   007D7C  64                 	db	100	;'d'
  1498   007D7D  64                 	db	100	;'d'
  1499   007D7E  65                 	db	101	;'e'
  1500   007D7F  72                 	db	114	;'r'
  1501   007D80  5F                 	db	95	;'_'
  1502   007D81  46                 	db	70	;'F'
  1503   007D82  6F                 	db	111	;'o'
  1504   007D83  72                 	db	114	;'r'
  1505   007D84  77                 	db	119	;'w'
  1506   007D85  61                 	db	97	;'a'
  1507   007D86  72                 	db	114	;'r'
  1508   007D87  64                 	db	100	;'d'
  1509   007D88  00                 	db	0
  1510   007D89                     STR_3:
  1511   007D89  4D                 	db	77	;'M'
  1512   007D8A  6F                 	db	111	;'o'
  1513   007D8B  74                 	db	116	;'t'
  1514   007D8C  6F                 	db	111	;'o'
  1515   007D8D  72                 	db	114	;'r'
  1516   007D8E  5F                 	db	95	;'_'
  1517   007D8F  54                 	db	84	;'T'
  1518   007D90  75                 	db	117	;'u'
  1519   007D91  72                 	db	114	;'r'
  1520   007D92  6E                 	db	110	;'n'
  1521   007D93  4C                 	db	76	;'L'
  1522   007D94  65                 	db	101	;'e'
  1523   007D95  66                 	db	102	;'f'
  1524   007D96  74                 	db	116	;'t'
  1525   007D97  00                 	db	0
  1526   007D98                     STR_2:
  1527   007D98  4D                 	db	77	;'M'
  1528   007D99  6F                 	db	111	;'o'
  1529   007D9A  74                 	db	116	;'t'
  1530   007D9B  6F                 	db	111	;'o'
  1531   007D9C  72                 	db	114	;'r'
  1532   007D9D  5F                 	db	95	;'_'
  1533   007D9E  46                 	db	70	;'F'
  1534   007D9F  6F                 	db	111	;'o'
  1535   007DA0  72                 	db	114	;'r'
  1536   007DA1  77                 	db	119	;'w'
  1537   007DA2  61                 	db	97	;'a'
  1538   007DA3  72                 	db	114	;'r'
  1539   007DA4  64                 	db	100	;'d'
  1540   007DA5  00                 	db	0
  1541   007DA6                     STR_7:
  1542   007DA6  63                 	db	99	;'c'
  1543   007DA7  68                 	db	104	;'h'
  1544   007DA8  61                 	db	97	;'a'
  1545   007DA9  6E                 	db	110	;'n'
  1546   007DAA  67                 	db	103	;'g'
  1547   007DAB  65                 	db	101	;'e'
  1548   007DAC  5F                 	db	95	;'_'
  1549   007DAD  6D                 	db	109	;'m'
  1550   007DAE  75                 	db	117	;'u'
  1551   007DAF  73                 	db	115	;'s'
  1552   007DB0  69                 	db	105	;'i'
  1553   007DB1  63                 	db	99	;'c'
  1554   007DB2  00                 	db	0
  1555   007DB3                     STR_6:
  1556   007DB3  4D                 	db	77	;'M'
  1557   007DB4  6F                 	db	111	;'o'
  1558   007DB5  74                 	db	116	;'t'
  1559   007DB6  6F                 	db	111	;'o'
  1560   007DB7  72                 	db	114	;'r'
  1561   007DB8  5F                 	db	95	;'_'
  1562   007DB9  53                 	db	83	;'S'
  1563   007DBA  74                 	db	116	;'t'
  1564   007DBB  6F                 	db	111	;'o'
  1565   007DBC  70                 	db	112	;'p'
  1566   007DBD  00                 	db	0
  1567   007DBE  00                 	db	0	; dummy byte at the end
  1568   000002                     __activetblptr  equ	2
  1569                           
  1570                           ; #config settings
  1571                           
  1572                           	psect	cinit
  1573   000A42                     __pcinit:
  1574                           	callstack 0
  1575   000A42                     start_initialization:
  1576                           	callstack 0
  1577   000A42                     __initialization:
  1578                           	callstack 0
  1579                           
  1580                           ; Initialize objects allocated to BANK0 (2 bytes)
  1581                           ; load TBLPTR registers with __pidataBANK0
  1582   000A42  0E64               	movlw	low __pidataBANK0
  1583   000A44  6EF6               	movwf	tblptrl,c
  1584   000A46  0E0C               	movlw	high __pidataBANK0
  1585   000A48  6EF7               	movwf	tblptrh,c
  1586   000A4A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1587   000A4C  6EF8               	movwf	tblptru,c
  1588   000A4E  0009               	tblrd		*+	;fetch initializer
  1589   000A50  CFF5 F096          	movff	tablat,__pdataBANK0
  1590   000A54  0009               	tblrd		*+	;fetch initializer
  1591   000A56  CFF5 F097          	movff	tablat,__pdataBANK0+1
  1592                           
  1593                           ; Initialize objects allocated to COMRAM (6 bytes)
  1594                           ; load TBLPTR registers with __pidataCOMRAM
  1595   000A5A  0E5E               	movlw	low __pidataCOMRAM
  1596   000A5C  6EF6               	movwf	tblptrl,c
  1597   000A5E  0E0C               	movlw	high __pidataCOMRAM
  1598   000A60  6EF7               	movwf	tblptrh,c
  1599   000A62  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1600   000A64  6EF8               	movwf	tblptru,c
  1601   000A66  EE00  F04B         	lfsr	0,__pdataCOMRAM
  1602   000A6A  EE10 F006          	lfsr	1,6
  1603   000A6E                     copy_data0:
  1604   000A6E  0009               	tblrd		*+
  1605   000A70  CFF5 FFEE          	movff	tablat,postinc0
  1606   000A74  50E5               	movf	postdec1,w,c
  1607   000A76  50E1               	movf	fsr1l,w,c
  1608   000A78  E1FA               	bnz	copy_data0
  1609                           
  1610                           ; Clear objects allocated to COMRAM (10 bytes)
  1611   000A7A  EE00  F041         	lfsr	0,__pbssCOMRAM
  1612   000A7E  0E0A               	movlw	10
  1613   000A80                     clear_0:
  1614   000A80  6AEE               	clrf	postinc0,c
  1615   000A82  06E8               	decf	wreg,f,c
  1616   000A84  E1FD               	bnz	clear_0
  1617   000A86                     end_of_initialization:
  1618                           	callstack 0
  1619   000A86                     __end_of__initialization:
  1620                           	callstack 0
  1621   000A86  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1622   000A88  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1623   000A8A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1624   000A8C  6EF8               	movwf	tblptru,c
  1625   000A8E  0100               	movlb	0
  1626   000A90  EF8C  F001         	goto	_main	;jump to C main() function
  1627                           
  1628                           	psect	bssCOMRAM
  1629   000041                     __pbssCOMRAM:
  1630                           	callstack 0
  1631   000041                     _is_pause:
  1632                           	callstack 0
  1633   000041                     	ds	2
  1634   000043                     _playing:
  1635                           	callstack 0
  1636   000043                     	ds	2
  1637   000045                     _current_note:
  1638                           	callstack 0
  1639   000045                     	ds	2
  1640   000047                     _current_melody_length:
  1641                           	callstack 0
  1642   000047                     	ds	2
  1643   000049                     _current_melody:
  1644                           	callstack 0
  1645   000049                     	ds	2
  1646                           
  1647                           	psect	dataCOMRAM
  1648   00004B                     __pdataCOMRAM:
  1649                           	callstack 0
  1650   00004B                     _melodies:
  1651                           	callstack 0
  1652   00004B                     	ds	6
  1653                           
  1654                           	psect	dataBANK0
  1655   000096                     __pdataBANK0:
  1656                           	callstack 0
  1657   000096                     _current_song:
  1658                           	callstack 0
  1659   000096                     	ds	2
  1660                           
  1661                           	psect	cstackBANK0
  1662   000080                     __pcstackBANK0:
  1663                           	callstack 0
  1664   000080                     ?___aldiv:
  1665                           	callstack 0
  1666   000080                     ___aldiv@dividend:
  1667                           	callstack 0
  1668                           
  1669                           ; 4 bytes @ 0x0
  1670   000080                     	ds	4
  1671   000084                     ___aldiv@divisor:
  1672                           	callstack 0
  1673                           
  1674                           ; 4 bytes @ 0x4
  1675   000084                     	ds	4
  1676   000088                     ??_music_start:
  1677                           
  1678                           ; 1 bytes @ 0x8
  1679   000088                     	ds	4
  1680   00008C                     _music_start$1527:
  1681                           	callstack 0
  1682                           
  1683                           ; 4 bytes @ 0xC
  1684   00008C                     	ds	4
  1685   000090                     music_start@duration:
  1686                           	callstack 0
  1687                           
  1688                           ; 2 bytes @ 0x10
  1689   000090                     	ds	2
  1690   000092                     ??_main:
  1691                           
  1692                           ; 1 bytes @ 0x12
  1693   000092                     	ds	1
  1694   000093                     main@ladder_state:
  1695                           	callstack 0
  1696                           
  1697                           ; 2 bytes @ 0x13
  1698   000093                     	ds	2
  1699   000095                     main@get_value:
  1700                           	callstack 0
  1701                           
  1702                           ; 1 bytes @ 0x15
  1703   000095                     	ds	1
  1704                           
  1705                           	psect	cstackCOMRAM
  1706   000001                     __pcstackCOMRAM:
  1707                           	callstack 0
  1708   000001                     ?i2___lmul:
  1709                           	callstack 0
  1710   000001                     i2___lmul@multiplier:
  1711                           	callstack 0
  1712                           
  1713                           ; 4 bytes @ 0x0
  1714   000001                     	ds	4
  1715   000005                     i2___lmul@multiplicand:
  1716                           	callstack 0
  1717                           
  1718                           ; 4 bytes @ 0x4
  1719   000005                     	ds	4
  1720   000009                     i2___lmul@product:
  1721                           	callstack 0
  1722   000009                     
  1723                           ; 1 bytes @ 0x8
  1724   000009                     	ds	4
  1725   00000D                     ?i2___aldiv:
  1726                           	callstack 0
  1727   00000D                     i2___aldiv@dividend:
  1728                           	callstack 0
  1729                           
  1730                           ; 4 bytes @ 0xC
  1731   00000D                     	ds	4
  1732   000011                     i2___aldiv@divisor:
  1733                           	callstack 0
  1734                           
  1735                           ; 4 bytes @ 0x10
  1736   000011                     	ds	4
  1737   000015                     i2___aldiv@counter:
  1738                           	callstack 0
  1739   000015                     
  1740                           ; 1 bytes @ 0x14
  1741   000015                     	ds	1
  1742   000016                     i2___aldiv@sign:
  1743                           	callstack 0
  1744                           
  1745                           ; 1 bytes @ 0x15
  1746   000016                     	ds	1
  1747   000017                     i2___aldiv@quotient:
  1748                           	callstack 0
  1749                           
  1750                           ; 4 bytes @ 0x16
  1751   000017                     	ds	4
  1752   00001B                     ??_ISR:
  1753                           
  1754                           ; 1 bytes @ 0x1A
  1755   00001B                     	ds	10
  1756   000025                     ISR@duration:
  1757                           	callstack 0
  1758                           
  1759                           ; 2 bytes @ 0x24
  1760   000025                     	ds	2
  1761   000027                     ISR@duration_829:
  1762                           	callstack 0
  1763                           
  1764                           ; 2 bytes @ 0x26
  1765   000027                     	ds	2
  1766   000029                     ISR@pause_time:
  1767                           	callstack 0
  1768                           
  1769                           ; 2 bytes @ 0x28
  1770   000029                     	ds	2
  1771   00002B                     _ISR$1544:
  1772                           	callstack 0
  1773                           
  1774                           ; 4 bytes @ 0x2A
  1775   00002B                     	ds	4
  1776   00002F                     ?___lmul:
  1777                           	callstack 0
  1778   00002F                     BT_load_char@byte:
  1779                           	callstack 0
  1780   00002F                     ___lmul@multiplier:
  1781                           	callstack 0
  1782   00002F                     ??_Update_StepperMotor:
  1783                           
  1784                           ; 1 bytes @ 0x2E
  1785   00002F                     	ds	1
  1786   000030                     Update_StepperMotor@stepValue:
  1787                           	callstack 0
  1788   000030                     BT_load_string@string:
  1789                           	callstack 0
  1790                           
  1791                           ; 2 bytes @ 0x2F
  1792   000030                     	ds	1
  1793   000031                     Ladder_Forward@turns:
  1794                           	callstack 0
  1795   000031                     Ladder_Backward@turns:
  1796                           	callstack 0
  1797                           
  1798                           ; 2 bytes @ 0x30
  1799   000031                     	ds	1
  1800   000032                     
  1801                           ; 1 bytes @ 0x31
  1802   000032                     	ds	1
  1803   000033                     ___lmul@multiplicand:
  1804                           	callstack 0
  1805   000033                     ??_Ladder_Forward:
  1806   000033                     ??_Ladder_Backward:
  1807                           
  1808                           ; 1 bytes @ 0x32
  1809   000033                     	ds	2
  1810   000035                     Ladder_Forward@steps:
  1811                           	callstack 0
  1812   000035                     Ladder_Backward@steps:
  1813                           	callstack 0
  1814                           
  1815                           ; 2 bytes @ 0x34
  1816   000035                     	ds	2
  1817   000037                     Ladder_Forward@i:
  1818                           	callstack 0
  1819   000037                     Ladder_Backward@i:
  1820                           	callstack 0
  1821   000037                     ___lmul@product:
  1822                           	callstack 0
  1823   000037                     
  1824                           ; 1 bytes @ 0x36
  1825   000037                     	ds	2
  1826   000039                     Ladder_Forward@stepIndex:
  1827                           	callstack 0
  1828   000039                     Ladder_Backward@stepIndex:
  1829                           	callstack 0
  1830                           
  1831                           ; 2 bytes @ 0x38
  1832   000039                     	ds	2
  1833   00003B                     ___aldiv@counter:
  1834                           	callstack 0
  1835   00003B                     
  1836                           ; 1 bytes @ 0x3A
  1837   00003B                     	ds	1
  1838   00003C                     ___aldiv@sign:
  1839                           	callstack 0
  1840                           
  1841                           ; 1 bytes @ 0x3B
  1842   00003C                     	ds	1
  1843   00003D                     ___aldiv@quotient:
  1844                           	callstack 0
  1845                           
  1846                           ; 4 bytes @ 0x3C
  1847   00003D                     	ds	4
  1848                           
  1849 ;;
  1850 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1851 ;;
  1852 ;; *************** function _main *****************
  1853 ;; Defined at:
  1854 ;;		line 96 in file "bluetooth_main.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  get_value       1   21[BANK0 ] unsigned char 
  1859 ;;  ladder_state    2   19[BANK0 ] int 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1869 ;;      Params:         0       0       0       0       0       0       0
  1870 ;;      Locals:         0       3       0       0       0       0       0
  1871 ;;      Temps:          0       1       0       0       0       0       0
  1872 ;;      Totals:         0       4       0       0       0       0       0
  1873 ;;Total ram usage:        4 bytes
  1874 ;; Hardware stack levels required when called: 4
  1875 ;; This function calls:
  1876 ;;		_BT_get_char
  1877 ;;		_BT_load_char
  1878 ;;		_BT_load_string
  1879 ;;		_Initialize_Bluetooth
  1880 ;;		_Initialize_Buzzer
  1881 ;;		_Initialize_Ladder
  1882 ;;		_Initialize_Motor
  1883 ;;		_Ladder_Backward
  1884 ;;		_Ladder_Forward
  1885 ;;		_Motor_Backward
  1886 ;;		_Motor_Forward
  1887 ;;		_Motor_Stop
  1888 ;;		_Motor_TurnLeft
  1889 ;;		_Motor_TurnRight
  1890 ;;		_broadcast_BT
  1891 ;;		_music_start
  1892 ;; This function is called by:
  1893 ;;		Startup code after reset
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text0
  1898   000318                     __ptext0:
  1899                           	callstack 0
  1900   000318                     _main:
  1901                           	callstack 27
  1902   000318                     
  1903                           ;bluetooth_main.c: 98: 
  1904   000318  0E70               	movlw	112
  1905   00031A  12D3               	iorwf	211,f,c	;volatile
  1906   00031C                     
  1907                           ;bluetooth_main.c: 101:         if (get_value == 'w')
  1908   00031C  ECD5  F005         	call	_Initialize_Bluetooth	;wreg free
  1909                           
  1910                           ;bluetooth_main.c: 102:         {
  1911   000320  ECC4  F005         	call	_Initialize_Motor	;wreg free
  1912   000324                     
  1913                           ;bluetooth_main.c: 103:            Motor_Forward();
  1914   000324  EC9C  F005         	call	_Initialize_Buzzer	;wreg free
  1915   000328                     
  1916                           ;bluetooth_main.c: 104:            BT_load_string("Motor_Forward");
  1917   000328  EC26  F006         	call	_Initialize_Ladder	;wreg free
  1918   00032C                     
  1919                           ;bluetooth_main.c: 105:            broadcast_BT();
  1920   00032C  0E00               	movlw	0
  1921   00032E  0100               	movlb	0	; () banked
  1922   000330  6F94               	movwf	(main@ladder_state+1)& (0+255),b
  1923   000332  0E00               	movlw	0
  1924   000334  6F93               	movwf	main@ladder_state& (0+255),b
  1925   000336                     
  1926                           ; BSR set to: 0
  1927                           ;bluetooth_main.c: 108: 
  1928   000336  0E2B               	movlw	low STR_1
  1929   000338  6E30               	movwf	BT_load_string@string^0,c
  1930   00033A  0E7D               	movlw	high STR_1
  1931   00033C  6E31               	movwf	(BT_load_string@string+1)^0,c
  1932   00033E  EC81  F005         	call	_BT_load_string	;wreg free
  1933   000342                     l1902:
  1934                           
  1935                           ;bluetooth_main.c: 109: 
  1936   000342  ECE5  F005         	call	_broadcast_BT	;wreg free
  1937   000346                     l1904:
  1938                           
  1939                           ;bluetooth_main.c: 113:            BT_load_string("Motor_TurnLeft");;bluetooth_main.c: 1
      +                          15:            _delay((unsigned long)((80)*(8000000/4000.0)));
  1940   000346  EC4A  F005         	call	_BT_get_char	;wreg free
  1941   00034A  0100               	movlb	0	; () banked
  1942   00034C  6F95               	movwf	main@get_value& (0+255),b
  1943   00034E                     
  1944                           ; BSR set to: 0
  1945                           ;bluetooth_main.c: 117:         else if (get_value == 's')
  1946   00034E  0E77               	movlw	119
  1947   000350  1995               	xorwf	main@get_value& (0+255),w,b
  1948   000352  A4D8               	btfss	status,2,c
  1949   000354  EFAE  F001         	goto	u971
  1950   000358  EFB0  F001         	goto	u970
  1951   00035C                     u971:
  1952   00035C  EFC5  F001         	goto	l1916
  1953   000360                     u970:
  1954   000360                     
  1955                           ; BSR set to: 0
  1956                           ;bluetooth_main.c: 118:         {;bluetooth_main.c: 119:             Motor_Backward();
  1957   000360  EC14  F006         	call	_Motor_Forward	;wreg free
  1958   000364                     
  1959                           ;bluetooth_main.c: 120:             BT_load_string("Motor_Backward");
  1960   000364  0E98               	movlw	low STR_2
  1961   000366  6E30               	movwf	BT_load_string@string^0,c
  1962   000368  0E7D               	movlw	high STR_2
  1963   00036A  6E31               	movwf	(BT_load_string@string+1)^0,c
  1964   00036C  EC81  F005         	call	_BT_load_string	;wreg free
  1965   000370                     l1912:
  1966                           
  1967                           ;bluetooth_main.c: 121:             broadcast_BT();
  1968   000370  ECE5  F005         	call	_broadcast_BT	;wreg free
  1969   000374                     
  1970                           ;bluetooth_main.c: 122:             _delay((unsigned long)((80)*(8000000/4000.0)));
  1971   000374  0ED0               	movlw	208
  1972   000376  0100               	movlb	0	; () banked
  1973   000378  6F92               	movwf	??_main& (0+255),b
  1974   00037A  0EC9               	movlw	201
  1975   00037C                     u1067:
  1976   00037C  2EE8               	decfsz	wreg,f,c
  1977   00037E  D7FE               	bra	u1067
  1978   000380  2F92               	decfsz	??_main& (0+255),f,b
  1979   000382  D7FC               	bra	u1067
  1980   000384  D000               	nop2	
  1981                           
  1982                           ;bluetooth_main.c: 123:         }
  1983   000386  EFA3  F001         	goto	l1904
  1984   00038A                     l1916:
  1985                           
  1986                           ; BSR set to: 0
  1987   00038A  0E61               	movlw	97
  1988   00038C  1995               	xorwf	main@get_value& (0+255),w,b
  1989   00038E  A4D8               	btfss	status,2,c
  1990   000390  EFCC  F001         	goto	u981
  1991   000394  EFCE  F001         	goto	u980
  1992   000398                     u981:
  1993   000398  EFD8  F001         	goto	l1926
  1994   00039C                     u980:
  1995   00039C                     
  1996                           ; BSR set to: 0
  1997                           ;bluetooth_main.c: 127:             BT_load_string("Motor_TurnRight");;bluetooth_main.c:
      +                           128:             broadcast_BT();
  1998   00039C  EC02  F006         	call	_Motor_TurnLeft	;wreg free
  1999   0003A0                     
  2000                           ;bluetooth_main.c: 129:             _delay((unsigned long)((80)*(8000000/4000.0)));
  2001   0003A0  0E89               	movlw	low STR_3
  2002   0003A2  6E30               	movwf	BT_load_string@string^0,c
  2003   0003A4  0E7D               	movlw	high STR_3
  2004   0003A6  6E31               	movwf	(BT_load_string@string+1)^0,c
  2005   0003A8  EC81  F005         	call	_BT_load_string	;wreg free
  2006   0003AC  EFB8  F001         	goto	l1912
  2007   0003B0                     l1926:
  2008                           
  2009                           ; BSR set to: 0
  2010   0003B0  0E73               	movlw	115
  2011   0003B2  1995               	xorwf	main@get_value& (0+255),w,b
  2012   0003B4  A4D8               	btfss	status,2,c
  2013   0003B6  EFDF  F001         	goto	u991
  2014   0003BA  EFE1  F001         	goto	u990
  2015   0003BE                     u991:
  2016   0003BE  EFEB  F001         	goto	l1936
  2017   0003C2                     u990:
  2018   0003C2                     
  2019                           ; BSR set to: 0
  2020                           ;bluetooth_main.c: 134:             BT_load_string("Motor_Stop");;bluetooth_main.c: 135:
      +                                       broadcast_BT();
  2021   0003C2  EC1D  F006         	call	_Motor_Backward	;wreg free
  2022   0003C6                     
  2023                           ;bluetooth_main.c: 136:         }
  2024   0003C6  0E6B               	movlw	low STR_4
  2025   0003C8  6E30               	movwf	BT_load_string@string^0,c
  2026   0003CA  0E7D               	movlw	high STR_4
  2027   0003CC  6E31               	movwf	(BT_load_string@string+1)^0,c
  2028   0003CE  EC81  F005         	call	_BT_load_string	;wreg free
  2029   0003D2  EFB8  F001         	goto	l1912
  2030   0003D6                     l1936:
  2031                           
  2032                           ; BSR set to: 0
  2033   0003D6  0E64               	movlw	100
  2034   0003D8  1995               	xorwf	main@get_value& (0+255),w,b
  2035   0003DA  A4D8               	btfss	status,2,c
  2036   0003DC  EFF2  F001         	goto	u1001
  2037   0003E0  EFF4  F001         	goto	u1000
  2038   0003E4                     u1001:
  2039   0003E4  EFFE  F001         	goto	l1946
  2040   0003E8                     u1000:
  2041   0003E8                     
  2042                           ; BSR set to: 0
  2043                           ;bluetooth_main.c: 141:             music_start();;bluetooth_main.c: 142:         }
  2044   0003E8  ECF9  F005         	call	_Motor_TurnRight	;wreg free
  2045   0003EC                     
  2046                           ;bluetooth_main.c: 143: 
  2047   0003EC  0E5B               	movlw	low STR_5
  2048   0003EE  6E30               	movwf	BT_load_string@string^0,c
  2049   0003F0  0E7D               	movlw	high STR_5
  2050   0003F2  6E31               	movwf	(BT_load_string@string+1)^0,c
  2051   0003F4  EC81  F005         	call	_BT_load_string	;wreg free
  2052   0003F8  EFB8  F001         	goto	l1912
  2053   0003FC                     l1946:
  2054                           
  2055                           ; BSR set to: 0
  2056   0003FC  0E71               	movlw	113
  2057   0003FE  1995               	xorwf	main@get_value& (0+255),w,b
  2058   000400  A4D8               	btfss	status,2,c
  2059   000402  EF05  F002         	goto	u1011
  2060   000406  EF07  F002         	goto	u1010
  2061   00040A                     u1011:
  2062   00040A  EF11  F002         	goto	l1954
  2063   00040E                     u1010:
  2064   00040E                     
  2065                           ; BSR set to: 0
  2066                           ;bluetooth_main.c: 148:                 BT_load_string("Ladder_Forward");;bluetooth_main
      +                          .c: 149:                 broadcast_BT();
  2067   00040E  EC0B  F006         	call	_Motor_Stop	;wreg free
  2068   000412                     
  2069                           ;bluetooth_main.c: 150:                 Ladder_Forward(10);
  2070   000412  0EB3               	movlw	low STR_6
  2071   000414  6E30               	movwf	BT_load_string@string^0,c
  2072   000416  0E7D               	movlw	high STR_6
  2073   000418  6E31               	movwf	(BT_load_string@string+1)^0,c
  2074   00041A  EC81  F005         	call	_BT_load_string	;wreg free
  2075   00041E  EFA1  F001         	goto	l1902
  2076   000422                     l1954:
  2077                           
  2078                           ; BSR set to: 0
  2079   000422  0E70               	movlw	112
  2080   000424  1995               	xorwf	main@get_value& (0+255),w,b
  2081   000426  A4D8               	btfss	status,2,c
  2082   000428  EF18  F002         	goto	u1021
  2083   00042C  EF1A  F002         	goto	u1020
  2084   000430                     u1021:
  2085   000430  EF26  F002         	goto	l1962
  2086   000434                     u1020:
  2087   000434                     
  2088                           ; BSR set to: 0
  2089                           ;bluetooth_main.c: 154:             {;bluetooth_main.c: 155:                 BT_load_str
      +                          ing("Ladder_Backward");
  2090   000434  0EA6               	movlw	low STR_7
  2091   000436  6E30               	movwf	BT_load_string@string^0,c
  2092   000438  0E7D               	movlw	high STR_7
  2093   00043A  6E31               	movwf	(BT_load_string@string+1)^0,c
  2094   00043C  EC81  F005         	call	_BT_load_string	;wreg free
  2095   000440                     
  2096                           ;bluetooth_main.c: 156:                 broadcast_BT();
  2097   000440  ECE5  F005         	call	_broadcast_BT	;wreg free
  2098   000444                     
  2099                           ;bluetooth_main.c: 157:                 Ladder_Backward(10);
  2100   000444  EC77  F002         	call	_music_start	;wreg free
  2101                           
  2102                           ;bluetooth_main.c: 158:                 ladder_state = 0;
  2103   000448  EFA3  F001         	goto	l1904
  2104   00044C                     l1962:
  2105                           
  2106                           ; BSR set to: 0
  2107   00044C  0E6C               	movlw	108
  2108   00044E  1995               	xorwf	main@get_value& (0+255),w,b
  2109   000450  A4D8               	btfss	status,2,c
  2110   000452  EF2D  F002         	goto	u1031
  2111   000456  EF2F  F002         	goto	u1030
  2112   00045A                     u1031:
  2113   00045A  EF62  F002         	goto	l1982
  2114   00045E                     u1030:
  2115   00045E                     
  2116                           ; BSR set to: 0
  2117                           ;bluetooth_main.c: 161: ;bluetooth_main.c: 162:         else if (get_value != 0)
  2118   00045E  5193               	movf	main@ladder_state& (0+255),w,b
  2119   000460  1194               	iorwf	(main@ladder_state+1)& (0+255),w,b
  2120   000462  A4D8               	btfss	status,2,c
  2121   000464  EF36  F002         	goto	u1041
  2122   000468  EF38  F002         	goto	u1040
  2123   00046C                     u1041:
  2124   00046C  EF4D  F002         	goto	l1974
  2125   000470                     u1040:
  2126   000470                     
  2127                           ; BSR set to: 0
  2128                           ;bluetooth_main.c: 163:         {;bluetooth_main.c: 164:             BT_load_char(get_va
      +                          lue);
  2129   000470  0E7A               	movlw	low STR_8
  2130   000472  6E30               	movwf	BT_load_string@string^0,c
  2131   000474  0E7D               	movlw	high STR_8
  2132   000476  6E31               	movwf	(BT_load_string@string+1)^0,c
  2133   000478  EC81  F005         	call	_BT_load_string	;wreg free
  2134   00047C                     
  2135                           ;bluetooth_main.c: 165:             broadcast_BT();
  2136   00047C  ECE5  F005         	call	_broadcast_BT	;wreg free
  2137   000480                     
  2138                           ;bluetooth_main.c: 166:         }
  2139   000480  0E00               	movlw	0
  2140   000482  6E32               	movwf	(Ladder_Forward@turns+1)^0,c
  2141   000484  0E0A               	movlw	10
  2142   000486  6E31               	movwf	Ladder_Forward@turns^0,c
  2143   000488  EC29  F004         	call	_Ladder_Forward	;wreg free
  2144   00048C                     
  2145                           ;bluetooth_main.c: 167:         else
  2146   00048C  0E00               	movlw	0
  2147   00048E  0100               	movlb	0	; () banked
  2148   000490  6F94               	movwf	(main@ladder_state+1)& (0+255),b
  2149   000492  0E01               	movlw	1
  2150   000494  6F93               	movwf	main@ladder_state& (0+255),b
  2151                           
  2152                           ;bluetooth_main.c: 168:         {
  2153   000496  EFA3  F001         	goto	l1904
  2154   00049A                     l1974:
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;bluetooth_main.c: 170:         };bluetooth_main.c: 171:     }
  2158   00049A  0E4B               	movlw	low STR_9
  2159   00049C  6E30               	movwf	BT_load_string@string^0,c
  2160   00049E  0E7D               	movlw	high STR_9
  2161   0004A0  6E31               	movwf	(BT_load_string@string+1)^0,c
  2162   0004A2  EC81  F005         	call	_BT_load_string	;wreg free
  2163   0004A6                     
  2164                           ;bluetooth_main.c: 172:     return;
  2165   0004A6  ECE5  F005         	call	_broadcast_BT	;wreg free
  2166   0004AA                     
  2167                           ;bluetooth_main.c: 173: }
  2168   0004AA  0E00               	movlw	0
  2169   0004AC  6E32               	movwf	(Ladder_Backward@turns+1)^0,c
  2170   0004AE  0E0A               	movlw	10
  2171   0004B0  6E31               	movwf	Ladder_Backward@turns^0,c
  2172   0004B2  EC70  F004         	call	_Ladder_Backward	;wreg free
  2173   0004B6  0E00               	movlw	0
  2174   0004B8  0100               	movlb	0	; () banked
  2175   0004BA  6F94               	movwf	(main@ladder_state+1)& (0+255),b
  2176   0004BC  0E00               	movlw	0
  2177   0004BE  6F93               	movwf	main@ladder_state& (0+255),b
  2178   0004C0  EFA3  F001         	goto	l1904
  2179   0004C4                     l1982:
  2180                           
  2181                           ; BSR set to: 0
  2182   0004C4  5195               	movf	main@get_value& (0+255),w,b
  2183   0004C6  B4D8               	btfsc	status,2,c
  2184   0004C8  EF68  F002         	goto	u1051
  2185   0004CC  EF6A  F002         	goto	u1050
  2186   0004D0                     u1051:
  2187   0004D0  EF71  F002         	goto	l1986
  2188   0004D4                     u1050:
  2189   0004D4                     
  2190                           ; BSR set to: 0
  2191   0004D4  5195               	movf	main@get_value& (0+255),w,b
  2192   0004D6  ECB2  F005         	call	_BT_load_char
  2193   0004DA  ECE5  F005         	call	_broadcast_BT	;wreg free
  2194   0004DE  EFA3  F001         	goto	l1904
  2195   0004E2                     l1986:
  2196                           
  2197                           ; BSR set to: 0
  2198   0004E2  EC0B  F006         	call	_Motor_Stop	;wreg free
  2199   0004E6  EFA3  F001         	goto	l1904
  2200   0004EA  EF07  F000         	goto	start
  2201   0004EE                     __end_of_main:
  2202                           	callstack 0
  2203                           
  2204 ;; *************** function _music_start *****************
  2205 ;; Defined at:
  2206 ;;		line 105 in file "buzzer.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;		None
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  duration        2   16[BANK0 ] int 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2220 ;;      Params:         0       0       0       0       0       0       0
  2221 ;;      Locals:         0       6       0       0       0       0       0
  2222 ;;      Temps:          0       4       0       0       0       0       0
  2223 ;;      Totals:         0      10       0       0       0       0       0
  2224 ;;Total ram usage:       10 bytes
  2225 ;; Hardware stack levels used: 1
  2226 ;; Hardware stack levels required when called: 3
  2227 ;; This function calls:
  2228 ;;		_Initialize_Songs
  2229 ;;		___aldiv
  2230 ;;		___lmul
  2231 ;; This function is called by:
  2232 ;;		_main
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text1
  2237   0004EE                     __ptext1:
  2238                           	callstack 0
  2239   0004EE                     _music_start:
  2240                           	callstack 27
  2241   0004EE  0E02               	movlw	2
  2242   0004F0  0100               	movlb	0	; () banked
  2243   0004F2  1996               	xorwf	_current_song& (0+255),w,b
  2244   0004F4  1197               	iorwf	(_current_song+1)& (0+255),w,b
  2245   0004F6  A4D8               	btfss	status,2,c
  2246   0004F8  EF80  F002         	goto	u921
  2247   0004FC  EF82  F002         	goto	u920
  2248   000500                     u921:
  2249   000500  EF8C  F002         	goto	l1836
  2250   000504                     u920:
  2251   000504                     
  2252                           ; BSR set to: 0
  2253                           ;buzzer.c: 108:     {;buzzer.c: 109:         playing = 0;
  2254   000504  0E00               	movlw	0
  2255   000506  6E44               	movwf	(_playing+1)^0,c
  2256   000508  0E00               	movlw	0
  2257   00050A  6E43               	movwf	_playing^0,c
  2258   00050C                     
  2259                           ; BSR set to: 0
  2260                           ;buzzer.c: 110:         current_song = -1;
  2261   00050C  6996               	setf	_current_song& (0+255),b
  2262   00050E  6997               	setf	(_current_song+1)& (0+255),b
  2263   000510                     
  2264                           ; BSR set to: 0
  2265                           ;buzzer.c: 111:         CCPR1L = 0;
  2266   000510  6ABE               	clrf	190,c	;volatile
  2267   000512                     
  2268                           ; BSR set to: 0
  2269                           ;buzzer.c: 112:         T0CONbits.TMR0ON = 0;
  2270   000512  9ED5               	bcf	213,7,c	;volatile
  2271   000514  EF1D  F003         	goto	l230
  2272   000518                     l1836:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;buzzer.c: 116:     current_song++;
  2276   000518  4B96               	infsnz	_current_song& (0+255),f,b
  2277   00051A  2B97               	incf	(_current_song+1)& (0+255),f,b
  2278   00051C                     
  2279                           ; BSR set to: 0
  2280                           ;buzzer.c: 117:     Initialize_Songs();
  2281   00051C  EC66  F005         	call	_Initialize_Songs	;wreg free
  2282   000520                     
  2283                           ;buzzer.c: 119:     playing = 1;
  2284   000520  0E00               	movlw	0
  2285   000522  6E44               	movwf	(_playing+1)^0,c
  2286   000524  0E01               	movlw	1
  2287   000526  6E43               	movwf	_playing^0,c
  2288   000528                     
  2289                           ;buzzer.c: 120:     current_note = 0;
  2290   000528  0E00               	movlw	0
  2291   00052A  6E46               	movwf	(_current_note+1)^0,c
  2292   00052C  0E00               	movlw	0
  2293   00052E  6E45               	movwf	_current_note^0,c
  2294   000530                     
  2295                           ;buzzer.c: 121:     is_pause = 0;
  2296   000530  0E00               	movlw	0
  2297   000532  6E42               	movwf	(_is_pause+1)^0,c
  2298   000534  0E00               	movlw	0
  2299   000536  6E41               	movwf	_is_pause^0,c
  2300   000538                     
  2301                           ;buzzer.c: 124:     PR2 = current_melody[current_note][0];
  2302   000538  0E06               	movlw	6
  2303   00053A  0245               	mulwf	_current_note^0,c
  2304   00053C  CFF3 F088          	movff	prodl,??_music_start
  2305   000540  CFF4 F089          	movff	prodh,??_music_start+1
  2306   000544  0246               	mulwf	(_current_note+1)^0,c
  2307   000546  50F3               	movf	prodl,w,c
  2308   000548  0100               	movlb	0	; () banked
  2309   00054A  2789               	addwf	(??_music_start+1)& (0+255),f,b
  2310   00054C  5188               	movf	??_music_start& (0+255),w,b
  2311   00054E  2449               	addwf	_current_melody^0,w,c
  2312   000550  6F8A               	movwf	(??_music_start+2)& (0+255),b
  2313   000552  5189               	movf	(??_music_start+1)& (0+255),w,b
  2314   000554  204A               	addwfc	(_current_melody+1)^0,w,c
  2315   000556  6F8B               	movwf	(??_music_start+3)& (0+255),b
  2316   000558  C08A  FFF6         	movff	??_music_start+2,tblptrl
  2317   00055C  C08B  FFF7         	movff	??_music_start+3,tblptrh
  2318   000560                     	if	0	;tblptru may be non-zero
  2319   000560                     	endif
  2320   000560                     	if	0	;tblptru may be non-zero
  2321   000560                     	endif
  2322   000560  0008               	tblrd		*
  2323   000562  CFF5 FFCB          	movff	tablat,4043	;volatile
  2324   000566                     
  2325                           ; BSR set to: 0
  2326                           ;buzzer.c: 125:     CCPR1L = PR2 >> 4;
  2327   000566  38CB               	swapf	203,w,c	;volatile
  2328   000568  0B0F               	andlw	15
  2329   00056A  6EBE               	movwf	190,c	;volatile
  2330   00056C                     
  2331                           ; BSR set to: 0
  2332                           ;buzzer.c: 128:     int duration = current_melody[current_note][1];
  2333   00056C  0E06               	movlw	6
  2334   00056E  0245               	mulwf	_current_note^0,c
  2335   000570  CFF3 F088          	movff	prodl,??_music_start
  2336   000574  CFF4 F089          	movff	prodh,??_music_start+1
  2337   000578  0246               	mulwf	(_current_note+1)^0,c
  2338   00057A  50F3               	movf	prodl,w,c
  2339   00057C  2789               	addwf	(??_music_start+1)& (0+255),f,b
  2340   00057E  5188               	movf	??_music_start& (0+255),w,b
  2341   000580  2449               	addwf	_current_melody^0,w,c
  2342   000582  6F8A               	movwf	(??_music_start+2)& (0+255),b
  2343   000584  5189               	movf	(??_music_start+1)& (0+255),w,b
  2344   000586  204A               	addwfc	(_current_melody+1)^0,w,c
  2345   000588  6F8B               	movwf	(??_music_start+3)& (0+255),b
  2346   00058A  0E02               	movlw	2
  2347   00058C  278A               	addwf	(??_music_start+2)& (0+255),f,b
  2348   00058E  0E00               	movlw	0
  2349   000590  238B               	addwfc	(??_music_start+3)& (0+255),f,b
  2350   000592  C08A  FFF6         	movff	??_music_start+2,tblptrl
  2351   000596  C08B  FFF7         	movff	??_music_start+3,tblptrh
  2352   00059A                     	if	0	;tblptru may be non-zero
  2353   00059A                     	endif
  2354   00059A                     	if	0	;tblptru may be non-zero
  2355   00059A                     	endif
  2356   00059A  0009               	tblrd		*+
  2357   00059C  CFF5 F090          	movff	tablat,music_start@duration
  2358   0005A0  000A               	tblrd		*-
  2359   0005A2  CFF5 F091          	movff	tablat,music_start@duration+1
  2360   0005A6                     
  2361                           ; BSR set to: 0
  2362                           ;buzzer.c: 129:     TMR0 = 65536 - (duration * (8000000 / 4) / 32 / 1000);
  2363   0005A6  0E20               	movlw	32
  2364   0005A8  6F84               	movwf	___aldiv@divisor& (0+255),b
  2365   0005AA  0E00               	movlw	0
  2366   0005AC  6F85               	movwf	(___aldiv@divisor+1)& (0+255),b
  2367   0005AE  0E00               	movlw	0
  2368   0005B0  6F86               	movwf	(___aldiv@divisor+2)& (0+255),b
  2369   0005B2  0E00               	movlw	0
  2370   0005B4  6F87               	movwf	(___aldiv@divisor+3)& (0+255),b
  2371   0005B6  C090  F02F         	movff	music_start@duration,___lmul@multiplier
  2372   0005BA  C091  F030         	movff	music_start@duration+1,___lmul@multiplier+1
  2373   0005BE  0E00               	movlw	0
  2374   0005C0  BE30               	btfsc	(___lmul@multiplier+1)^0,7,c
  2375   0005C2  0EFF               	movlw	-1
  2376   0005C4  6E31               	movwf	(___lmul@multiplier+2)^0,c
  2377   0005C6  6E32               	movwf	(___lmul@multiplier+3)^0,c
  2378   0005C8  0E80               	movlw	128
  2379   0005CA  6E33               	movwf	___lmul@multiplicand^0,c
  2380   0005CC  0E84               	movlw	132
  2381   0005CE  6E34               	movwf	(___lmul@multiplicand+1)^0,c
  2382   0005D0  0E1E               	movlw	30
  2383   0005D2  6E35               	movwf	(___lmul@multiplicand+2)^0,c
  2384   0005D4  0E00               	movlw	0
  2385   0005D6  6E36               	movwf	(___lmul@multiplicand+3)^0,c
  2386   0005D8  ECB7  F004         	call	___lmul	;wreg free
  2387   0005DC  C02F  F080         	movff	?___lmul,___aldiv@dividend
  2388   0005E0  C030  F081         	movff	?___lmul+1,___aldiv@dividend+1
  2389   0005E4  C031  F082         	movff	?___lmul+2,___aldiv@dividend+2
  2390   0005E8  C032  F083         	movff	?___lmul+3,___aldiv@dividend+3
  2391   0005EC  EC1E  F003         	call	___aldiv	;wreg free
  2392   0005F0  C080  F08C         	movff	?___aldiv,_music_start$1527
  2393   0005F4  C081  F08D         	movff	?___aldiv+1,_music_start$1527+1
  2394   0005F8  C082  F08E         	movff	?___aldiv+2,_music_start$1527+2
  2395   0005FC  C083  F08F         	movff	?___aldiv+3,_music_start$1527+3
  2396   000600                     
  2397                           ;buzzer.c: 129:     TMR0 = 65536 - (duration * (8000000 / 4) / 32 / 1000);
  2398   000600  C08C  F080         	movff	_music_start$1527,___aldiv@dividend
  2399   000604  C08D  F081         	movff	_music_start$1527+1,___aldiv@dividend+1
  2400   000608  C08E  F082         	movff	_music_start$1527+2,___aldiv@dividend+2
  2401   00060C  C08F  F083         	movff	_music_start$1527+3,___aldiv@dividend+3
  2402   000610  0EE8               	movlw	232
  2403   000612  0100               	movlb	0	; () banked
  2404   000614  6F84               	movwf	___aldiv@divisor& (0+255),b
  2405   000616  0E03               	movlw	3
  2406   000618  6F85               	movwf	(___aldiv@divisor+1)& (0+255),b
  2407   00061A  0E00               	movlw	0
  2408   00061C  6F86               	movwf	(___aldiv@divisor+2)& (0+255),b
  2409   00061E  0E00               	movlw	0
  2410   000620  6F87               	movwf	(___aldiv@divisor+3)& (0+255),b
  2411   000622  EC1E  F003         	call	___aldiv	;wreg free
  2412   000626  0100               	movlb	0	; () banked
  2413   000628  5180               	movf	?___aldiv& (0+255),w,b
  2414   00062A  0800               	sublw	0
  2415   00062C  6ED6               	movwf	214,c	;volatile
  2416   00062E  5181               	movf	(?___aldiv+1)& (0+255),w,b
  2417   000630  A0D8               	btfss	status,0,c
  2418   000632  2AE8               	incf	wreg,f,c
  2419   000634  0800               	sublw	0
  2420   000636  6ED7               	movwf	215,c	;volatile
  2421   000638                     
  2422                           ; BSR set to: 0
  2423                           ;buzzer.c: 130:     T0CONbits.TMR0ON = 1;
  2424   000638  8ED5               	bsf	213,7,c	;volatile
  2425   00063A                     l230:
  2426                           
  2427                           ; BSR set to: 0
  2428   00063A  0012               	return		;funcret
  2429   00063C                     __end_of_music_start:
  2430                           	callstack 0
  2431                           
  2432 ;; *************** function ___lmul *****************
  2433 ;; Defined at:
  2434 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  multiplier      4   46[COMRAM] unsigned long 
  2437 ;;  multiplicand    4   50[COMRAM] unsigned long 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  product         4   54[COMRAM] unsigned long 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  4   46[COMRAM] unsigned long 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2449 ;;      Params:         8       0       0       0       0       0       0
  2450 ;;      Locals:         4       0       0       0       0       0       0
  2451 ;;      Temps:          0       0       0       0       0       0       0
  2452 ;;      Totals:        12       0       0       0       0       0       0
  2453 ;;Total ram usage:       12 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 2
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_music_start
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text2
  2464   00096E                     __ptext2:
  2465                           	callstack 0
  2466   00096E                     ___lmul:
  2467                           	callstack 27
  2468   00096E  0E00               	movlw	0
  2469   000970  6E37               	movwf	___lmul@product^0,c
  2470   000972  0E00               	movlw	0
  2471   000974  6E38               	movwf	(___lmul@product+1)^0,c
  2472   000976  0E00               	movlw	0
  2473   000978  6E39               	movwf	(___lmul@product+2)^0,c
  2474   00097A  0E00               	movlw	0
  2475   00097C  6E3A               	movwf	(___lmul@product+3)^0,c
  2476   00097E                     l1686:
  2477   00097E  A02F               	btfss	___lmul@multiplier^0,0,c
  2478   000980  EFC4  F004         	goto	u791
  2479   000984  EFC6  F004         	goto	u790
  2480   000988                     u791:
  2481   000988  EFCE  F004         	goto	l1690
  2482   00098C                     u790:
  2483   00098C  5033               	movf	___lmul@multiplicand^0,w,c
  2484   00098E  2637               	addwf	___lmul@product^0,f,c
  2485   000990  5034               	movf	(___lmul@multiplicand+1)^0,w,c
  2486   000992  2238               	addwfc	(___lmul@product+1)^0,f,c
  2487   000994  5035               	movf	(___lmul@multiplicand+2)^0,w,c
  2488   000996  2239               	addwfc	(___lmul@product+2)^0,f,c
  2489   000998  5036               	movf	(___lmul@multiplicand+3)^0,w,c
  2490   00099A  223A               	addwfc	(___lmul@product+3)^0,f,c
  2491   00099C                     l1690:
  2492   00099C  90D8               	bcf	status,0,c
  2493   00099E  3633               	rlcf	___lmul@multiplicand^0,f,c
  2494   0009A0  3634               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2495   0009A2  3635               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2496   0009A4  3636               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2497   0009A6  90D8               	bcf	status,0,c
  2498   0009A8  3232               	rrcf	(___lmul@multiplier+3)^0,f,c
  2499   0009AA  3231               	rrcf	(___lmul@multiplier+2)^0,f,c
  2500   0009AC  3230               	rrcf	(___lmul@multiplier+1)^0,f,c
  2501   0009AE  322F               	rrcf	___lmul@multiplier^0,f,c
  2502   0009B0  502F               	movf	___lmul@multiplier^0,w,c
  2503   0009B2  1030               	iorwf	(___lmul@multiplier+1)^0,w,c
  2504   0009B4  1031               	iorwf	(___lmul@multiplier+2)^0,w,c
  2505   0009B6  1032               	iorwf	(___lmul@multiplier+3)^0,w,c
  2506   0009B8  A4D8               	btfss	status,2,c
  2507   0009BA  EFE1  F004         	goto	u801
  2508   0009BE  EFE3  F004         	goto	u800
  2509   0009C2                     u801:
  2510   0009C2  EFBF  F004         	goto	l1686
  2511   0009C6                     u800:
  2512   0009C6  C037  F02F         	movff	___lmul@product,?___lmul
  2513   0009CA  C038  F030         	movff	___lmul@product+1,?___lmul+1
  2514   0009CE  C039  F031         	movff	___lmul@product+2,?___lmul+2
  2515   0009D2  C03A  F032         	movff	___lmul@product+3,?___lmul+3
  2516   0009D6  0012               	return		;funcret
  2517   0009D8                     __end_of___lmul:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function ___aldiv *****************
  2521 ;; Defined at:
  2522 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  dividend        4    0[BANK0 ] long 
  2525 ;;  divisor         4    4[BANK0 ] long 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;  quotient        4   60[COMRAM] long 
  2528 ;;  sign            1   59[COMRAM] unsigned char 
  2529 ;;  counter         1   58[COMRAM] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  4    0[BANK0 ] long 
  2532 ;; Registers used:
  2533 ;;		wreg, status,2, status,0
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2539 ;;      Params:         0       8       0       0       0       0       0
  2540 ;;      Locals:         6       0       0       0       0       0       0
  2541 ;;      Temps:          0       0       0       0       0       0       0
  2542 ;;      Totals:         6       8       0       0       0       0       0
  2543 ;;Total ram usage:       14 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; Hardware stack levels required when called: 2
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_music_start
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text3
  2554   00063C                     __ptext3:
  2555                           	callstack 0
  2556   00063C                     ___aldiv:
  2557                           	callstack 27
  2558   00063C  6A3C               	clrf	___aldiv@sign^0,c
  2559   00063E  0100               	movlb	0	; () banked
  2560   000640  BF87               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  2561   000642  EF27  F003         	goto	u810
  2562   000646  EF25  F003         	goto	u811
  2563   00064A                     u811:
  2564   00064A  EF31  F003         	goto	l1702
  2565   00064E                     u810:
  2566   00064E                     
  2567                           ; BSR set to: 0
  2568   00064E  1F87               	comf	(___aldiv@divisor+3)& (0+255),f,b
  2569   000650  1F86               	comf	(___aldiv@divisor+2)& (0+255),f,b
  2570   000652  1F85               	comf	(___aldiv@divisor+1)& (0+255),f,b
  2571   000654  6D84               	negf	___aldiv@divisor& (0+255),b
  2572   000656  0E00               	movlw	0
  2573   000658  2385               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  2574   00065A  2386               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  2575   00065C  2387               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  2576   00065E                     
  2577                           ; BSR set to: 0
  2578   00065E  0E01               	movlw	1
  2579   000660  6E3C               	movwf	___aldiv@sign^0,c
  2580   000662                     l1702:
  2581                           
  2582                           ; BSR set to: 0
  2583   000662  BF83               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  2584   000664  EF38  F003         	goto	u820
  2585   000668  EF36  F003         	goto	u821
  2586   00066C                     u821:
  2587   00066C  EF42  F003         	goto	l1708
  2588   000670                     u820:
  2589   000670                     
  2590                           ; BSR set to: 0
  2591   000670  1F83               	comf	(___aldiv@dividend+3)& (0+255),f,b
  2592   000672  1F82               	comf	(___aldiv@dividend+2)& (0+255),f,b
  2593   000674  1F81               	comf	(___aldiv@dividend+1)& (0+255),f,b
  2594   000676  6D80               	negf	___aldiv@dividend& (0+255),b
  2595   000678  0E00               	movlw	0
  2596   00067A  2381               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  2597   00067C  2382               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  2598   00067E  2383               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  2599   000680                     
  2600                           ; BSR set to: 0
  2601   000680  0E01               	movlw	1
  2602   000682  1A3C               	xorwf	___aldiv@sign^0,f,c
  2603   000684                     l1708:
  2604                           
  2605                           ; BSR set to: 0
  2606   000684  0E00               	movlw	0
  2607   000686  6E3D               	movwf	___aldiv@quotient^0,c
  2608   000688  0E00               	movlw	0
  2609   00068A  6E3E               	movwf	(___aldiv@quotient+1)^0,c
  2610   00068C  0E00               	movlw	0
  2611   00068E  6E3F               	movwf	(___aldiv@quotient+2)^0,c
  2612   000690  0E00               	movlw	0
  2613   000692  6E40               	movwf	(___aldiv@quotient+3)^0,c
  2614   000694                     
  2615                           ; BSR set to: 0
  2616   000694  5184               	movf	___aldiv@divisor& (0+255),w,b
  2617   000696  1185               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  2618   000698  1186               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  2619   00069A  1187               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  2620   00069C  B4D8               	btfsc	status,2,c
  2621   00069E  EF53  F003         	goto	u831
  2622   0006A2  EF55  F003         	goto	u830
  2623   0006A6                     u831:
  2624   0006A6  EF8B  F003         	goto	l1730
  2625   0006AA                     u830:
  2626   0006AA                     
  2627                           ; BSR set to: 0
  2628   0006AA  0E01               	movlw	1
  2629   0006AC  6E3B               	movwf	___aldiv@counter^0,c
  2630   0006AE  EF5F  F003         	goto	l1716
  2631   0006B2                     l1714:
  2632                           
  2633                           ; BSR set to: 0
  2634   0006B2  90D8               	bcf	status,0,c
  2635   0006B4  3784               	rlcf	___aldiv@divisor& (0+255),f,b
  2636   0006B6  3785               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  2637   0006B8  3786               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  2638   0006BA  3787               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  2639   0006BC  2A3B               	incf	___aldiv@counter^0,f,c
  2640   0006BE                     l1716:
  2641                           
  2642                           ; BSR set to: 0
  2643   0006BE  AF87               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  2644   0006C0  EF64  F003         	goto	u841
  2645   0006C4  EF66  F003         	goto	u840
  2646   0006C8                     u841:
  2647   0006C8  EF59  F003         	goto	l1714
  2648   0006CC                     u840:
  2649   0006CC                     l1718:
  2650                           
  2651                           ; BSR set to: 0
  2652   0006CC  90D8               	bcf	status,0,c
  2653   0006CE  363D               	rlcf	___aldiv@quotient^0,f,c
  2654   0006D0  363E               	rlcf	(___aldiv@quotient+1)^0,f,c
  2655   0006D2  363F               	rlcf	(___aldiv@quotient+2)^0,f,c
  2656   0006D4  3640               	rlcf	(___aldiv@quotient+3)^0,f,c
  2657   0006D6                     
  2658                           ; BSR set to: 0
  2659   0006D6  5184               	movf	___aldiv@divisor& (0+255),w,b
  2660   0006D8  5D80               	subwf	___aldiv@dividend& (0+255),w,b
  2661   0006DA  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
  2662   0006DC  5981               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  2663   0006DE  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
  2664   0006E0  5982               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  2665   0006E2  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
  2666   0006E4  5983               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  2667   0006E6  A0D8               	btfss	status,0,c
  2668   0006E8  EF78  F003         	goto	u851
  2669   0006EC  EF7A  F003         	goto	u850
  2670   0006F0                     u851:
  2671   0006F0  EF83  F003         	goto	l1726
  2672   0006F4                     u850:
  2673   0006F4                     
  2674                           ; BSR set to: 0
  2675   0006F4  5184               	movf	___aldiv@divisor& (0+255),w,b
  2676   0006F6  5F80               	subwf	___aldiv@dividend& (0+255),f,b
  2677   0006F8  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
  2678   0006FA  5B81               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  2679   0006FC  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
  2680   0006FE  5B82               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  2681   000700  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
  2682   000702  5B83               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  2683   000704                     
  2684                           ; BSR set to: 0
  2685   000704  803D               	bsf	___aldiv@quotient^0,0,c
  2686   000706                     l1726:
  2687                           
  2688                           ; BSR set to: 0
  2689   000706  90D8               	bcf	status,0,c
  2690   000708  3387               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  2691   00070A  3386               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  2692   00070C  3385               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  2693   00070E  3384               	rrcf	___aldiv@divisor& (0+255),f,b
  2694   000710                     
  2695                           ; BSR set to: 0
  2696   000710  2E3B               	decfsz	___aldiv@counter^0,f,c
  2697   000712  EF66  F003         	goto	l1718
  2698   000716                     l1730:
  2699                           
  2700                           ; BSR set to: 0
  2701   000716  503C               	movf	___aldiv@sign^0,w,c
  2702   000718  B4D8               	btfsc	status,2,c
  2703   00071A  EF91  F003         	goto	u861
  2704   00071E  EF93  F003         	goto	u860
  2705   000722                     u861:
  2706   000722  EF9B  F003         	goto	l1734
  2707   000726                     u860:
  2708   000726                     
  2709                           ; BSR set to: 0
  2710   000726  1E40               	comf	(___aldiv@quotient+3)^0,f,c
  2711   000728  1E3F               	comf	(___aldiv@quotient+2)^0,f,c
  2712   00072A  1E3E               	comf	(___aldiv@quotient+1)^0,f,c
  2713   00072C  6C3D               	negf	___aldiv@quotient^0,c
  2714   00072E  0E00               	movlw	0
  2715   000730  223E               	addwfc	(___aldiv@quotient+1)^0,f,c
  2716   000732  223F               	addwfc	(___aldiv@quotient+2)^0,f,c
  2717   000734  2240               	addwfc	(___aldiv@quotient+3)^0,f,c
  2718   000736                     l1734:
  2719                           
  2720                           ; BSR set to: 0
  2721   000736  C03D  F080         	movff	___aldiv@quotient,?___aldiv
  2722   00073A  C03E  F081         	movff	___aldiv@quotient+1,?___aldiv+1
  2723   00073E  C03F  F082         	movff	___aldiv@quotient+2,?___aldiv+2
  2724   000742  C040  F083         	movff	___aldiv@quotient+3,?___aldiv+3
  2725   000746                     
  2726                           ; BSR set to: 0
  2727   000746  0012               	return		;funcret
  2728   000748                     __end_of___aldiv:
  2729                           	callstack 0
  2730                           
  2731 ;; *************** function _Initialize_Songs *****************
  2732 ;; Defined at:
  2733 ;;		line 48 in file "buzzer.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;		None
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2747 ;;      Params:         0       0       0       0       0       0       0
  2748 ;;      Locals:         0       0       0       0       0       0       0
  2749 ;;      Temps:          0       0       0       0       0       0       0
  2750 ;;      Totals:         0       0       0       0       0       0       0
  2751 ;;Total ram usage:        0 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; Hardware stack levels required when called: 2
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_music_start
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text4
  2762   000ACC                     __ptext4:
  2763                           	callstack 0
  2764   000ACC                     _Initialize_Songs:
  2765                           	callstack 27
  2766   000ACC                     
  2767                           ;buzzer.c: 50:     current_melody = (const int(*)[3])melodies[current_song];
  2768   000ACC  0100               	movlb	0	; () banked
  2769   000ACE  5196               	movf	_current_song& (0+255),w,b
  2770   000AD0  0D02               	mullw	2
  2771   000AD2  50F3               	movf	243,w,c
  2772   000AD4  0F4B               	addlw	low _melodies
  2773   000AD6  6ED9               	movwf	fsr2l,c
  2774   000AD8  6ADA               	clrf	fsr2h,c
  2775   000ADA  CFDE F049          	movff	postinc2,_current_melody
  2776   000ADE  CFDD F04A          	movff	postdec2,_current_melody+1
  2777   000AE2                     
  2778                           ; BSR set to: 0
  2779                           ;buzzer.c: 51:     current_melody_length = melody_lengths[current_song];
  2780   000AE2  90D8               	bcf	status,0,c
  2781   000AE4  3596               	rlcf	_current_song& (0+255),w,b
  2782   000AE6  6EF6               	movwf	tblptrl,c
  2783   000AE8  3597               	rlcf	(_current_song+1)& (0+255),w,b
  2784   000AEA  6EF7               	movwf	tblptrh,c
  2785   000AEC  0EB3               	movlw	low _melody_lengths
  2786   000AEE  26F6               	addwf	tblptrl,f,c
  2787   000AF0  0E79               	movlw	high _melody_lengths
  2788   000AF2  22F7               	addwfc	tblptrh,f,c
  2789   000AF4                     	if	0	;There are less than 3 active tblptr bytes
  2790   000AF4                     	endif
  2791   000AF4  0009               	tblrd		*+
  2792   000AF6  CFF5 F047          	movff	tablat,_current_melody_length
  2793   000AFA  000A               	tblrd		*-
  2794   000AFC  CFF5 F048          	movff	tablat,_current_melody_length+1
  2795   000B00                     
  2796                           ; BSR set to: 0
  2797   000B00  0012               	return		;funcret
  2798   000B02                     __end_of_Initialize_Songs:
  2799                           	callstack 0
  2800                           
  2801 ;; *************** function _broadcast_BT *****************
  2802 ;; Defined at:
  2803 ;;		line 67 in file "bluetooth_main.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;		None
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2817 ;;      Params:         0       0       0       0       0       0       0
  2818 ;;      Locals:         0       0       0       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0
  2820 ;;      Totals:         0       0       0       0       0       0       0
  2821 ;;Total ram usage:        0 bytes
  2822 ;; Hardware stack levels used: 1
  2823 ;; Hardware stack levels required when called: 2
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_main
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text5
  2832   000BCA                     __ptext5:
  2833                           	callstack 0
  2834   000BCA                     _broadcast_BT:
  2835                           	callstack 28
  2836   000BCA                     
  2837                           ;bluetooth_main.c: 69:     {
  2838   000BCA  0E0D               	movlw	13
  2839   000BCC  6EAD               	movwf	173,c	;volatile
  2840   000BCE                     l89:
  2841   000BCE  A2AC               	btfss	172,1,c	;volatile
  2842   000BD0  EFEC  F005         	goto	u881
  2843   000BD4  EFEE  F005         	goto	u880
  2844   000BD8                     u881:
  2845   000BD8  EFE7  F005         	goto	l89
  2846   000BDC                     u880:
  2847   000BDC  0012               	return		;funcret
  2848   000BDE                     __end_of_broadcast_BT:
  2849                           	callstack 0
  2850                           
  2851 ;; *************** function _Motor_TurnRight *****************
  2852 ;; Defined at:
  2853 ;;		line 73 in file "motor.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		None
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2867 ;;      Params:         0       0       0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 2
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text6
  2882   000BF2                     __ptext6:
  2883                           	callstack 0
  2884   000BF2                     _Motor_TurnRight:
  2885                           	callstack 28
  2886   000BF2                     
  2887                           ;motor.c: 75:     LATAbits.LATA0 = 0;
  2888   000BF2  9089               	bcf	137,0,c	;volatile
  2889                           
  2890                           ;motor.c: 76:     LATAbits.LATA1 = 1;
  2891   000BF4  8289               	bsf	137,1,c	;volatile
  2892                           
  2893                           ;motor.c: 77:     LATDbits.LATD0 = 0;
  2894   000BF6  908C               	bcf	140,0,c	;volatile
  2895                           
  2896                           ;motor.c: 78:     LATDbits.LATD1 = 1;
  2897   000BF8  828C               	bsf	140,1,c	;volatile
  2898                           
  2899                           ;motor.c: 79:     LATDbits.LATD2 = 0;
  2900   000BFA  948C               	bcf	140,2,c	;volatile
  2901                           
  2902                           ;motor.c: 80:     LATDbits.LATD3 = 0;
  2903   000BFC  968C               	bcf	140,3,c	;volatile
  2904                           
  2905                           ;motor.c: 81:     LATBbits.LATB4 = 0;
  2906   000BFE  988A               	bcf	138,4,c	;volatile
  2907                           
  2908                           ;motor.c: 82:     LATBbits.LATB5 = 0;
  2909   000C00  9A8A               	bcf	138,5,c	;volatile
  2910   000C02  0012               	return		;funcret
  2911   000C04                     __end_of_Motor_TurnRight:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function _Motor_TurnLeft *****************
  2915 ;; Defined at:
  2916 ;;		line 61 in file "motor.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		None
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2930 ;;      Params:         0       0       0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0
  2933 ;;      Totals:         0       0       0       0       0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 2
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_main
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text7
  2945   000C04                     __ptext7:
  2946                           	callstack 0
  2947   000C04                     _Motor_TurnLeft:
  2948                           	callstack 28
  2949   000C04                     
  2950                           ;motor.c: 63:     LATAbits.LATA0 = 0;
  2951   000C04  9089               	bcf	137,0,c	;volatile
  2952                           
  2953                           ;motor.c: 64:     LATAbits.LATA1 = 0;
  2954   000C06  9289               	bcf	137,1,c	;volatile
  2955                           
  2956                           ;motor.c: 65:     LATDbits.LATD0 = 0;
  2957   000C08  908C               	bcf	140,0,c	;volatile
  2958                           
  2959                           ;motor.c: 66:     LATDbits.LATD1 = 0;
  2960   000C0A  928C               	bcf	140,1,c	;volatile
  2961                           
  2962                           ;motor.c: 67:     LATDbits.LATD2 = 0;
  2963   000C0C  948C               	bcf	140,2,c	;volatile
  2964                           
  2965                           ;motor.c: 68:     LATDbits.LATD3 = 1;
  2966   000C0E  868C               	bsf	140,3,c	;volatile
  2967                           
  2968                           ;motor.c: 69:     LATBbits.LATB4 = 0;
  2969   000C10  988A               	bcf	138,4,c	;volatile
  2970                           
  2971                           ;motor.c: 70:     LATBbits.LATB5 = 1;
  2972   000C12  8A8A               	bsf	138,5,c	;volatile
  2973   000C14  0012               	return		;funcret
  2974   000C16                     __end_of_Motor_TurnLeft:
  2975                           	callstack 0
  2976                           
  2977 ;; *************** function _Motor_Stop *****************
  2978 ;; Defined at:
  2979 ;;		line 37 in file "motor.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		None
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2993 ;;      Params:         0       0       0       0       0       0       0
  2994 ;;      Locals:         0       0       0       0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0
  2996 ;;      Totals:         0       0       0       0       0       0       0
  2997 ;;Total ram usage:        0 bytes
  2998 ;; Hardware stack levels used: 1
  2999 ;; Hardware stack levels required when called: 2
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text8
  3008   000C16                     __ptext8:
  3009                           	callstack 0
  3010   000C16                     _Motor_Stop:
  3011                           	callstack 28
  3012   000C16                     
  3013                           ;motor.c: 39:     LATAbits.LATA0 = 0;
  3014   000C16  9089               	bcf	137,0,c	;volatile
  3015                           
  3016                           ;motor.c: 40:     LATAbits.LATA1 = 0;
  3017   000C18  9289               	bcf	137,1,c	;volatile
  3018                           
  3019                           ;motor.c: 41:     LATDbits.LATD0 = 0;
  3020   000C1A  908C               	bcf	140,0,c	;volatile
  3021                           
  3022                           ;motor.c: 42:     LATDbits.LATD1 = 0;
  3023   000C1C  928C               	bcf	140,1,c	;volatile
  3024                           
  3025                           ;motor.c: 43:     LATDbits.LATD2 = 0;
  3026   000C1E  948C               	bcf	140,2,c	;volatile
  3027                           
  3028                           ;motor.c: 44:     LATDbits.LATD3 = 0;
  3029   000C20  968C               	bcf	140,3,c	;volatile
  3030                           
  3031                           ;motor.c: 45:     LATBbits.LATB4 = 0;
  3032   000C22  988A               	bcf	138,4,c	;volatile
  3033                           
  3034                           ;motor.c: 46:     LATBbits.LATB5 = 0;
  3035   000C24  9A8A               	bcf	138,5,c	;volatile
  3036   000C26  0012               	return		;funcret
  3037   000C28                     __end_of_Motor_Stop:
  3038                           	callstack 0
  3039                           
  3040 ;; *************** function _Motor_Forward *****************
  3041 ;; Defined at:
  3042 ;;		line 25 in file "motor.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;		None
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		None
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3056 ;;      Params:         0       0       0       0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0
  3059 ;;      Totals:         0       0       0       0       0       0       0
  3060 ;;Total ram usage:        0 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; Hardware stack levels required when called: 2
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_main
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text9
  3071   000C28                     __ptext9:
  3072                           	callstack 0
  3073   000C28                     _Motor_Forward:
  3074                           	callstack 28
  3075   000C28                     
  3076                           ;motor.c: 27:     LATAbits.LATA0 = 0;
  3077   000C28  9089               	bcf	137,0,c	;volatile
  3078                           
  3079                           ;motor.c: 28:     LATAbits.LATA1 = 1;
  3080   000C2A  8289               	bsf	137,1,c	;volatile
  3081                           
  3082                           ;motor.c: 29:     LATDbits.LATD0 = 0;
  3083   000C2C  908C               	bcf	140,0,c	;volatile
  3084                           
  3085                           ;motor.c: 30:     LATDbits.LATD1 = 1;
  3086   000C2E  828C               	bsf	140,1,c	;volatile
  3087                           
  3088                           ;motor.c: 31:     LATDbits.LATD2 = 0;
  3089   000C30  948C               	bcf	140,2,c	;volatile
  3090                           
  3091                           ;motor.c: 32:     LATDbits.LATD3 = 1;
  3092   000C32  868C               	bsf	140,3,c	;volatile
  3093                           
  3094                           ;motor.c: 33:     LATBbits.LATB4 = 0;
  3095   000C34  988A               	bcf	138,4,c	;volatile
  3096                           
  3097                           ;motor.c: 34:     LATBbits.LATB5 = 1;
  3098   000C36  8A8A               	bsf	138,5,c	;volatile
  3099   000C38  0012               	return		;funcret
  3100   000C3A                     __end_of_Motor_Forward:
  3101                           	callstack 0
  3102                           
  3103 ;; *************** function _Motor_Backward *****************
  3104 ;; Defined at:
  3105 ;;		line 49 in file "motor.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		None
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3119 ;;      Params:         0       0       0       0       0       0       0
  3120 ;;      Locals:         0       0       0       0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0
  3122 ;;      Totals:         0       0       0       0       0       0       0
  3123 ;;Total ram usage:        0 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; Hardware stack levels required when called: 2
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_main
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text10
  3134   000C3A                     __ptext10:
  3135                           	callstack 0
  3136   000C3A                     _Motor_Backward:
  3137                           	callstack 28
  3138   000C3A                     
  3139                           ;motor.c: 51:     LATAbits.LATA0 = 1;
  3140   000C3A  8089               	bsf	137,0,c	;volatile
  3141                           
  3142                           ;motor.c: 52:     LATAbits.LATA1 = 0;
  3143   000C3C  9289               	bcf	137,1,c	;volatile
  3144                           
  3145                           ;motor.c: 53:     LATDbits.LATD0 = 1;
  3146   000C3E  808C               	bsf	140,0,c	;volatile
  3147                           
  3148                           ;motor.c: 54:     LATDbits.LATD1 = 0;
  3149   000C40  928C               	bcf	140,1,c	;volatile
  3150                           
  3151                           ;motor.c: 55:     LATDbits.LATD2 = 1;
  3152   000C42  848C               	bsf	140,2,c	;volatile
  3153                           
  3154                           ;motor.c: 56:     LATDbits.LATD3 = 0;
  3155   000C44  968C               	bcf	140,3,c	;volatile
  3156                           
  3157                           ;motor.c: 57:     LATBbits.LATB4 = 1;
  3158   000C46  888A               	bsf	138,4,c	;volatile
  3159                           
  3160                           ;motor.c: 58:     LATBbits.LATB5 = 0;
  3161   000C48  9A8A               	bcf	138,5,c	;volatile
  3162   000C4A  0012               	return		;funcret
  3163   000C4C                     __end_of_Motor_Backward:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function _Ladder_Forward *****************
  3167 ;; Defined at:
  3168 ;;		line 29 in file "ladder.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  turns           2   48[COMRAM] int 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  i               2   54[COMRAM] int 
  3173 ;;  stepIndex       2   56[COMRAM] int 
  3174 ;;  steps           2   52[COMRAM] int 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3184 ;;      Params:         2       0       0       0       0       0       0
  3185 ;;      Locals:         6       0       0       0       0       0       0
  3186 ;;      Temps:          2       0       0       0       0       0       0
  3187 ;;      Totals:        10       0       0       0       0       0       0
  3188 ;;Total ram usage:       10 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; Hardware stack levels required when called: 3
  3191 ;; This function calls:
  3192 ;;		_Update_StepperMotor
  3193 ;; This function is called by:
  3194 ;;		_main
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text11
  3199   000852                     __ptext11:
  3200                           	callstack 0
  3201   000852                     _Ladder_Forward:
  3202                           	callstack 27
  3203   000852                     
  3204                           ;ladder.c: 29: void Ladder_Forward(int turns);ladder.c: 30: {;ladder.c: 31:     int step
      +                          s = turns * 2048;
  3205   000852  C031  F033         	movff	Ladder_Forward@turns,??_Ladder_Forward
  3206   000856  C032  F034         	movff	Ladder_Forward@turns+1,??_Ladder_Forward+1
  3207   00085A  0E0B               	movlw	11
  3208   00085C                     u935:
  3209   00085C  90D8               	bcf	status,0,c
  3210   00085E  3633               	rlcf	??_Ladder_Forward^0,f,c
  3211   000860  3634               	rlcf	(??_Ladder_Forward+1)^0,f,c
  3212   000862  2EE8               	decfsz	wreg,f,c
  3213   000864  EF2E  F004         	goto	u935
  3214   000868  C033  F035         	movff	??_Ladder_Forward,Ladder_Forward@steps
  3215   00086C  C034  F036         	movff	??_Ladder_Forward+1,Ladder_Forward@steps+1
  3216   000870                     
  3217                           ;ladder.c: 32:     int stepIndex = 0;
  3218   000870  0E00               	movlw	0
  3219   000872  6E3A               	movwf	(Ladder_Forward@stepIndex+1)^0,c
  3220   000874  0E00               	movlw	0
  3221   000876  6E39               	movwf	Ladder_Forward@stepIndex^0,c
  3222   000878                     
  3223                           ;ladder.c: 33:     for (int i = 0; i < steps; i++)
  3224   000878  0E00               	movlw	0
  3225   00087A  6E38               	movwf	(Ladder_Forward@i+1)^0,c
  3226   00087C  0E00               	movlw	0
  3227   00087E  6E37               	movwf	Ladder_Forward@i^0,c
  3228   000880  EF60  F004         	goto	l1872
  3229   000884                     l1864:
  3230                           
  3231                           ;ladder.c: 34:     {;ladder.c: 35:         Update_StepperMotor(stepSequence[stepIndex]);
  3232   000884  0EB9               	movlw	low _stepSequence
  3233   000886  2439               	addwf	Ladder_Forward@stepIndex^0,w,c
  3234   000888  6EF6               	movwf	tblptrl,c
  3235   00088A  0E79               	movlw	high _stepSequence
  3236   00088C  203A               	addwfc	(Ladder_Forward@stepIndex+1)^0,w,c
  3237   00088E  6EF7               	movwf	tblptrh,c
  3238   000890                     	if	0	;There are less than 3 active tblptr bytes
  3239   000890                     	endif
  3240   000890  0008               	tblrd		*
  3241   000892  50F5               	movf	tablat,w,c
  3242   000894  ECEF  F005         	call	_Update_StepperMotor
  3243   000898                     
  3244                           ;ladder.c: 36:         _delay((unsigned long)((2)*(8000000/4000.0)));
  3245   000898  0E06               	movlw	6
  3246   00089A  6E33               	movwf	??_Ladder_Forward^0,c
  3247   00089C  0E30               	movlw	48
  3248   00089E                     u1077:
  3249   00089E  2EE8               	decfsz	wreg,f,c
  3250   0008A0  D7FE               	bra	u1077
  3251   0008A2  2E33               	decfsz	??_Ladder_Forward^0,f,c
  3252   0008A4  D7FC               	bra	u1077
  3253   0008A6  D000               	nop2	
  3254   0008A8                     
  3255                           ;ladder.c: 37:         stepIndex = (stepIndex + 1) % 4;
  3256   0008A8  0E01               	movlw	1
  3257   0008AA  2439               	addwf	Ladder_Forward@stepIndex^0,w,c
  3258   0008AC  6E33               	movwf	??_Ladder_Forward^0,c
  3259   0008AE  0E00               	movlw	0
  3260   0008B0  203A               	addwfc	(Ladder_Forward@stepIndex+1)^0,w,c
  3261   0008B2  6E34               	movwf	(??_Ladder_Forward+1)^0,c
  3262   0008B4  0E03               	movlw	3
  3263   0008B6  1433               	andwf	??_Ladder_Forward^0,w,c
  3264   0008B8  6E39               	movwf	Ladder_Forward@stepIndex^0,c
  3265   0008BA  6A3A               	clrf	(Ladder_Forward@stepIndex+1)^0,c
  3266   0008BC                     
  3267                           ;ladder.c: 38:     }
  3268   0008BC  4A37               	infsnz	Ladder_Forward@i^0,f,c
  3269   0008BE  2A38               	incf	(Ladder_Forward@i+1)^0,f,c
  3270   0008C0                     l1872:
  3271   0008C0  5035               	movf	Ladder_Forward@steps^0,w,c
  3272   0008C2  5C37               	subwf	Ladder_Forward@i^0,w,c
  3273   0008C4  5038               	movf	(Ladder_Forward@i+1)^0,w,c
  3274   0008C6  0A80               	xorlw	128
  3275   0008C8  6E33               	movwf	??_Ladder_Forward^0,c
  3276   0008CA  5036               	movf	(Ladder_Forward@steps+1)^0,w,c
  3277   0008CC  0A80               	xorlw	128
  3278   0008CE  5833               	subwfb	??_Ladder_Forward^0,w,c
  3279   0008D0  A0D8               	btfss	status,0,c
  3280   0008D2  EF6D  F004         	goto	u941
  3281   0008D6  EF6F  F004         	goto	u940
  3282   0008DA                     u941:
  3283   0008DA  EF42  F004         	goto	l1864
  3284   0008DE                     u940:
  3285   0008DE  0012               	return		;funcret
  3286   0008E0                     __end_of_Ladder_Forward:
  3287                           	callstack 0
  3288                           
  3289 ;; *************** function _Ladder_Backward *****************
  3290 ;; Defined at:
  3291 ;;		line 42 in file "ladder.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  turns           2   48[COMRAM] int 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  i               2   54[COMRAM] int 
  3296 ;;  stepIndex       2   56[COMRAM] int 
  3297 ;;  steps           2   52[COMRAM] int 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3307 ;;      Params:         2       0       0       0       0       0       0
  3308 ;;      Locals:         6       0       0       0       0       0       0
  3309 ;;      Temps:          2       0       0       0       0       0       0
  3310 ;;      Totals:        10       0       0       0       0       0       0
  3311 ;;Total ram usage:       10 bytes
  3312 ;; Hardware stack levels used: 1
  3313 ;; Hardware stack levels required when called: 3
  3314 ;; This function calls:
  3315 ;;		_Update_StepperMotor
  3316 ;; This function is called by:
  3317 ;;		_main
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text12
  3322   0008E0                     __ptext12:
  3323                           	callstack 0
  3324   0008E0                     _Ladder_Backward:
  3325                           	callstack 27
  3326   0008E0                     
  3327                           ;ladder.c: 42: void Ladder_Backward(int turns);ladder.c: 43: {;ladder.c: 44:     int ste
      +                          ps = turns * 2048;
  3328   0008E0  C031  F033         	movff	Ladder_Backward@turns,??_Ladder_Backward
  3329   0008E4  C032  F034         	movff	Ladder_Backward@turns+1,??_Ladder_Backward+1
  3330   0008E8  0E0B               	movlw	11
  3331   0008EA                     u955:
  3332   0008EA  90D8               	bcf	status,0,c
  3333   0008EC  3633               	rlcf	??_Ladder_Backward^0,f,c
  3334   0008EE  3634               	rlcf	(??_Ladder_Backward+1)^0,f,c
  3335   0008F0  2EE8               	decfsz	wreg,f,c
  3336   0008F2  EF75  F004         	goto	u955
  3337   0008F6  C033  F035         	movff	??_Ladder_Backward,Ladder_Backward@steps
  3338   0008FA  C034  F036         	movff	??_Ladder_Backward+1,Ladder_Backward@steps+1
  3339   0008FE                     
  3340                           ;ladder.c: 45:     int stepIndex = 3;
  3341   0008FE  0E00               	movlw	0
  3342   000900  6E3A               	movwf	(Ladder_Backward@stepIndex+1)^0,c
  3343   000902  0E03               	movlw	3
  3344   000904  6E39               	movwf	Ladder_Backward@stepIndex^0,c
  3345   000906                     
  3346                           ;ladder.c: 46:     for (int i = 0; i < steps; i++)
  3347   000906  0E00               	movlw	0
  3348   000908  6E38               	movwf	(Ladder_Backward@i+1)^0,c
  3349   00090A  0E00               	movlw	0
  3350   00090C  6E37               	movwf	Ladder_Backward@i^0,c
  3351   00090E  EFA7  F004         	goto	l1888
  3352   000912                     l1880:
  3353                           
  3354                           ;ladder.c: 47:     {;ladder.c: 48:         Update_StepperMotor(stepSequence[stepIndex]);
  3355   000912  0EB9               	movlw	low _stepSequence
  3356   000914  2439               	addwf	Ladder_Backward@stepIndex^0,w,c
  3357   000916  6EF6               	movwf	tblptrl,c
  3358   000918  0E79               	movlw	high _stepSequence
  3359   00091A  203A               	addwfc	(Ladder_Backward@stepIndex+1)^0,w,c
  3360   00091C  6EF7               	movwf	tblptrh,c
  3361   00091E                     	if	0	;There are less than 3 active tblptr bytes
  3362   00091E                     	endif
  3363   00091E  0008               	tblrd		*
  3364   000920  50F5               	movf	tablat,w,c
  3365   000922  ECEF  F005         	call	_Update_StepperMotor
  3366   000926                     
  3367                           ;ladder.c: 49:         _delay((unsigned long)((2)*(8000000/4000.0)));
  3368   000926  0E06               	movlw	6
  3369   000928  6E33               	movwf	??_Ladder_Backward^0,c
  3370   00092A  0E30               	movlw	48
  3371   00092C                     u1087:
  3372   00092C  2EE8               	decfsz	wreg,f,c
  3373   00092E  D7FE               	bra	u1087
  3374   000930  2E33               	decfsz	??_Ladder_Backward^0,f,c
  3375   000932  D7FC               	bra	u1087
  3376   000934  D000               	nop2	
  3377   000936                     
  3378                           ;ladder.c: 50:         stepIndex = (stepIndex - 1 + 4) % 4;
  3379   000936  0E03               	movlw	3
  3380   000938  2439               	addwf	Ladder_Backward@stepIndex^0,w,c
  3381   00093A  6E33               	movwf	??_Ladder_Backward^0,c
  3382   00093C  0E00               	movlw	0
  3383   00093E  203A               	addwfc	(Ladder_Backward@stepIndex+1)^0,w,c
  3384   000940  6E34               	movwf	(??_Ladder_Backward+1)^0,c
  3385   000942  0E03               	movlw	3
  3386   000944  1433               	andwf	??_Ladder_Backward^0,w,c
  3387   000946  6E39               	movwf	Ladder_Backward@stepIndex^0,c
  3388   000948  6A3A               	clrf	(Ladder_Backward@stepIndex+1)^0,c
  3389   00094A                     
  3390                           ;ladder.c: 51:     }
  3391   00094A  4A37               	infsnz	Ladder_Backward@i^0,f,c
  3392   00094C  2A38               	incf	(Ladder_Backward@i+1)^0,f,c
  3393   00094E                     l1888:
  3394   00094E  5035               	movf	Ladder_Backward@steps^0,w,c
  3395   000950  5C37               	subwf	Ladder_Backward@i^0,w,c
  3396   000952  5038               	movf	(Ladder_Backward@i+1)^0,w,c
  3397   000954  0A80               	xorlw	128
  3398   000956  6E33               	movwf	??_Ladder_Backward^0,c
  3399   000958  5036               	movf	(Ladder_Backward@steps+1)^0,w,c
  3400   00095A  0A80               	xorlw	128
  3401   00095C  5833               	subwfb	??_Ladder_Backward^0,w,c
  3402   00095E  A0D8               	btfss	status,0,c
  3403   000960  EFB4  F004         	goto	u961
  3404   000964  EFB6  F004         	goto	u960
  3405   000968                     u961:
  3406   000968  EF89  F004         	goto	l1880
  3407   00096C                     u960:
  3408   00096C  0012               	return		;funcret
  3409   00096E                     __end_of_Ladder_Backward:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _Update_StepperMotor *****************
  3413 ;; Defined at:
  3414 ;;		line 23 in file "ladder.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  stepValue       1    wreg     unsigned char 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  stepValue       1   47[COMRAM] unsigned char 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3428 ;;      Params:         0       0       0       0       0       0       0
  3429 ;;      Locals:         1       0       0       0       0       0       0
  3430 ;;      Temps:          1       0       0       0       0       0       0
  3431 ;;      Totals:         2       0       0       0       0       0       0
  3432 ;;Total ram usage:        2 bytes
  3433 ;; Hardware stack levels used: 1
  3434 ;; Hardware stack levels required when called: 2
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_Ladder_Forward
  3439 ;;		_Ladder_Backward
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text13
  3444   000BDE                     __ptext13:
  3445                           	callstack 0
  3446   000BDE                     _Update_StepperMotor:
  3447                           	callstack 27
  3448                           
  3449                           ;incstack = 0
  3450                           ;Update_StepperMotor@stepValue stored from wreg
  3451   000BDE  6E30               	movwf	Update_StepperMotor@stepValue^0,c
  3452   000BE0                     
  3453                           ;ladder.c: 23: void Update_StepperMotor(unsigned char stepValue);ladder.c: 24: {;ladder.
      +                          c: 25:     LATD = (LATD & 0x0F) | (stepValue & 0xF0);
  3454   000BE0  C030  F02F         	movff	Update_StepperMotor@stepValue,??_Update_StepperMotor
  3455   000BE4  0EF0               	movlw	240
  3456   000BE6  162F               	andwf	??_Update_StepperMotor^0,f,c
  3457   000BE8  508C               	movf	140,w,c	;volatile
  3458   000BEA  0B0F               	andlw	15
  3459   000BEC  102F               	iorwf	??_Update_StepperMotor^0,w,c
  3460   000BEE  6E8C               	movwf	140,c	;volatile
  3461   000BF0  0012               	return		;funcret
  3462   000BF2                     __end_of_Update_StepperMotor:
  3463                           	callstack 0
  3464                           
  3465 ;; *************** function _Initialize_Motor *****************
  3466 ;; Defined at:
  3467 ;;		line 4 in file "motor.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		None
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3481 ;;      Params:         0       0       0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0
  3484 ;;      Totals:         0       0       0       0       0       0       0
  3485 ;;Total ram usage:        0 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; Hardware stack levels required when called: 2
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_main
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text14
  3496   000B88                     __ptext14:
  3497                           	callstack 0
  3498   000B88                     _Initialize_Motor:
  3499                           	callstack 28
  3500   000B88                     
  3501                           ;motor.c: 6:     TRISAbits.TRISA0 = 0;
  3502   000B88  9092               	bcf	146,0,c	;volatile
  3503                           
  3504                           ;motor.c: 7:     TRISAbits.TRISA1 = 0;
  3505   000B8A  9292               	bcf	146,1,c	;volatile
  3506                           
  3507                           ;motor.c: 8:     TRISDbits.TRISD0 = 0;
  3508   000B8C  9095               	bcf	149,0,c	;volatile
  3509                           
  3510                           ;motor.c: 9:     TRISDbits.TRISD1 = 0;
  3511   000B8E  9295               	bcf	149,1,c	;volatile
  3512                           
  3513                           ;motor.c: 10:     TRISDbits.TRISD2 = 0;
  3514   000B90  9495               	bcf	149,2,c	;volatile
  3515                           
  3516                           ;motor.c: 11:     TRISDbits.TRISD3 = 0;
  3517   000B92  9695               	bcf	149,3,c	;volatile
  3518                           
  3519                           ;motor.c: 12:     TRISBbits.TRISB4 = 0;
  3520   000B94  9893               	bcf	147,4,c	;volatile
  3521                           
  3522                           ;motor.c: 13:     TRISBbits.TRISB5 = 0;
  3523   000B96  9A93               	bcf	147,5,c	;volatile
  3524                           
  3525                           ;motor.c: 15:     LATAbits.LATA0 = 0;
  3526   000B98  9089               	bcf	137,0,c	;volatile
  3527                           
  3528                           ;motor.c: 16:     LATAbits.LATA1 = 0;
  3529   000B9A  9289               	bcf	137,1,c	;volatile
  3530                           
  3531                           ;motor.c: 17:     LATDbits.LATD0 = 0;
  3532   000B9C  908C               	bcf	140,0,c	;volatile
  3533                           
  3534                           ;motor.c: 18:     LATDbits.LATD1 = 0;
  3535   000B9E  928C               	bcf	140,1,c	;volatile
  3536                           
  3537                           ;motor.c: 19:     LATDbits.LATD2 = 0;
  3538   000BA0  948C               	bcf	140,2,c	;volatile
  3539                           
  3540                           ;motor.c: 20:     LATDbits.LATD3 = 0;
  3541   000BA2  968C               	bcf	140,3,c	;volatile
  3542                           
  3543                           ;motor.c: 21:     LATBbits.LATB4 = 0;
  3544   000BA4  988A               	bcf	138,4,c	;volatile
  3545                           
  3546                           ;motor.c: 22:     LATBbits.LATB5 = 0;
  3547   000BA6  9A8A               	bcf	138,5,c	;volatile
  3548   000BA8  0012               	return		;funcret
  3549   000BAA                     __end_of_Initialize_Motor:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _Initialize_Ladder *****************
  3553 ;; Defined at:
  3554 ;;		line 10 in file "ladder.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		None
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3568 ;;      Params:         0       0       0       0       0       0       0
  3569 ;;      Locals:         0       0       0       0       0       0       0
  3570 ;;      Temps:          0       0       0       0       0       0       0
  3571 ;;      Totals:         0       0       0       0       0       0       0
  3572 ;;Total ram usage:        0 bytes
  3573 ;; Hardware stack levels used: 1
  3574 ;; Hardware stack levels required when called: 2
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text15
  3583   000C4C                     __ptext15:
  3584                           	callstack 0
  3585   000C4C                     _Initialize_Ladder:
  3586                           	callstack 28
  3587   000C4C                     
  3588                           ;ladder.c: 12:     TRISDbits.TRISD4 = 0;
  3589   000C4C  9895               	bcf	149,4,c	;volatile
  3590                           
  3591                           ;ladder.c: 13:     TRISDbits.TRISD5 = 0;
  3592   000C4E  9A95               	bcf	149,5,c	;volatile
  3593                           
  3594                           ;ladder.c: 14:     TRISDbits.TRISD6 = 0;
  3595   000C50  9C95               	bcf	149,6,c	;volatile
  3596                           
  3597                           ;ladder.c: 15:     TRISDbits.TRISD7 = 0;
  3598   000C52  9E95               	bcf	149,7,c	;volatile
  3599                           
  3600                           ;ladder.c: 16:     LATDbits.LATD4 = 0;
  3601   000C54  988C               	bcf	140,4,c	;volatile
  3602                           
  3603                           ;ladder.c: 17:     LATDbits.LATD5 = 0;
  3604   000C56  9A8C               	bcf	140,5,c	;volatile
  3605                           
  3606                           ;ladder.c: 18:     LATDbits.LATD6 = 0;
  3607   000C58  9C8C               	bcf	140,6,c	;volatile
  3608                           
  3609                           ;ladder.c: 19:     LATDbits.LATD7 = 0;
  3610   000C5A  9E8C               	bcf	140,7,c	;volatile
  3611   000C5C  0012               	return		;funcret
  3612   000C5E                     __end_of_Initialize_Ladder:
  3613                           	callstack 0
  3614                           
  3615 ;; *************** function _Initialize_Buzzer *****************
  3616 ;; Defined at:
  3617 ;;		line 17 in file "buzzer.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;		None
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      void 
  3624 ;; Registers used:
  3625 ;;		wreg, status,2
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3631 ;;      Params:         0       0       0       0       0       0       0
  3632 ;;      Locals:         0       0       0       0       0       0       0
  3633 ;;      Temps:          0       0       0       0       0       0       0
  3634 ;;      Totals:         0       0       0       0       0       0       0
  3635 ;;Total ram usage:        0 bytes
  3636 ;; Hardware stack levels used: 1
  3637 ;; Hardware stack levels required when called: 2
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_main
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           	psect	text16
  3646   000B38                     __ptext16:
  3647                           	callstack 0
  3648   000B38                     _Initialize_Buzzer:
  3649                           	callstack 28
  3650   000B38                     
  3651                           ;buzzer.c: 20:     TRISCbits.TRISC2 = 0;
  3652   000B38  9494               	bcf	148,2,c	;volatile
  3653                           
  3654                           ;buzzer.c: 21:     LATCbits.LATC2 = 0;
  3655   000B3A  948B               	bcf	139,2,c	;volatile
  3656   000B3C                     
  3657                           ;buzzer.c: 22:     CCP1CONbits.CCP1M = 0b1100;
  3658   000B3C  50BD               	movf	189,w,c	;volatile
  3659   000B3E  0BF0               	andlw	-16
  3660   000B40  090C               	iorlw	12
  3661   000B42  6EBD               	movwf	189,c	;volatile
  3662                           
  3663                           ;buzzer.c: 23:     T2CONbits.T2CKPS = 0b11;
  3664   000B44  0E03               	movlw	3
  3665   000B46  12CA               	iorwf	202,f,c	;volatile
  3666                           
  3667                           ;buzzer.c: 24:     T2CONbits.T2OUTPS = 0b0000;
  3668   000B48  0E87               	movlw	-121
  3669   000B4A  16CA               	andwf	202,f,c	;volatile
  3670   000B4C                     
  3671                           ;buzzer.c: 25:     PR2 = 0;
  3672   000B4C  6ACB               	clrf	203,c	;volatile
  3673   000B4E                     
  3674                           ;buzzer.c: 26:     CCPR1L = 0;
  3675   000B4E  6ABE               	clrf	190,c	;volatile
  3676   000B50                     
  3677                           ;buzzer.c: 27:     T2CONbits.TMR2ON = 1;
  3678   000B50  84CA               	bsf	202,2,c	;volatile
  3679                           
  3680                           ;buzzer.c: 31:     T0CON = 0b00000101;
  3681   000B52  0E05               	movlw	5
  3682   000B54  6ED5               	movwf	213,c	;volatile
  3683   000B56                     
  3684                           ;buzzer.c: 39:     TMR0H = 0;
  3685   000B56  6AD7               	clrf	215,c	;volatile
  3686   000B58                     
  3687                           ;buzzer.c: 40:     TMR0L = 0;
  3688   000B58  6AD6               	clrf	214,c	;volatile
  3689   000B5A                     
  3690                           ;buzzer.c: 42:     INTCONbits.TMR0IF = 0;
  3691   000B5A  94F2               	bcf	242,2,c	;volatile
  3692   000B5C                     
  3693                           ;buzzer.c: 43:     INTCONbits.TMR0IE = 1;
  3694   000B5C  8AF2               	bsf	242,5,c	;volatile
  3695   000B5E                     
  3696                           ;buzzer.c: 44:     INTCONbits.PEIE = 1;
  3697   000B5E  8CF2               	bsf	242,6,c	;volatile
  3698   000B60                     
  3699                           ;buzzer.c: 45:     INTCONbits.GIE = 1;
  3700   000B60  8EF2               	bsf	242,7,c	;volatile
  3701   000B62  0012               	return		;funcret
  3702   000B64                     __end_of_Initialize_Buzzer:
  3703                           	callstack 0
  3704                           
  3705 ;; *************** function _Initialize_Bluetooth *****************
  3706 ;; Defined at:
  3707 ;;		line 19 in file "bluetooth_main.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3721 ;;      Params:         0       0       0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0       0
  3723 ;;      Temps:          0       0       0       0       0       0       0
  3724 ;;      Totals:         0       0       0       0       0       0       0
  3725 ;;Total ram usage:        0 bytes
  3726 ;; Hardware stack levels used: 1
  3727 ;; Hardware stack levels required when called: 2
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_main
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text17
  3736   000BAA                     __ptext17:
  3737                           	callstack 0
  3738   000BAA                     _Initialize_Bluetooth:
  3739                           	callstack 28
  3740   000BAA                     
  3741                           ;bluetooth_main.c: 22:     TXEN = 1;
  3742   000BAA  8C94               	bsf	3988,6,c	;volatile
  3743                           
  3744                           ;bluetooth_main.c: 23:     CREN = 1;
  3745   000BAC  8E94               	bsf	3988,7,c	;volatile
  3746                           
  3747                           ;bluetooth_main.c: 26: 
  3748   000BAE  84AC               	bsf	4012,2,c	;volatile
  3749   000BB0                     
  3750                           ;bluetooth_main.c: 27:     GIE = 0;
  3751   000BB0  0E33               	movlw	51
  3752   000BB2  6EAF               	movwf	175,c	;volatile
  3753   000BB4                     
  3754                           ;bluetooth_main.c: 30: 
  3755   000BB4  98AC               	bcf	4012,4,c	;volatile
  3756   000BB6                     
  3757                           ;bluetooth_main.c: 31:     RCIE = 0;
  3758   000BB6  8EAB               	bsf	4011,7,c	;volatile
  3759   000BB8                     
  3760                           ;bluetooth_main.c: 34: 
  3761   000BB8  9CAB               	bcf	4011,6,c	;volatile
  3762   000BBA                     
  3763                           ;bluetooth_main.c: 35: 
  3764   000BBA  9CAC               	bcf	4012,6,c	;volatile
  3765   000BBC                     
  3766                           ;bluetooth_main.c: 38:     TXREG = byte;
  3767   000BBC  8AAC               	bsf	4012,5,c	;volatile
  3768   000BBE                     
  3769                           ;bluetooth_main.c: 39:     while (!TXIF);
  3770   000BBE  88AB               	bsf	4011,4,c	;volatile
  3771   000BC0                     
  3772                           ;bluetooth_main.c: 43: 
  3773   000BC0  9EF2               	bcf	4082,7,c	;volatile
  3774   000BC2                     
  3775                           ;bluetooth_main.c: 44: void BT_load_string(char* string)
  3776   000BC2  8CF2               	bsf	4082,6,c	;volatile
  3777   000BC4                     
  3778                           ;bluetooth_main.c: 47:         BT_load_char(*string++);
  3779   000BC4  9A9D               	bcf	3997,5,c	;volatile
  3780   000BC6                     
  3781                           ;bluetooth_main.c: 48: }
  3782   000BC6  989D               	bcf	3997,4,c	;volatile
  3783   000BC8  0012               	return		;funcret
  3784   000BCA                     __end_of_Initialize_Bluetooth:
  3785                           	callstack 0
  3786                           
  3787 ;; *************** function _BT_load_string *****************
  3788 ;; Defined at:
  3789 ;;		line 60 in file "bluetooth_main.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  string          2   47[COMRAM] PTR unsigned char 
  3792 ;;		 -> STR_9(16), STR_8(15), STR_7(13), STR_6(11), 
  3793 ;;		 -> STR_5(16), STR_4(15), STR_3(15), STR_2(14), 
  3794 ;;		 -> STR_1(32), 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;		None
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3806 ;;      Params:         2       0       0       0       0       0       0
  3807 ;;      Locals:         0       0       0       0       0       0       0
  3808 ;;      Temps:          0       0       0       0       0       0       0
  3809 ;;      Totals:         2       0       0       0       0       0       0
  3810 ;;Total ram usage:        2 bytes
  3811 ;; Hardware stack levels used: 1
  3812 ;; Hardware stack levels required when called: 3
  3813 ;; This function calls:
  3814 ;;		_BT_load_char
  3815 ;; This function is called by:
  3816 ;;		_main
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text18
  3821   000B02                     __ptext18:
  3822                           	callstack 0
  3823   000B02                     _BT_load_string:
  3824                           	callstack 27
  3825   000B02                     
  3826                           ;bluetooth_main.c: 60: ;bluetooth_main.c: 61:     if (OERR);bluetooth_main.c: 62:     {
  3827   000B02  EF8D  F005         	goto	l1768
  3828   000B06                     l1764:
  3829                           
  3830                           ;bluetooth_main.c: 63:         CREN = 0;
  3831   000B06  C030  FFF6         	movff	BT_load_string@string,tblptrl
  3832   000B0A  C031  FFF7         	movff	BT_load_string@string+1,tblptrh
  3833   000B0E                     	if	0	;tblptru may be non-zero
  3834   000B0E                     	endif
  3835   000B0E                     	if	0	;tblptru may be non-zero
  3836   000B0E                     	endif
  3837   000B0E  0008               	tblrd		*
  3838   000B10  50F5               	movf	tablat,w,c
  3839   000B12  ECB2  F005         	call	_BT_load_char
  3840   000B16  4A30               	infsnz	BT_load_string@string^0,f,c
  3841   000B18  2A31               	incf	(BT_load_string@string+1)^0,f,c
  3842   000B1A                     l1768:
  3843                           
  3844                           ;bluetooth_main.c: 62:     {
  3845   000B1A  C030  FFF6         	movff	BT_load_string@string,tblptrl
  3846   000B1E  C031  FFF7         	movff	BT_load_string@string+1,tblptrh
  3847   000B22                     	if	0	;tblptru may be non-zero
  3848   000B22                     	endif
  3849   000B22                     	if	0	;tblptru may be non-zero
  3850   000B22                     	endif
  3851   000B22  0008               	tblrd		*
  3852   000B24  50F5               	movf	tablat,w,c
  3853   000B26  0900               	iorlw	0
  3854   000B28  A4D8               	btfss	status,2,c
  3855   000B2A  EF99  F005         	goto	u871
  3856   000B2E  EF9B  F005         	goto	u870
  3857   000B32                     u871:
  3858   000B32  EF83  F005         	goto	l1764
  3859   000B36                     u870:
  3860   000B36  0012               	return		;funcret
  3861   000B38                     __end_of_BT_load_string:
  3862                           	callstack 0
  3863                           
  3864 ;; *************** function _BT_load_char *****************
  3865 ;; Defined at:
  3866 ;;		line 52 in file "bluetooth_main.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  byte            1    wreg     unsigned char 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  byte            1   46[COMRAM] unsigned char 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3880 ;;      Params:         0       0       0       0       0       0       0
  3881 ;;      Locals:         1       0       0       0       0       0       0
  3882 ;;      Temps:          0       0       0       0       0       0       0
  3883 ;;      Totals:         1       0       0       0       0       0       0
  3884 ;;Total ram usage:        1 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; Hardware stack levels required when called: 2
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_BT_load_string
  3891 ;;		_main
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text19
  3896   000B64                     __ptext19:
  3897                           	callstack 0
  3898   000B64                     _BT_load_char:
  3899                           	callstack 27
  3900                           
  3901                           ;incstack = 0
  3902                           ;BT_load_char@byte stored from wreg
  3903   000B64  6E2F               	movwf	BT_load_char@byte^0,c
  3904   000B66                     
  3905                           ;bluetooth_main.c: 52: {;bluetooth_main.c: 53:     TXREG = 13;;bluetooth_main.c: 54: 
  3906   000B66  C02F  FFAD         	movff	BT_load_char@byte,4013	;volatile
  3907   000B6A                     l74:
  3908   000B6A  A89E               	btfss	3998,4,c	;volatile
  3909   000B6C  EFBA  F005         	goto	u771
  3910   000B70  EFBC  F005         	goto	u770
  3911   000B74                     u771:
  3912   000B74  EFB5  F005         	goto	l74
  3913   000B78                     u770:
  3914   000B78                     l77:
  3915   000B78  A2AC               	btfss	4012,1,c	;volatile
  3916   000B7A  EFC1  F005         	goto	u781
  3917   000B7E  EFC3  F005         	goto	u780
  3918   000B82                     u781:
  3919   000B82  EFBC  F005         	goto	l77
  3920   000B86                     u780:
  3921   000B86  0012               	return		;funcret
  3922   000B88                     __end_of_BT_load_char:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function _BT_get_char *****************
  3926 ;; Defined at:
  3927 ;;		line 74 in file "bluetooth_main.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      unsigned char 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3941 ;;      Params:         0       0       0       0       0       0       0
  3942 ;;      Locals:         0       0       0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0
  3944 ;;      Totals:         0       0       0       0       0       0       0
  3945 ;;Total ram usage:        0 bytes
  3946 ;; Hardware stack levels used: 1
  3947 ;; Hardware stack levels required when called: 2
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_main
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text20
  3956   000A94                     __ptext20:
  3957                           	callstack 0
  3958   000A94                     _BT_get_char:
  3959                           	callstack 28
  3960   000A94                     
  3961                           ;bluetooth_main.c: 77:         return 0;
  3962   000A94  A2AB               	btfss	4011,1,c	;volatile
  3963   000A96  EF4F  F005         	goto	u891
  3964   000A9A  EF51  F005         	goto	u890
  3965   000A9E                     u891:
  3966   000A9E  EF53  F005         	goto	l95
  3967   000AA2                     u890:
  3968   000AA2                     
  3969                           ;bluetooth_main.c: 78: };bluetooth_main.c: 79: 
  3970   000AA2  98AB               	bcf	4011,4,c	;volatile
  3971                           
  3972                           ;bluetooth_main.c: 80: void main(void)
  3973   000AA4  88AB               	bsf	4011,4,c	;volatile
  3974   000AA6                     l95:
  3975                           
  3976                           ;bluetooth_main.c: 84: 
  3977   000AA6  AA9E               	btfss	3998,5,c	;volatile
  3978   000AA8  EF58  F005         	goto	u901
  3979   000AAC  EF5A  F005         	goto	u900
  3980   000AB0                     u901:
  3981   000AB0  EF64  F005         	goto	l1784
  3982   000AB4                     u900:
  3983   000AB4                     l97:
  3984   000AB4  AA9E               	btfss	3998,5,c	;volatile
  3985   000AB6  EF5F  F005         	goto	u911
  3986   000ABA  EF61  F005         	goto	u910
  3987   000ABE                     u911:
  3988   000ABE  EF5A  F005         	goto	l97
  3989   000AC2                     u910:
  3990   000AC2                     
  3991                           ;bluetooth_main.c: 90: 
  3992   000AC2  50AE               	movf	174,w,c	;volatile
  3993   000AC4  EF65  F005         	goto	l100
  3994   000AC8                     l1784:
  3995                           
  3996                           ;bluetooth_main.c: 93:     broadcast_BT();
  3997   000AC8  0E00               	movlw	0
  3998   000ACA                     l100:
  3999   000ACA  0012               	return		;funcret
  4000   000ACC                     __end_of_BT_get_char:
  4001                           	callstack 0
  4002                           
  4003 ;; *************** function _ISR *****************
  4004 ;; Defined at:
  4005 ;;		line 56 in file "buzzer.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;		None
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  duration        2   38[COMRAM] int 
  4010 ;;  duration        2   36[COMRAM] int 
  4011 ;;  pause_time      2   40[COMRAM] int 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4021 ;;      Params:         0       0       0       0       0       0       0
  4022 ;;      Locals:        10       0       0       0       0       0       0
  4023 ;;      Temps:         10       0       0       0       0       0       0
  4024 ;;      Totals:        20       0       0       0       0       0       0
  4025 ;;Total ram usage:       20 bytes
  4026 ;; Hardware stack levels used: 1
  4027 ;; Hardware stack levels required when called: 1
  4028 ;; This function calls:
  4029 ;;		i2___aldiv
  4030 ;;		i2___lmul
  4031 ;; This function is called by:
  4032 ;;		Interrupt level 2
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	intcode
  4037   000008                     __pintcode:
  4038                           	callstack 0
  4039   000008                     _ISR:
  4040                           	callstack 27
  4041                           
  4042                           ;incstack = 0
  4043   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4044   00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
  4045                           
  4046                           	psect	intcode_body
  4047   000012                     __pintcode_body:
  4048                           	callstack 27
  4049   000012                     int_func:
  4050                           	callstack 27
  4051   000012  0006               	pop		; remove dummy address from shadow register refresh
  4052   000014  CFF3 F01F          	movff	prodl,??_ISR+4
  4053   000018  CFF4 F020          	movff	prodh,??_ISR+5
  4054   00001C  CFF6 F021          	movff	tblptrl,??_ISR+6
  4055   000020  CFF7 F022          	movff	tblptrh,??_ISR+7
  4056   000024  CFF8 F023          	movff	tblptru,??_ISR+8
  4057   000028  CFF5 F024          	movff	tablat,??_ISR+9
  4058   00002C                     
  4059                           ;buzzer.c: 58:     if (INTCONbits.TMR0IF)
  4060   00002C  A4F2               	btfss	242,2,c	;volatile
  4061   00002E  EF1B  F000         	goto	i2u73_41
  4062   000032  EF1D  F000         	goto	i2u73_40
  4063   000036                     i2u73_41:
  4064   000036  EF7E  F001         	goto	i2l226
  4065   00003A                     i2u73_40:
  4066   00003A                     
  4067                           ;buzzer.c: 59:     {;buzzer.c: 60:         INTCONbits.TMR0IF = 0;
  4068   00003A  94F2               	bcf	242,2,c	;volatile
  4069   00003C                     
  4070                           ;buzzer.c: 62:         if (playing)
  4071   00003C  5043               	movf	_playing^0,w,c
  4072   00003E  1044               	iorwf	(_playing+1)^0,w,c
  4073   000040  B4D8               	btfsc	status,2,c
  4074   000042  EF25  F000         	goto	i2u74_41
  4075   000046  EF27  F000         	goto	i2u74_40
  4076   00004A                     i2u74_41:
  4077   00004A  EF7E  F001         	goto	i2l226
  4078   00004E                     i2u74_40:
  4079   00004E                     
  4080                           ;buzzer.c: 63:         {;buzzer.c: 64:             if (is_pause)
  4081   00004E  5041               	movf	_is_pause^0,w,c
  4082   000050  1042               	iorwf	(_is_pause+1)^0,w,c
  4083   000052  B4D8               	btfsc	status,2,c
  4084   000054  EF2E  F000         	goto	i2u75_41
  4085   000058  EF30  F000         	goto	i2u75_40
  4086   00005C                     i2u75_41:
  4087   00005C  EF2D  F001         	goto	i2l1666
  4088   000060                     i2u75_40:
  4089   000060                     
  4090                           ;buzzer.c: 65:             {;buzzer.c: 67:                 is_pause = 0;
  4091   000060  0E00               	movlw	0
  4092   000062  6E42               	movwf	(_is_pause+1)^0,c
  4093   000064  0E00               	movlw	0
  4094   000066  6E41               	movwf	_is_pause^0,c
  4095   000068                     
  4096                           ;buzzer.c: 68:                 current_note++;
  4097   000068  4A45               	infsnz	_current_note^0,f,c
  4098   00006A  2A46               	incf	(_current_note+1)^0,f,c
  4099   00006C                     
  4100                           ;buzzer.c: 69:                 if (current_note >= current_melody_length)
  4101   00006C  5047               	movf	_current_melody_length^0,w,c
  4102   00006E  5C45               	subwf	_current_note^0,w,c
  4103   000070  5046               	movf	(_current_note+1)^0,w,c
  4104   000072  0A80               	xorlw	128
  4105   000074  6E1B               	movwf	??_ISR^0,c
  4106   000076  5048               	movf	(_current_melody_length+1)^0,w,c
  4107   000078  0A80               	xorlw	128
  4108   00007A  581B               	subwfb	??_ISR^0,w,c
  4109   00007C  A0D8               	btfss	status,0,c
  4110   00007E  EF43  F000         	goto	i2u76_41
  4111   000082  EF45  F000         	goto	i2u76_40
  4112   000086                     i2u76_41:
  4113   000086  EFC8  F000         	goto	i2l1656
  4114   00008A                     i2u76_40:
  4115   00008A                     
  4116                           ;buzzer.c: 70:                 {;buzzer.c: 71:                     current_note = 0;
  4117   00008A  0E00               	movlw	0
  4118   00008C  6E46               	movwf	(_current_note+1)^0,c
  4119   00008E  0E00               	movlw	0
  4120   000090  6E45               	movwf	_current_note^0,c
  4121   000092                     
  4122                           ;buzzer.c: 73:                     PR2 = current_melody[current_note][0];
  4123   000092  0E06               	movlw	6
  4124   000094  0245               	mulwf	_current_note^0,c
  4125   000096  CFF3 F01B          	movff	prodl,??_ISR
  4126   00009A  CFF4 F01C          	movff	prodh,??_ISR+1
  4127   00009E  0246               	mulwf	(_current_note+1)^0,c
  4128   0000A0  50F3               	movf	prodl,w,c
  4129   0000A2  261C               	addwf	(??_ISR+1)^0,f,c
  4130   0000A4  501B               	movf	??_ISR^0,w,c
  4131   0000A6  2449               	addwf	_current_melody^0,w,c
  4132   0000A8  6E1D               	movwf	(??_ISR+2)^0,c
  4133   0000AA  501C               	movf	(??_ISR+1)^0,w,c
  4134   0000AC  204A               	addwfc	(_current_melody+1)^0,w,c
  4135   0000AE  6E1E               	movwf	(??_ISR+3)^0,c
  4136   0000B0  C01D  FFF6         	movff	??_ISR+2,tblptrl
  4137   0000B4  C01E  FFF7         	movff	??_ISR+3,tblptrh
  4138   0000B8                     	if	0	;tblptru may be non-zero
  4139   0000B8                     	endif
  4140   0000B8                     	if	0	;tblptru may be non-zero
  4141   0000B8                     	endif
  4142   0000B8  0008               	tblrd		*
  4143   0000BA  CFF5 FFCB          	movff	tablat,4043	;volatile
  4144   0000BE                     
  4145                           ;buzzer.c: 74:                     CCPR1L = PR2 >> 4;
  4146   0000BE  38CB               	swapf	203,w,c	;volatile
  4147   0000C0  0B0F               	andlw	15
  4148   0000C2  6EBE               	movwf	190,c	;volatile
  4149   0000C4                     
  4150                           ;buzzer.c: 77:                     int duration = current_melody[current_note][1];
  4151   0000C4  0E06               	movlw	6
  4152   0000C6  0245               	mulwf	_current_note^0,c
  4153   0000C8  CFF3 F01B          	movff	prodl,??_ISR
  4154   0000CC  CFF4 F01C          	movff	prodh,??_ISR+1
  4155   0000D0  0246               	mulwf	(_current_note+1)^0,c
  4156   0000D2  50F3               	movf	prodl,w,c
  4157   0000D4  261C               	addwf	(??_ISR+1)^0,f,c
  4158   0000D6  501B               	movf	??_ISR^0,w,c
  4159   0000D8  2449               	addwf	_current_melody^0,w,c
  4160   0000DA  6E1D               	movwf	(??_ISR+2)^0,c
  4161   0000DC  501C               	movf	(??_ISR+1)^0,w,c
  4162   0000DE  204A               	addwfc	(_current_melody+1)^0,w,c
  4163   0000E0  6E1E               	movwf	(??_ISR+3)^0,c
  4164   0000E2  0E02               	movlw	2
  4165   0000E4  261D               	addwf	(??_ISR+2)^0,f,c
  4166   0000E6  0E00               	movlw	0
  4167   0000E8  221E               	addwfc	(??_ISR+3)^0,f,c
  4168   0000EA  C01D  FFF6         	movff	??_ISR+2,tblptrl
  4169   0000EE  C01E  FFF7         	movff	??_ISR+3,tblptrh
  4170   0000F2                     	if	0	;tblptru may be non-zero
  4171   0000F2                     	endif
  4172   0000F2                     	if	0	;tblptru may be non-zero
  4173   0000F2                     	endif
  4174   0000F2  0009               	tblrd		*+
  4175   0000F4  CFF5 F025          	movff	tablat,ISR@duration
  4176   0000F8  000A               	tblrd		*-
  4177   0000FA  CFF5 F026          	movff	tablat,ISR@duration+1
  4178   0000FE                     
  4179                           ;buzzer.c: 78:                     TMR0 = 65536 - (duration * (8000000 / 4) / 32 / 1000)
      +                          ;
  4180   0000FE  0E20               	movlw	32
  4181   000100  6E11               	movwf	i2___aldiv@divisor^0,c
  4182   000102  0E00               	movlw	0
  4183   000104  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
  4184   000106  0E00               	movlw	0
  4185   000108  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
  4186   00010A  0E00               	movlw	0
  4187   00010C  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
  4188   00010E  C025  F001         	movff	ISR@duration,i2___lmul@multiplier
  4189   000112  C026  F002         	movff	ISR@duration+1,i2___lmul@multiplier+1
  4190   000116  0E00               	movlw	0
  4191   000118  BE02               	btfsc	(i2___lmul@multiplier+1)^0,7,c
  4192   00011A  0EFF               	movlw	-1
  4193   00011C  6E03               	movwf	(i2___lmul@multiplier+2)^0,c
  4194   00011E  6E04               	movwf	(i2___lmul@multiplier+3)^0,c
  4195   000120  0E80               	movlw	128
  4196   000122  6E05               	movwf	i2___lmul@multiplicand^0,c
  4197   000124  0E84               	movlw	132
  4198   000126  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
  4199   000128  0E1E               	movlw	30
  4200   00012A  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
  4201   00012C  0E00               	movlw	0
  4202   00012E  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
  4203   000130  ECEC  F004         	call	i2___lmul	;wreg free
  4204   000134  C001  F00D         	movff	?i2___lmul,i2___aldiv@dividend
  4205   000138  C002  F00E         	movff	?i2___lmul+1,i2___aldiv@dividend+1
  4206   00013C  C003  F00F         	movff	?i2___lmul+2,i2___aldiv@dividend+2
  4207   000140  C004  F010         	movff	?i2___lmul+3,i2___aldiv@dividend+3
  4208   000144  ECA4  F003         	call	i2___aldiv	;wreg free
  4209   000148  C00D  F02B         	movff	?i2___aldiv,_ISR$1544
  4210   00014C  C00E  F02C         	movff	?i2___aldiv+1,_ISR$1544+1
  4211   000150  C00F  F02D         	movff	?i2___aldiv+2,_ISR$1544+2
  4212   000154  C010  F02E         	movff	?i2___aldiv+3,_ISR$1544+3
  4213   000158                     i2l1654:
  4214                           
  4215                           ;buzzer.c: 78:                     TMR0 = 65536 - (duration * (8000000 / 4) / 32 / 1000)
      +                          ;
  4216   000158  C02B  F00D         	movff	_ISR$1544,i2___aldiv@dividend
  4217   00015C  C02C  F00E         	movff	_ISR$1544+1,i2___aldiv@dividend+1
  4218   000160  C02D  F00F         	movff	_ISR$1544+2,i2___aldiv@dividend+2
  4219   000164  C02E  F010         	movff	_ISR$1544+3,i2___aldiv@dividend+3
  4220   000168  0EE8               	movlw	232
  4221   00016A  6E11               	movwf	i2___aldiv@divisor^0,c
  4222   00016C  0E03               	movlw	3
  4223   00016E  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
  4224   000170  0E00               	movlw	0
  4225   000172  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
  4226   000174  0E00               	movlw	0
  4227   000176  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
  4228   000178  ECA4  F003         	call	i2___aldiv	;wreg free
  4229   00017C  500D               	movf	?i2___aldiv^0,w,c
  4230   00017E  0800               	sublw	0
  4231   000180  6ED6               	movwf	214,c	;volatile
  4232   000182  500E               	movf	(?i2___aldiv+1)^0,w,c
  4233   000184  A0D8               	btfss	status,0,c
  4234   000186  2AE8               	incf	wreg,f,c
  4235   000188  0800               	sublw	0
  4236   00018A  6ED7               	movwf	215,c	;volatile
  4237                           
  4238                           ;buzzer.c: 79:                 }
  4239   00018C  EF7E  F001         	goto	i2l226
  4240   000190                     i2l1656:
  4241                           
  4242                           ;buzzer.c: 81:                 {;buzzer.c: 83:                     PR2 = current_melody[
      +                          current_note][0];
  4243   000190  0E06               	movlw	6
  4244   000192  0245               	mulwf	_current_note^0,c
  4245   000194  CFF3 F01B          	movff	prodl,??_ISR
  4246   000198  CFF4 F01C          	movff	prodh,??_ISR+1
  4247   00019C  0246               	mulwf	(_current_note+1)^0,c
  4248   00019E  50F3               	movf	prodl,w,c
  4249   0001A0  261C               	addwf	(??_ISR+1)^0,f,c
  4250   0001A2  501B               	movf	??_ISR^0,w,c
  4251   0001A4  2449               	addwf	_current_melody^0,w,c
  4252   0001A6  6E1D               	movwf	(??_ISR+2)^0,c
  4253   0001A8  501C               	movf	(??_ISR+1)^0,w,c
  4254   0001AA  204A               	addwfc	(_current_melody+1)^0,w,c
  4255   0001AC  6E1E               	movwf	(??_ISR+3)^0,c
  4256   0001AE  C01D  FFF6         	movff	??_ISR+2,tblptrl
  4257   0001B2  C01E  FFF7         	movff	??_ISR+3,tblptrh
  4258   0001B6                     	if	0	;tblptru may be non-zero
  4259   0001B6                     	endif
  4260   0001B6                     	if	0	;tblptru may be non-zero
  4261   0001B6                     	endif
  4262   0001B6  0008               	tblrd		*
  4263   0001B8  CFF5 FFCB          	movff	tablat,4043	;volatile
  4264   0001BC                     
  4265                           ;buzzer.c: 84:                     CCPR1L = PR2 >> 4;
  4266   0001BC  38CB               	swapf	203,w,c	;volatile
  4267   0001BE  0B0F               	andlw	15
  4268   0001C0  6EBE               	movwf	190,c	;volatile
  4269   0001C2                     
  4270                           ;buzzer.c: 87:                     int duration = current_melody[current_note][1];
  4271   0001C2  0E06               	movlw	6
  4272   0001C4  0245               	mulwf	_current_note^0,c
  4273   0001C6  CFF3 F01B          	movff	prodl,??_ISR
  4274   0001CA  CFF4 F01C          	movff	prodh,??_ISR+1
  4275   0001CE  0246               	mulwf	(_current_note+1)^0,c
  4276   0001D0  50F3               	movf	prodl,w,c
  4277   0001D2  261C               	addwf	(??_ISR+1)^0,f,c
  4278   0001D4  501B               	movf	??_ISR^0,w,c
  4279   0001D6  2449               	addwf	_current_melody^0,w,c
  4280   0001D8  6E1D               	movwf	(??_ISR+2)^0,c
  4281   0001DA  501C               	movf	(??_ISR+1)^0,w,c
  4282   0001DC  204A               	addwfc	(_current_melody+1)^0,w,c
  4283   0001DE  6E1E               	movwf	(??_ISR+3)^0,c
  4284   0001E0  0E02               	movlw	2
  4285   0001E2  261D               	addwf	(??_ISR+2)^0,f,c
  4286   0001E4  0E00               	movlw	0
  4287   0001E6  221E               	addwfc	(??_ISR+3)^0,f,c
  4288   0001E8  C01D  FFF6         	movff	??_ISR+2,tblptrl
  4289   0001EC  C01E  FFF7         	movff	??_ISR+3,tblptrh
  4290   0001F0                     	if	0	;tblptru may be non-zero
  4291   0001F0                     	endif
  4292   0001F0                     	if	0	;tblptru may be non-zero
  4293   0001F0                     	endif
  4294   0001F0  0009               	tblrd		*+
  4295   0001F2  CFF5 F027          	movff	tablat,ISR@duration_829
  4296   0001F6  000A               	tblrd		*-
  4297   0001F8  CFF5 F028          	movff	tablat,ISR@duration_829+1
  4298   0001FC                     
  4299                           ;buzzer.c: 88:                     TMR0 = 65536 - (duration * (8000000 / 4) / 32 / 1000)
      +                          ;
  4300   0001FC  0E20               	movlw	32
  4301   0001FE  6E11               	movwf	i2___aldiv@divisor^0,c
  4302   000200  0E00               	movlw	0
  4303   000202  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
  4304   000204  0E00               	movlw	0
  4305   000206  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
  4306   000208  0E00               	movlw	0
  4307   00020A  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
  4308   00020C  C027  F001         	movff	ISR@duration_829,i2___lmul@multiplier
  4309   000210  C028  F002         	movff	ISR@duration_829+1,i2___lmul@multiplier+1
  4310   000214  0E00               	movlw	0
  4311   000216  BE02               	btfsc	(i2___lmul@multiplier+1)^0,7,c
  4312   000218  0EFF               	movlw	-1
  4313   00021A  6E03               	movwf	(i2___lmul@multiplier+2)^0,c
  4314   00021C  6E04               	movwf	(i2___lmul@multiplier+3)^0,c
  4315   00021E  0E80               	movlw	128
  4316   000220  6E05               	movwf	i2___lmul@multiplicand^0,c
  4317   000222  0E84               	movlw	132
  4318   000224  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
  4319   000226  0E1E               	movlw	30
  4320   000228  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
  4321   00022A  0E00               	movlw	0
  4322   00022C  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
  4323   00022E  ECEC  F004         	call	i2___lmul	;wreg free
  4324   000232  C001  F00D         	movff	?i2___lmul,i2___aldiv@dividend
  4325   000236  C002  F00E         	movff	?i2___lmul+1,i2___aldiv@dividend+1
  4326   00023A  C003  F00F         	movff	?i2___lmul+2,i2___aldiv@dividend+2
  4327   00023E  C004  F010         	movff	?i2___lmul+3,i2___aldiv@dividend+3
  4328   000242  ECA4  F003         	call	i2___aldiv	;wreg free
  4329   000246  C00D  F02B         	movff	?i2___aldiv,_ISR$1544
  4330   00024A  C00E  F02C         	movff	?i2___aldiv+1,_ISR$1544+1
  4331   00024E  C00F  F02D         	movff	?i2___aldiv+2,_ISR$1544+2
  4332   000252  C010  F02E         	movff	?i2___aldiv+3,_ISR$1544+3
  4333   000256  EFAC  F000         	goto	i2l1654
  4334   00025A                     i2l1666:
  4335                           
  4336                           ;buzzer.c: 92:             {;buzzer.c: 94:                 is_pause = 1;
  4337   00025A  0E00               	movlw	0
  4338   00025C  6E42               	movwf	(_is_pause+1)^0,c
  4339   00025E  0E01               	movlw	1
  4340   000260  6E41               	movwf	_is_pause^0,c
  4341   000262                     
  4342                           ;buzzer.c: 95:                 CCPR1L = 0;
  4343   000262  6ABE               	clrf	190,c	;volatile
  4344   000264                     
  4345                           ;buzzer.c: 98:                 int pause_time = current_melody[current_note][2];
  4346   000264  0E06               	movlw	6
  4347   000266  0245               	mulwf	_current_note^0,c
  4348   000268  CFF3 F01B          	movff	prodl,??_ISR
  4349   00026C  CFF4 F01C          	movff	prodh,??_ISR+1
  4350   000270  0246               	mulwf	(_current_note+1)^0,c
  4351   000272  50F3               	movf	prodl,w,c
  4352   000274  261C               	addwf	(??_ISR+1)^0,f,c
  4353   000276  501B               	movf	??_ISR^0,w,c
  4354   000278  2449               	addwf	_current_melody^0,w,c
  4355   00027A  6E1D               	movwf	(??_ISR+2)^0,c
  4356   00027C  501C               	movf	(??_ISR+1)^0,w,c
  4357   00027E  204A               	addwfc	(_current_melody+1)^0,w,c
  4358   000280  6E1E               	movwf	(??_ISR+3)^0,c
  4359   000282  0E04               	movlw	4
  4360   000284  261D               	addwf	(??_ISR+2)^0,f,c
  4361   000286  0E00               	movlw	0
  4362   000288  221E               	addwfc	(??_ISR+3)^0,f,c
  4363   00028A  C01D  FFF6         	movff	??_ISR+2,tblptrl
  4364   00028E  C01E  FFF7         	movff	??_ISR+3,tblptrh
  4365   000292                     	if	0	;tblptru may be non-zero
  4366   000292                     	endif
  4367   000292                     	if	0	;tblptru may be non-zero
  4368   000292                     	endif
  4369   000292  0009               	tblrd		*+
  4370   000294  CFF5 F029          	movff	tablat,ISR@pause_time
  4371   000298  000A               	tblrd		*-
  4372   00029A  CFF5 F02A          	movff	tablat,ISR@pause_time+1
  4373   00029E                     
  4374                           ;buzzer.c: 99:                 TMR0 = 65536 - (pause_time * (8000000 / 4) / 32 / 1000);
  4375   00029E  0E20               	movlw	32
  4376   0002A0  6E11               	movwf	i2___aldiv@divisor^0,c
  4377   0002A2  0E00               	movlw	0
  4378   0002A4  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
  4379   0002A6  0E00               	movlw	0
  4380   0002A8  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
  4381   0002AA  0E00               	movlw	0
  4382   0002AC  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
  4383   0002AE  C029  F001         	movff	ISR@pause_time,i2___lmul@multiplier
  4384   0002B2  C02A  F002         	movff	ISR@pause_time+1,i2___lmul@multiplier+1
  4385   0002B6  0E00               	movlw	0
  4386   0002B8  BE02               	btfsc	(i2___lmul@multiplier+1)^0,7,c
  4387   0002BA  0EFF               	movlw	-1
  4388   0002BC  6E03               	movwf	(i2___lmul@multiplier+2)^0,c
  4389   0002BE  6E04               	movwf	(i2___lmul@multiplier+3)^0,c
  4390   0002C0  0E80               	movlw	128
  4391   0002C2  6E05               	movwf	i2___lmul@multiplicand^0,c
  4392   0002C4  0E84               	movlw	132
  4393   0002C6  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
  4394   0002C8  0E1E               	movlw	30
  4395   0002CA  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
  4396   0002CC  0E00               	movlw	0
  4397   0002CE  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
  4398   0002D0  ECEC  F004         	call	i2___lmul	;wreg free
  4399   0002D4  C001  F00D         	movff	?i2___lmul,i2___aldiv@dividend
  4400   0002D8  C002  F00E         	movff	?i2___lmul+1,i2___aldiv@dividend+1
  4401   0002DC  C003  F00F         	movff	?i2___lmul+2,i2___aldiv@dividend+2
  4402   0002E0  C004  F010         	movff	?i2___lmul+3,i2___aldiv@dividend+3
  4403   0002E4  ECA4  F003         	call	i2___aldiv	;wreg free
  4404   0002E8  C00D  F02B         	movff	?i2___aldiv,_ISR$1544
  4405   0002EC  C00E  F02C         	movff	?i2___aldiv+1,_ISR$1544+1
  4406   0002F0  C00F  F02D         	movff	?i2___aldiv+2,_ISR$1544+2
  4407   0002F4  C010  F02E         	movff	?i2___aldiv+3,_ISR$1544+3
  4408   0002F8  EFAC  F000         	goto	i2l1654
  4409   0002FC                     i2l226:
  4410   0002FC  C024  FFF5         	movff	??_ISR+9,tablat
  4411   000300  C023  FFF8         	movff	??_ISR+8,tblptru
  4412   000304  C022  FFF7         	movff	??_ISR+7,tblptrh
  4413   000308  C021  FFF6         	movff	??_ISR+6,tblptrl
  4414   00030C  C020  FFF4         	movff	??_ISR+5,prodh
  4415   000310  C01F  FFF3         	movff	??_ISR+4,prodl
  4416   000314  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4417   000316  0011               	retfie		f
  4418   000318                     __end_of_ISR:
  4419                           	callstack 0
  4420                           
  4421 ;; *************** function i2___lmul *****************
  4422 ;; Defined at:
  4423 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  multiplier      4    0[COMRAM] unsigned long 
  4426 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  product         4    8[COMRAM] unsigned long 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  4    0[COMRAM] unsigned long 
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4438 ;;      Params:         8       0       0       0       0       0       0
  4439 ;;      Locals:         4       0       0       0       0       0       0
  4440 ;;      Temps:          0       0       0       0       0       0       0
  4441 ;;      Totals:        12       0       0       0       0       0       0
  4442 ;;Total ram usage:       12 bytes
  4443 ;; Hardware stack levels used: 1
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_ISR
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text22
  4452   0009D8                     __ptext22:
  4453                           	callstack 0
  4454   0009D8                     i2___lmul:
  4455                           	callstack 27
  4456   0009D8  0E00               	movlw	0
  4457   0009DA  6E09               	movwf	i2___lmul@product^0,c
  4458   0009DC  0E00               	movlw	0
  4459   0009DE  6E0A               	movwf	(i2___lmul@product+1)^0,c
  4460   0009E0  0E00               	movlw	0
  4461   0009E2  6E0B               	movwf	(i2___lmul@product+2)^0,c
  4462   0009E4  0E00               	movlw	0
  4463   0009E6  6E0C               	movwf	(i2___lmul@product+3)^0,c
  4464   0009E8                     i2l1480:
  4465   0009E8  A001               	btfss	i2___lmul@multiplier^0,0,c
  4466   0009EA  EFF9  F004         	goto	i2u56_41
  4467   0009EE  EFFB  F004         	goto	i2u56_40
  4468   0009F2                     i2u56_41:
  4469   0009F2  EF03  F005         	goto	i2l1484
  4470   0009F6                     i2u56_40:
  4471   0009F6  5005               	movf	i2___lmul@multiplicand^0,w,c
  4472   0009F8  2609               	addwf	i2___lmul@product^0,f,c
  4473   0009FA  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
  4474   0009FC  220A               	addwfc	(i2___lmul@product+1)^0,f,c
  4475   0009FE  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
  4476   000A00  220B               	addwfc	(i2___lmul@product+2)^0,f,c
  4477   000A02  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
  4478   000A04  220C               	addwfc	(i2___lmul@product+3)^0,f,c
  4479   000A06                     i2l1484:
  4480   000A06  90D8               	bcf	status,0,c
  4481   000A08  3605               	rlcf	i2___lmul@multiplicand^0,f,c
  4482   000A0A  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
  4483   000A0C  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
  4484   000A0E  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
  4485   000A10  90D8               	bcf	status,0,c
  4486   000A12  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
  4487   000A14  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
  4488   000A16  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
  4489   000A18  3201               	rrcf	i2___lmul@multiplier^0,f,c
  4490   000A1A  5001               	movf	i2___lmul@multiplier^0,w,c
  4491   000A1C  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
  4492   000A1E  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
  4493   000A20  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
  4494   000A22  A4D8               	btfss	status,2,c
  4495   000A24  EF16  F005         	goto	i2u57_41
  4496   000A28  EF18  F005         	goto	i2u57_40
  4497   000A2C                     i2u57_41:
  4498   000A2C  EFF4  F004         	goto	i2l1480
  4499   000A30                     i2u57_40:
  4500   000A30  C009  F001         	movff	i2___lmul@product,?i2___lmul
  4501   000A34  C00A  F002         	movff	i2___lmul@product+1,?i2___lmul+1
  4502   000A38  C00B  F003         	movff	i2___lmul@product+2,?i2___lmul+2
  4503   000A3C  C00C  F004         	movff	i2___lmul@product+3,?i2___lmul+3
  4504   000A40  0012               	return		;funcret
  4505   000A42                     __end_ofi2___lmul:
  4506                           	callstack 0
  4507                           
  4508 ;; *************** function i2___aldiv *****************
  4509 ;; Defined at:
  4510 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  dividend        4   12[COMRAM] long 
  4513 ;;  divisor         4   16[COMRAM] long 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  quotient        4   22[COMRAM] long 
  4516 ;;  sign            1   21[COMRAM] unsigned char 
  4517 ;;  counter         1   20[COMRAM] unsigned char 
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  4   12[COMRAM] long 
  4520 ;; Registers used:
  4521 ;;		wreg, status,2, status,0
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4527 ;;      Params:         8       0       0       0       0       0       0
  4528 ;;      Locals:         6       0       0       0       0       0       0
  4529 ;;      Temps:          0       0       0       0       0       0       0
  4530 ;;      Totals:        14       0       0       0       0       0       0
  4531 ;;Total ram usage:       14 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; This function calls:
  4534 ;;		Nothing
  4535 ;; This function is called by:
  4536 ;;		_ISR
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text23
  4541   000748                     __ptext23:
  4542                           	callstack 0
  4543   000748                     i2___aldiv:
  4544                           	callstack 27
  4545   000748  6A16               	clrf	i2___aldiv@sign^0,c
  4546   00074A  BE14               	btfsc	(i2___aldiv@divisor+3)^0,7,c
  4547   00074C  EFAC  F003         	goto	i2u58_40
  4548   000750  EFAA  F003         	goto	i2u58_41
  4549   000754                     i2u58_41:
  4550   000754  EFB6  F003         	goto	i2l1496
  4551   000758                     i2u58_40:
  4552   000758  1E14               	comf	(i2___aldiv@divisor+3)^0,f,c
  4553   00075A  1E13               	comf	(i2___aldiv@divisor+2)^0,f,c
  4554   00075C  1E12               	comf	(i2___aldiv@divisor+1)^0,f,c
  4555   00075E  6C11               	negf	i2___aldiv@divisor^0,c
  4556   000760  0E00               	movlw	0
  4557   000762  2212               	addwfc	(i2___aldiv@divisor+1)^0,f,c
  4558   000764  2213               	addwfc	(i2___aldiv@divisor+2)^0,f,c
  4559   000766  2214               	addwfc	(i2___aldiv@divisor+3)^0,f,c
  4560   000768  0E01               	movlw	1
  4561   00076A  6E16               	movwf	i2___aldiv@sign^0,c
  4562   00076C                     i2l1496:
  4563   00076C  BE10               	btfsc	(i2___aldiv@dividend+3)^0,7,c
  4564   00076E  EFBD  F003         	goto	i2u59_40
  4565   000772  EFBB  F003         	goto	i2u59_41
  4566   000776                     i2u59_41:
  4567   000776  EFC7  F003         	goto	i2l1502
  4568   00077A                     i2u59_40:
  4569   00077A  1E10               	comf	(i2___aldiv@dividend+3)^0,f,c
  4570   00077C  1E0F               	comf	(i2___aldiv@dividend+2)^0,f,c
  4571   00077E  1E0E               	comf	(i2___aldiv@dividend+1)^0,f,c
  4572   000780  6C0D               	negf	i2___aldiv@dividend^0,c
  4573   000782  0E00               	movlw	0
  4574   000784  220E               	addwfc	(i2___aldiv@dividend+1)^0,f,c
  4575   000786  220F               	addwfc	(i2___aldiv@dividend+2)^0,f,c
  4576   000788  2210               	addwfc	(i2___aldiv@dividend+3)^0,f,c
  4577   00078A  0E01               	movlw	1
  4578   00078C  1A16               	xorwf	i2___aldiv@sign^0,f,c
  4579   00078E                     i2l1502:
  4580   00078E  0E00               	movlw	0
  4581   000790  6E17               	movwf	i2___aldiv@quotient^0,c
  4582   000792  0E00               	movlw	0
  4583   000794  6E18               	movwf	(i2___aldiv@quotient+1)^0,c
  4584   000796  0E00               	movlw	0
  4585   000798  6E19               	movwf	(i2___aldiv@quotient+2)^0,c
  4586   00079A  0E00               	movlw	0
  4587   00079C  6E1A               	movwf	(i2___aldiv@quotient+3)^0,c
  4588   00079E  5011               	movf	i2___aldiv@divisor^0,w,c
  4589   0007A0  1012               	iorwf	(i2___aldiv@divisor+1)^0,w,c
  4590   0007A2  1013               	iorwf	(i2___aldiv@divisor+2)^0,w,c
  4591   0007A4  1014               	iorwf	(i2___aldiv@divisor+3)^0,w,c
  4592   0007A6  B4D8               	btfsc	status,2,c
  4593   0007A8  EFD8  F003         	goto	i2u60_41
  4594   0007AC  EFDA  F003         	goto	i2u60_40
  4595   0007B0                     i2u60_41:
  4596   0007B0  EF10  F004         	goto	i2l1524
  4597   0007B4                     i2u60_40:
  4598   0007B4  0E01               	movlw	1
  4599   0007B6  6E15               	movwf	i2___aldiv@counter^0,c
  4600   0007B8  EFE4  F003         	goto	i2l1510
  4601   0007BC                     i2l1508:
  4602   0007BC  90D8               	bcf	status,0,c
  4603   0007BE  3611               	rlcf	i2___aldiv@divisor^0,f,c
  4604   0007C0  3612               	rlcf	(i2___aldiv@divisor+1)^0,f,c
  4605   0007C2  3613               	rlcf	(i2___aldiv@divisor+2)^0,f,c
  4606   0007C4  3614               	rlcf	(i2___aldiv@divisor+3)^0,f,c
  4607   0007C6  2A15               	incf	i2___aldiv@counter^0,f,c
  4608   0007C8                     i2l1510:
  4609   0007C8  AE14               	btfss	(i2___aldiv@divisor+3)^0,7,c
  4610   0007CA  EFE9  F003         	goto	i2u61_41
  4611   0007CE  EFEB  F003         	goto	i2u61_40
  4612   0007D2                     i2u61_41:
  4613   0007D2  EFDE  F003         	goto	i2l1508
  4614   0007D6                     i2u61_40:
  4615   0007D6                     i2l1512:
  4616   0007D6  90D8               	bcf	status,0,c
  4617   0007D8  3617               	rlcf	i2___aldiv@quotient^0,f,c
  4618   0007DA  3618               	rlcf	(i2___aldiv@quotient+1)^0,f,c
  4619   0007DC  3619               	rlcf	(i2___aldiv@quotient+2)^0,f,c
  4620   0007DE  361A               	rlcf	(i2___aldiv@quotient+3)^0,f,c
  4621   0007E0  5011               	movf	i2___aldiv@divisor^0,w,c
  4622   0007E2  5C0D               	subwf	i2___aldiv@dividend^0,w,c
  4623   0007E4  5012               	movf	(i2___aldiv@divisor+1)^0,w,c
  4624   0007E6  580E               	subwfb	(i2___aldiv@dividend+1)^0,w,c
  4625   0007E8  5013               	movf	(i2___aldiv@divisor+2)^0,w,c
  4626   0007EA  580F               	subwfb	(i2___aldiv@dividend+2)^0,w,c
  4627   0007EC  5014               	movf	(i2___aldiv@divisor+3)^0,w,c
  4628   0007EE  5810               	subwfb	(i2___aldiv@dividend+3)^0,w,c
  4629   0007F0  A0D8               	btfss	status,0,c
  4630   0007F2  EFFD  F003         	goto	i2u62_41
  4631   0007F6  EFFF  F003         	goto	i2u62_40
  4632   0007FA                     i2u62_41:
  4633   0007FA  EF08  F004         	goto	i2l1520
  4634   0007FE                     i2u62_40:
  4635   0007FE  5011               	movf	i2___aldiv@divisor^0,w,c
  4636   000800  5E0D               	subwf	i2___aldiv@dividend^0,f,c
  4637   000802  5012               	movf	(i2___aldiv@divisor+1)^0,w,c
  4638   000804  5A0E               	subwfb	(i2___aldiv@dividend+1)^0,f,c
  4639   000806  5013               	movf	(i2___aldiv@divisor+2)^0,w,c
  4640   000808  5A0F               	subwfb	(i2___aldiv@dividend+2)^0,f,c
  4641   00080A  5014               	movf	(i2___aldiv@divisor+3)^0,w,c
  4642   00080C  5A10               	subwfb	(i2___aldiv@dividend+3)^0,f,c
  4643   00080E  8017               	bsf	i2___aldiv@quotient^0,0,c
  4644   000810                     i2l1520:
  4645   000810  90D8               	bcf	status,0,c
  4646   000812  3214               	rrcf	(i2___aldiv@divisor+3)^0,f,c
  4647   000814  3213               	rrcf	(i2___aldiv@divisor+2)^0,f,c
  4648   000816  3212               	rrcf	(i2___aldiv@divisor+1)^0,f,c
  4649   000818  3211               	rrcf	i2___aldiv@divisor^0,f,c
  4650   00081A  2E15               	decfsz	i2___aldiv@counter^0,f,c
  4651   00081C  EFEB  F003         	goto	i2l1512
  4652   000820                     i2l1524:
  4653   000820  5016               	movf	i2___aldiv@sign^0,w,c
  4654   000822  B4D8               	btfsc	status,2,c
  4655   000824  EF16  F004         	goto	i2u63_41
  4656   000828  EF18  F004         	goto	i2u63_40
  4657   00082C                     i2u63_41:
  4658   00082C  EF20  F004         	goto	i2l1528
  4659   000830                     i2u63_40:
  4660   000830  1E1A               	comf	(i2___aldiv@quotient+3)^0,f,c
  4661   000832  1E19               	comf	(i2___aldiv@quotient+2)^0,f,c
  4662   000834  1E18               	comf	(i2___aldiv@quotient+1)^0,f,c
  4663   000836  6C17               	negf	i2___aldiv@quotient^0,c
  4664   000838  0E00               	movlw	0
  4665   00083A  2218               	addwfc	(i2___aldiv@quotient+1)^0,f,c
  4666   00083C  2219               	addwfc	(i2___aldiv@quotient+2)^0,f,c
  4667   00083E  221A               	addwfc	(i2___aldiv@quotient+3)^0,f,c
  4668   000840                     i2l1528:
  4669   000840  C017  F00D         	movff	i2___aldiv@quotient,?i2___aldiv
  4670   000844  C018  F00E         	movff	i2___aldiv@quotient+1,?i2___aldiv+1
  4671   000848  C019  F00F         	movff	i2___aldiv@quotient+2,?i2___aldiv+2
  4672   00084C  C01A  F010         	movff	i2___aldiv@quotient+3,?i2___aldiv+3
  4673   000850  0012               	return		;funcret
  4674   000852                     __end_ofi2___aldiv:
  4675                           	callstack 0
  4676                           
  4677                           	psect	rparam
  4678   000001                     ___rparam_used  equ	1
  4679   000000                     ___param_bank   equ	0
  4680   000000                     __Lparam        equ	__Lrparam
  4681   000000                     __Hparam        equ	__Hrparam
  4682                           
  4683                           	psect	temp
  4684   000051                     btemp:
  4685                           	callstack 0
  4686   000051                     	ds	1
  4687   000051                     int$flags       set	btemp
  4688   000052                     wtemp8          set	btemp+1
  4689   000052                     ttemp5          set	btemp+1
  4690   000055                     ttemp6          set	btemp+4
  4691   000059                     ttemp7          set	btemp+8
  4692                           
  4693                           	psect	idloc
  4694                           
  4695                           ;Config register IDLOC0 @ 0x200000
  4696                           ;	unspecified, using default values
  4697   200000                     	org	2097152
  4698   200000  FF                 	db	255
  4699                           
  4700                           ;Config register IDLOC1 @ 0x200001
  4701                           ;	unspecified, using default values
  4702   200001                     	org	2097153
  4703   200001  FF                 	db	255
  4704                           
  4705                           ;Config register IDLOC2 @ 0x200002
  4706                           ;	unspecified, using default values
  4707   200002                     	org	2097154
  4708   200002  FF                 	db	255
  4709                           
  4710                           ;Config register IDLOC3 @ 0x200003
  4711                           ;	unspecified, using default values
  4712   200003                     	org	2097155
  4713   200003  FF                 	db	255
  4714                           
  4715                           ;Config register IDLOC4 @ 0x200004
  4716                           ;	unspecified, using default values
  4717   200004                     	org	2097156
  4718   200004  FF                 	db	255
  4719                           
  4720                           ;Config register IDLOC5 @ 0x200005
  4721                           ;	unspecified, using default values
  4722   200005                     	org	2097157
  4723   200005  FF                 	db	255
  4724                           
  4725                           ;Config register IDLOC6 @ 0x200006
  4726                           ;	unspecified, using default values
  4727   200006                     	org	2097158
  4728   200006  FF                 	db	255
  4729                           
  4730                           ;Config register IDLOC7 @ 0x200007
  4731                           ;	unspecified, using default values
  4732   200007                     	org	2097159
  4733   200007  FF                 	db	255
  4734                           
  4735                           	psect	config
  4736                           
  4737                           ; Padding undefined space
  4738   300000                     	org	3145728
  4739   300000  FF                 	db	255
  4740                           
  4741                           ;Config register CONFIG1H @ 0x300001
  4742                           ;	Oscillator Selection bits
  4743                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  4744                           ;	Fail-Safe Clock Monitor Enable bit
  4745                           ;	FCMEN = 0x0, unprogrammed default
  4746                           ;	Internal/External Oscillator Switchover bit
  4747                           ;	IESO = 0x0, unprogrammed default
  4748   300001                     	org	3145729
  4749   300001  08                 	db	8
  4750                           
  4751                           ;Config register CONFIG2L @ 0x300002
  4752                           ;	Power-up Timer Enable bit
  4753                           ;	PWRT = OFF, PWRT disabled
  4754                           ;	Brown-out Reset Enable bits
  4755                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
  4756                           ;	Brown Out Reset Voltage bits
  4757                           ;	BORV = 0x3, unprogrammed default
  4758   300002                     	org	3145730
  4759   300002  1B                 	db	27
  4760                           
  4761                           ;Config register CONFIG2H @ 0x300003
  4762                           ;	Watchdog Timer Enable bit
  4763                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4764                           ;	Watchdog Timer Postscale Select bits
  4765                           ;	WDTPS = 0xF, unprogrammed default
  4766   300003                     	org	3145731
  4767   300003  1E                 	db	30
  4768                           
  4769                           ; Padding undefined space
  4770   300004                     	org	3145732
  4771   300004  FF                 	db	255
  4772                           
  4773                           ;Config register CONFIG3H @ 0x300005
  4774                           ;	CCP2 MUX bit
  4775                           ;	CCP2MX = 0x1, unprogrammed default
  4776                           ;	PORTB A/D Enable bit
  4777                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4778                           ;	Low-Power Timer1 Oscillator Enable bit
  4779                           ;	LPT1OSC = 0x0, unprogrammed default
  4780                           ;	MCLR Pin Enable bit
  4781                           ;	MCLRE = 0x1, unprogrammed default
  4782   300005                     	org	3145733
  4783   300005  81                 	db	129
  4784                           
  4785                           ;Config register CONFIG4L @ 0x300006
  4786                           ;	Stack Full/Underflow Reset Enable bit
  4787                           ;	STVREN = 0x1, unprogrammed default
  4788                           ;	Single-Supply ICSP Enable bit
  4789                           ;	LVP = OFF, Single-Supply ICSP disabled
  4790                           ;	Extended Instruction Set Enable bit
  4791                           ;	XINST = 0x0, unprogrammed default
  4792                           ;	Background Debugger Enable bit
  4793                           ;	DEBUG = 0x1, unprogrammed default
  4794   300006                     	org	3145734
  4795   300006  81                 	db	129
  4796                           
  4797                           ; Padding undefined space
  4798   300007                     	org	3145735
  4799   300007  FF                 	db	255
  4800                           
  4801                           ;Config register CONFIG5L @ 0x300008
  4802                           ;	unspecified, using default values
  4803                           ;	Code Protection bit
  4804                           ;	CP0 = 0x1, unprogrammed default
  4805                           ;	Code Protection bit
  4806                           ;	CP1 = 0x1, unprogrammed default
  4807                           ;	Code Protection bit
  4808                           ;	CP2 = 0x1, unprogrammed default
  4809                           ;	Code Protection bit
  4810                           ;	CP3 = 0x1, unprogrammed default
  4811   300008                     	org	3145736
  4812   300008  0F                 	db	15
  4813                           
  4814                           ;Config register CONFIG5H @ 0x300009
  4815                           ;	Boot Block Code Protection bit
  4816                           ;	CPB = 0x1, unprogrammed default
  4817                           ;	Data EEPROM Code Protection bit
  4818                           ;	CPD = OFF, Data EEPROM not code-protected
  4819   300009                     	org	3145737
  4820   300009  C0                 	db	192
  4821                           
  4822                           ;Config register CONFIG6L @ 0x30000A
  4823                           ;	unspecified, using default values
  4824                           ;	Write Protection bit
  4825                           ;	WRT0 = 0x1, unprogrammed default
  4826                           ;	Write Protection bit
  4827                           ;	WRT1 = 0x1, unprogrammed default
  4828                           ;	Write Protection bit
  4829                           ;	WRT2 = 0x1, unprogrammed default
  4830                           ;	Write Protection bit
  4831                           ;	WRT3 = 0x1, unprogrammed default
  4832   30000A                     	org	3145738
  4833   30000A  0F                 	db	15
  4834                           
  4835                           ;Config register CONFIG6H @ 0x30000B
  4836                           ;	unspecified, using default values
  4837                           ;	Configuration Register Write Protection bit
  4838                           ;	WRTC = 0x1, unprogrammed default
  4839                           ;	Boot Block Write Protection bit
  4840                           ;	WRTB = 0x1, unprogrammed default
  4841                           ;	Data EEPROM Write Protection bit
  4842                           ;	WRTD = 0x1, unprogrammed default
  4843   30000B                     	org	3145739
  4844   30000B  E0                 	db	224
  4845                           
  4846                           ;Config register CONFIG7L @ 0x30000C
  4847                           ;	unspecified, using default values
  4848                           ;	Table Read Protection bit
  4849                           ;	EBTR0 = 0x1, unprogrammed default
  4850                           ;	Table Read Protection bit
  4851                           ;	EBTR1 = 0x1, unprogrammed default
  4852                           ;	Table Read Protection bit
  4853                           ;	EBTR2 = 0x1, unprogrammed default
  4854                           ;	Table Read Protection bit
  4855                           ;	EBTR3 = 0x1, unprogrammed default
  4856   30000C                     	org	3145740
  4857   30000C  0F                 	db	15
  4858                           
  4859                           ;Config register CONFIG7H @ 0x30000D
  4860                           ;	unspecified, using default values
  4861                           ;	Boot Block Table Read Protection bit
  4862                           ;	EBTRB = 0x1, unprogrammed default
  4863   30000D                     	org	3145741
  4864   30000D  40                 	db	64
  4865                           tosu	equ	0xFFF
  4866                           tosh	equ	0xFFE
  4867                           tosl	equ	0xFFD
  4868                           stkptr	equ	0xFFC
  4869                           pclatu	equ	0xFFB
  4870                           pclath	equ	0xFFA
  4871                           pcl	equ	0xFF9
  4872                           tblptru	equ	0xFF8
  4873                           tblptrh	equ	0xFF7
  4874                           tblptrl	equ	0xFF6
  4875                           tablat	equ	0xFF5
  4876                           prodh	equ	0xFF4
  4877                           prodl	equ	0xFF3
  4878                           indf0	equ	0xFEF
  4879                           postinc0	equ	0xFEE
  4880                           postdec0	equ	0xFED
  4881                           preinc0	equ	0xFEC
  4882                           plusw0	equ	0xFEB
  4883                           fsr0h	equ	0xFEA
  4884                           fsr0l	equ	0xFE9
  4885                           wreg	equ	0xFE8
  4886                           indf1	equ	0xFE7
  4887                           postinc1	equ	0xFE6
  4888                           postdec1	equ	0xFE5
  4889                           preinc1	equ	0xFE4
  4890                           plusw1	equ	0xFE3
  4891                           fsr1h	equ	0xFE2
  4892                           fsr1l	equ	0xFE1
  4893                           bsr	equ	0xFE0
  4894                           indf2	equ	0xFDF
  4895                           postinc2	equ	0xFDE
  4896                           postdec2	equ	0xFDD
  4897                           preinc2	equ	0xFDC
  4898                           plusw2	equ	0xFDB
  4899                           fsr2h	equ	0xFDA
  4900                           fsr2l	equ	0xFD9
  4901                           status	equ	0xFD8

Data Sizes:
    Strings     147
    Constant    1284
    Data        8
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     64      80
    BANK0           128     22      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    BT_load_string@string	PTR unsigned char  size(2) Largest target is 32
		 -> STR_1(CODE[32]), STR_2(CODE[14]), STR_3(CODE[15]), STR_4(CODE[15]), 
		 -> STR_5(CODE[16]), STR_6(CODE[11]), STR_7(CODE[13]), STR_8(CODE[15]), 
		 -> STR_9(CODE[16]), 

    current_melody	PTR const int [3] size(2) Largest target is 426
		 -> deja_vu(CODE[150]), fur_elise(CODE[426]), rick_roll_test(CODE[300]), NULL(NULL[0]), 

    melodies	PTR const int [3] size(2) Largest target is 426
		 -> deja_vu(CODE[150]), fur_elise(CODE[426]), rick_roll_test(CODE[300]), 


Critical Paths under _main in COMRAM

    _music_start->___aldiv
    ___aldiv->___lmul
    _Ladder_Forward->_Update_StepperMotor
    _Ladder_Backward->_Update_StepperMotor
    _BT_load_string->_BT_load_char

Critical Paths under _ISR in COMRAM

    _ISR->i2___aldiv
    i2___aldiv->i2___lmul

Critical Paths under _main in BANK0

    _main->_music_start
    _music_start->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1543
                                             18 BANK0      4     4      0
                        _BT_get_char
                       _BT_load_char
                     _BT_load_string
               _Initialize_Bluetooth
                  _Initialize_Buzzer
                  _Initialize_Ladder
                   _Initialize_Motor
                    _Ladder_Backward
                     _Ladder_Forward
                     _Motor_Backward
                      _Motor_Forward
                         _Motor_Stop
                     _Motor_TurnLeft
                    _Motor_TurnRight
                       _broadcast_BT
                        _music_start
 ---------------------------------------------------------------------------------
 (1) _music_start                                         10    10      0     667
                                              8 BANK0     10    10      0
                   _Initialize_Songs
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     142
                                             46 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     457
                                             58 COMRAM     6     6      0
                                              0 BANK0      8     0      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Initialize_Songs                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _broadcast_BT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_TurnRight                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_TurnLeft                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_Forward                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_Backward                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ladder_Forward                                      10     8      2     202
                                             48 COMRAM    10     8      2
                _Update_StepperMotor
 ---------------------------------------------------------------------------------
 (1) _Ladder_Backward                                     10     8      2     202
                                             48 COMRAM    10     8      2
                _Update_StepperMotor
 ---------------------------------------------------------------------------------
 (2) _Update_StepperMotor                                  2     2      0      29
                                             46 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Motor                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Ladder                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Bluetooth                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BT_load_string                                       2     0      2     121
                                             47 COMRAM     2     0      2
                       _BT_load_char
 ---------------------------------------------------------------------------------
 (2) _BT_load_char                                         1     1      0      29
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BT_get_char                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 20    20      0     548
                                             26 COMRAM    20    20      0
                          i2___aldiv
                           i2___lmul
 ---------------------------------------------------------------------------------
 (4) i2___lmul                                            12     4      8      98
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) i2___aldiv                                           14     6      8     312
                                             12 COMRAM    14     6      8
                           i2___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BT_get_char
   _BT_load_char
   _BT_load_string
     _BT_load_char
   _Initialize_Bluetooth
   _Initialize_Buzzer
   _Initialize_Ladder
   _Initialize_Motor
   _Ladder_Backward
     _Update_StepperMotor
   _Ladder_Forward
     _Update_StepperMotor
   _Motor_Backward
   _Motor_Forward
   _Motor_Stop
   _Motor_TurnLeft
   _Motor_TurnRight
   _broadcast_BT
   _music_start
     _Initialize_Songs
     ___aldiv
       ___lmul (ARG)
     ___lmul

 _ISR (ROOT)
   i2___aldiv
     i2___lmul (ARG)
   i2___lmul

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1523      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK5           244      0       0      0.0%
BANK5              244      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128     22      24     18.8%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     64      80     63.5%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFRh          18      0       0      0.0%
BITBIGSFR_1l        12      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFRl           9      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_2          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     104      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Dec 24 01:14:47 2024

                          l71 0BC8                            l80 0B86                            l74 0B6A  
                          l92 0BDC                            l77 0B78                            l86 0B36  
                          l95 0AA6                            l97 0AB4                            l89 0BCE  
            ?_Ladder_Backward 0031                  _stepSequence 79B9                           l100 0ACA  
                         l212 0B62                           l142 0BA8                           l230 063A  
                         l151 0C4A                           l215 0B00                           l145 0C38  
                         l154 0C14                           l243 0C5C                           l252 08DE  
                         l148 0C26                           l340 0746                           l157 0C02  
                         l246 0BF0                           l272 09C6                           l273 09D6  
                         l258 096C                           _GIE 7F97                           _PR2 0FCB  
                         _ISR 0008                           u800 09C6                           u801 09C2  
                         u810 064E                           u811 064A                           u900 0AB4  
                         u820 0670                           u901 0AB0                           u821 066C  
                         u910 0AC2                           u830 06AA                           u911 0ABE  
                         u831 06A6                           u840 06CC                           u920 0504  
                         u841 06C8                           u921 0500                           u770 0B78  
                         u850 06F4                           u771 0B74                           u851 06F0  
                         u780 0B86                           u940 08DE                           u860 0726  
                         u781 0B82                           u941 08DA                           u861 0722  
                         u870 0B36                           u790 098C                           u871 0B32  
                         u935 085C                           u791 0988                           u960 096C  
                         u880 0BDC                           u961 0968                           u881 0BD8  
                         _RX9 7D5E                           u890 0AA2                           u970 0360  
                         u891 0A9E                           u955 08EA                           u971 035C  
                         u980 039C                           u981 0398                           u990 03C2  
                         u991 03BE                           _TX9 7D66                           wreg 0FE8  
                 _total_songs 79BD                          ?_ISR 0001                          l1700 065E  
                        l1710 0694                          l1702 0662                          l1800 0B56  
                        l1720 06D6                          l1712 06AA                          l1704 0670  
                        l1810 0B60                          l1802 0B58                          l1722 06F4  
                        l1714 06B2                          l1730 0716                          l1706 0680  
                        l1740 0BB0                          l1804 0B5A                          l1812 0C4C  
                        l1820 0BF2                          l1732 0726                          l1724 0704  
                        l1716 06BE                          l1708 0684                          l1900 0336  
                        l1750 0BBC                          l1742 0BB4                          l1806 0B5C  
                        l1814 0C28                          l1822 0C16                          l1734 0736  
                        l1726 0706                          l1718 06CC                          l1830 0510  
                        l1910 0364                          l1902 0342                          l1760 0BC6  
                        l1752 0BBE                          l1744 0BB6                          l1808 0B5E  
                        l1816 0C04                          l1680 0AE2                          l1728 0710  
                        l1840 0520                          l1832 0512                          l1824 04EE  
                        l1920 03A0                          l1912 0370                          l1904 0346  
                        l1762 0B02                          l1754 0BC0                          l1746 0BB8  
                        l1738 0BAA                          l1682 0BE0                          l1818 0C3A  
                        l1770 0BCA                          l1690 099C                          l1850 056C  
                        l1842 0528                          l1826 0504                          l1930 03C6  
                        l1914 0374                          l1906 034E                          l1772 0A94  
                        l1676 0B66                          l1764 0B06                          l1756 0BC2  
                        l1748 0BBA                          l1860 0870                          l1692 09A6  
                        l1684 096E                          l1852 05A6                          l1844 0530  
                        l1828 050C                          l1836 0518                          l1940 03EC  
                        l1908 0360                          l1916 038A                          l1774 0AA2  
                        l1766 0B16                          l1758 0BC4                          l1790 0B38  
                        l1870 08BC                          l1862 0878                          l1678 0ACC  
                        l1694 063C                          l1686 097E                          l1854 0600  
                        l1846 0538                          l1838 051C                          l1950 0412  
                        l1918 039C                          l1926 03B0                          l1784 0AC8  
                        l1768 0B1A                          l1792 0B3C                          l1880 0912  
                        l1864 0884                          l1872 08C0                          l1696 063E  
                        l1688 098C                          l1856 0638                          l1848 0566  
                        l1960 0444                          l1928 03C2                          l1936 03D6  
                        l1778 0AC2                          l1794 0B4C                          l1882 0926  
                        l1874 08E0                          l1866 0898                          l1858 0852  
                        l1698 064E                          l1970 0480                          l1962 044C  
                        l1954 0422                          l1938 03E8                          l1946 03FC  
                        l1890 0318                          l1796 0B4E                          l1788 0B88  
                        l1884 0936                          l1876 08FE                          l1868 08A8  
                        l1980 04B6                          l1972 048C                          l1964 045E  
                        l1956 0434                          l1948 040E                          l1892 031C  
                        l1798 0B50                          l1886 094A                          l1878 0906  
                        l1966 0470                          l1974 049A                          l1982 04C4  
                        l1958 0440                          l1894 0324                          l1888 094E  
                        l1984 04D4                          l1976 04A6                          l1968 047C  
                        l1896 0328                          l1986 04E2                          l1978 04AA  
                        l1898 032C                          STR_1 7D2B                          STR_2 7D98  
                        STR_3 7D89                          STR_4 7D6B                          STR_5 7D5B  
                        STR_6 7DB3                          STR_7 7DA6                          STR_8 7D7A  
                        STR_9 7D4B                          _BRGH 7D62                          u1000 03E8  
                        _CREN 7D5C                          u1001 03E4                          u1010 040E  
                        u1011 040A                          u1020 0434                          u1021 0430  
                        u1030 045E                          u1031 045A                          u1040 0470  
                        u1041 046C                          u1050 04D4                          u1051 04D0  
                        u1067 037C                          u1077 089E                          u1087 092C  
                        _LATD 0F8C                          _PEIE 7F96                          _RCIE 7CED  
                        _RCIF 7CF5                          _OERR 7D59                          _TMR0 0FD6  
                        _SPEN 7D5F                          _TRMT 7D61                          _TXIE 7CEC  
                        _TXEN 7D65                          _TXIF 7CF4                          _SYNC 7D64  
              ??_broadcast_BT 002F                          _main 0318                          fsr2h 0FDA  
                        fsr1l 0FE1                          fsr2l 0FD9                          btemp 0051  
                        prodh 0FF4                          prodl 0FF3                          start 000E  
                ___param_bank 0000                         ??_ISR 001B               __end_of___aldiv 0748  
                       ?_main 0001                         _T0CON 0FD5                         i2l226 02FC  
                       i2l340 0850                         i2l272 0A30                         i2l273 0A40  
                       _RCREG 0FAE                         _TMR0H 0FD7                         _TMR0L 0FD6  
                       _SPBRG 0FAF                         _TXREG 0FAD               __end_of_deja_vu 7D2B  
         ___lmul@multiplicand 0033               __end_of_melody2 79B3                         tablat 0FF5  
            __end_ofi2___lmul 0A42                         ttemp5 0052                         ttemp6 0055  
                       ttemp7 0059                         status 0FD8                         wtemp8 0052  
             __initialization 0A42                  __end_of_main 04EE         __end_of_Motor_Forward 0C3A  
                ?_BT_get_char 0001                        ??_main 0092                 __activetblptr 0002  
    Ladder_Backward@stepIndex 0039                 main@get_value 0095              _music_start$1527 008C  
                      _CCPR1L 0FBE                i2___aldiv@sign 0016                        i2l1500 078A  
                      i2l1510 07C8                        i2l1502 078E                        i2l1520 0810  
                      i2l1512 07D6                        i2l1504 079E                        i2l1522 081A  
                      i2l1514 07E0                        i2l1506 07B4                        i2l1516 07FE  
                      i2l1508 07BC                        i2l1524 0820                        i2l1526 0830  
                      i2l1518 080E                        i2l1630 002C                        i2l1528 0840  
                      i2l1480 09E8                        i2l1640 0068                        i2l1632 003A  
                      i2l1490 074A                        i2l1482 09F6                        i2l1650 00C4  
                      i2l1642 006C                        i2l1634 003C                        i2l1492 0758  
                      i2l1484 0A06                        i2l1660 01C2                        i2l1652 00FE  
                      i2l1644 008A                        i2l1636 004E                        i2l1494 0768  
                      i2l1486 0A10                        i2l1478 09D8                        i2l1670 0264  
                      i2l1662 01FC                        i2l1654 0158                        i2l1646 0092  
                      i2l1638 0060                        i2l1496 076C                        i2l1488 0748  
                      i2l1672 029E                        i2l1648 00BE                        i2l1656 0190  
                      i2l1498 077A                        i2l1658 01BC                        i2l1666 025A  
                      i2l1668 0262                _BT_load_string 0B02              i2___lmul@product 0009  
                      _TRISC6 7CA6                        _TRISC7 7CA7                _rick_roll_test 7B69  
              _Motor_Backward 0C3A                 ISR@pause_time 0029                    _Motor_Stop 0C16  
                      ___lmul 096E                     ??___aldiv 003B                        clear_0 0A80  
                      isa$std 0001              Ladder_Backward@i 0037          __end_of_broadcast_BT 0BDE  
           __end_ofi2___aldiv 0852                  __pdataCOMRAM 004B                  __mediumconst 7826  
                      tblptrh 0FF7                        tblptrl 0FF6                        tblptru 0FF8  
                ?_music_start 0001        __end_of_BT_load_string 0B38        __end_of_rick_roll_test 7C95  
                  __accesstop 0080       __end_of__initialization 0A86        __end_of_Motor_Backward 0C4C  
               ___rparam_used 0001                _Motor_TurnLeft 0C04                __pcstackCOMRAM 0001  
                __pidataBANK0 0C64         _current_melody_length 0047             ??_Motor_TurnRight 002F  
                   ?i2___lmul 0001                   ISR@duration 0025               ?_BT_load_string 0030  
            main@ladder_state 0093        __end_of_Motor_TurnLeft 0C16                 ?_BT_load_char 0001  
             ?_Motor_Backward 0001                   ?_Motor_Stop 0001           music_start@duration 0090  
                     ?___lmul 002F           _Update_StepperMotor 0BDE                ___lmul@product 0037  
            _Initialize_Motor 0B88              _Initialize_Songs 0ACC                    ??i2___lmul 0009  
__end_of_Initialize_Bluetooth 0BCA                       i2u60_40 07B4                       i2u60_41 07B0  
                     i2u61_40 07D6                       i2u61_41 07D2                       i2u62_40 07FE  
                     i2u62_41 07FA                       i2u63_40 0830                       i2u63_41 082C  
                     i2u56_40 09F6                       i2u56_41 09F2                       i2u57_40 0A30  
                     i2u73_40 003A                       i2u57_41 0A2C                       i2u73_41 0036  
                     i2u58_40 0758                       i2u74_40 004E                       i2u58_41 0754  
                     i2u74_41 004A                       i2u59_40 077A                       i2u75_40 0060  
                     i2u59_41 0776                       i2u75_41 005C                       i2u76_40 008A  
                     i2u76_41 0086          ?_Update_StepperMotor 0001                ??_BT_load_char 002F  
             ?_Motor_TurnLeft 0001             i2___aldiv@divisor 0011             i2___aldiv@counter 0015  
                     __Hparam 0000                       __Lparam 0000                _Ladder_Forward 0852  
                     ___aldiv 063C                       _deja_vu 7C95                       __pcinit 0A42  
                     __ramtop 0600                       __ptext0 0318                       __ptext1 04EE  
                     __ptext2 096E                       __ptext3 063C                       __ptext4 0ACC  
                     __ptext5 0BCA                       __ptext6 0BF2                       __ptext7 0C04  
                     __ptext8 0C16                       __ptext9 0C28                     _T0CONbits 0FD5  
                   _T2CONbits 0FCA                       _melody2 7953             __end_of_fur_elise 7B69  
            ___aldiv@dividend 0080       Ladder_Forward@stepIndex 0039  Update_StepperMotor@stepValue 0030  
                     _playing 0043         ??_Update_StepperMotor 002F                __pintcode_body 0012  
        end_of_initialization 0A86             __end_of_rick_roll 7953                 __Lmediumconst 7826  
                     int_func 0012                  _broadcast_BT 0BCA        __end_of_Ladder_Forward 08E0  
            ___aldiv@quotient 003D                       postdec1 0FE5                       postdec2 0FDD  
                     postinc0 0FEE                       postinc2 0FDE           i2___lmul@multiplier 0001  
                   _TRISAbits 0F92                     _TRISBbits 0F93                     _TRISCbits 0F94  
                   _TRISDbits 0F95              BT_load_char@byte 002F                     i2___aldiv 0748  
        Ladder_Backward@steps 0035          Ladder_Backward@turns 0031                   _CCP1CONbits 0FBD  
           ??_Ladder_Backward 0033                     _TXSTAbits 0FAC               _Motor_TurnRight 0BF2  
             ?_Ladder_Forward 0031          _Initialize_Bluetooth 0BAA                __end_of___lmul 09D8  
               __pidataCOMRAM 0C5E          __end_of_BT_load_char 0B88              ??_BT_load_string 0032  
         start_initialization 0A42                   __end_of_ISR 0318                    ?i2___aldiv 000D  
            ??_Motor_Backward 002F      __end_of_Initialize_Motor 0BAA      __end_of_Initialize_Songs 0B02  
       ?_Initialize_Bluetooth 0001                  ??_Motor_Stop 002F                      ??___lmul 0037  
                 __pdataBANK0 0096                 _Motor_Forward 0C28                _current_melody 0049  
                 __pbssCOMRAM 0041                 __pcstackBANK0 0080              ??_Motor_TurnLeft 002F  
     __end_of_Motor_TurnRight 0C04            __end_of_Motor_Stop 0C28                _melody_lengths 79B3  
                _current_note 0045                  _current_song 0096               ISR@duration_829 0027  
                   __pintcode 0008                 __pmediumconst 7826                      ?___aldiv 0080  
             Ladder_Forward@i 0037                ?_Motor_Forward 0001                 ??_BT_get_char 002F  
           _Initialize_Ladder 0C4C             _Initialize_Buzzer 0B38            ?_Initialize_Ladder 0001  
          ?_Initialize_Buzzer 0001                   ??i2___aldiv 0015        __end_of_melody_lengths 79B9  
                   _fur_elise 79BF                      _ISR$1544 002B           ??_Initialize_Ladder 002F  
             ___aldiv@divisor 0084               ___aldiv@counter 003B           ??_Initialize_Buzzer 002F  
                    _LATAbits 0F89                      _LATBbits 0F8A                      _LATCbits 0F8B  
                    _LATDbits 0F8C        ??_Initialize_Bluetooth 002F                     _rick_roll 7827  
   __end_of_Initialize_Ladder 0C5E   __end_of_Update_StepperMotor 0BF2     __end_of_Initialize_Buzzer 0B64  
                    i2___lmul 09D8               _Ladder_Backward 08E0           __end_of_BT_get_char 0ACC  
               ??_music_start 0088             ___lmul@multiplier 002F                     copy_data0 0A6E  
            ?_Motor_TurnRight 0001              ??_Ladder_Forward 0033           Ladder_Forward@steps 0035  
         Ladder_Forward@turns 0031            i2___aldiv@dividend 000D          __end_of_stepSequence 79BD  
                _BT_load_char 0B64                      __Hrparam 0000                      __Lrparam 0000  
             ??_Motor_Forward 002F            i2___aldiv@quotient 0017                      __ptext10 0C3A  
                    __ptext11 0852                      __ptext20 0A94                      __ptext12 08E0  
                    __ptext13 0BDE                      __ptext22 09D8                      __ptext14 0B88  
                    __ptext23 0748                      __ptext15 0C4C                      __ptext16 0B38  
                    __ptext17 0BAA                      __ptext18 0B02                      __ptext19 0B64  
           ?_Initialize_Motor 0001                      _melodies 004B                      _is_pause 0041  
           ?_Initialize_Songs 0001           __end_of_music_start 063C            ??_Initialize_Motor 002F  
          ??_Initialize_Songs 002F                      isa$xinst 0000                      int$flags 0051  
     __end_of_Ladder_Backward 096E                   _BT_get_char 0A94          BT_load_string@string 0030  
                  _INTCONbits 0FF2         i2___lmul@multiplicand 0005                      intlevel2 0000  
         __end_of_total_songs 79BF                    _OSCCONbits 0FD3                  ___aldiv@sign 003C  
                 _music_start 04EE                 ?_broadcast_BT 0001  
