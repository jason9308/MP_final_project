Version 4.0 HI-TECH Software Intermediate Code
"78 ./ff.h
[; ;./ff.h: 78: typedef struct {
[s S1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `us 1 `us 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `uc -> 512 `i ]
[n S1 . fs_type drv csize n_fats wflag fsi_flag id n_rootdir last_clust free_clust n_fatent fsize volbase fatbase dirbase database winsect win ]
"700 ff.c
[; ;ff.c: 700: FRESULT sync_window (
[c E95 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 .. ]
[n E95 . FR_OK FR_DISK_ERR FR_INT_ERR FR_NOT_READY FR_NO_FILE FR_NO_PATH FR_INVALID_NAME FR_DENIED FR_EXIST FR_INVALID_OBJECT FR_WRITE_PROTECTED FR_INVALID_DRIVE FR_NOT_ENABLED FR_NO_FILESYSTEM FR_MKFS_ABORTED FR_TIMEOUT FR_LOCKED FR_NOT_ENOUGH_CORE FR_TOO_MANY_OPEN_FILES FR_INVALID_PARAMETER  ]
"711
[; ;ff.c: 711:   if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
[c E227 0 1 2 3 4 .. ]
[n E227 . RES_OK RES_ERROR RES_WRPRT RES_NOTRDY RES_PARERR  ]
"46 ./diskio.h
[; ;./diskio.h: 46: DRESULT disk_write (BYTE pdrv, const BYTE* buff, DWORD sector, UINT count);
[v _disk_write `(E227 ~T0 @X0 0 ef4`uc`*Cuc`ul`us ]
"45
[; ;./diskio.h: 45: DRESULT disk_read (BYTE pdrv, BYTE* buff, DWORD sector, UINT count);
[v _disk_read `(E227 ~T0 @X0 0 ef4`uc`*uc`ul`us ]
"47
[; ;./diskio.h: 47: DRESULT disk_ioctl (BYTE pdrv, BYTE cmd, void* buff);
[v _disk_ioctl `(E227 ~T0 @X0 0 ef3`uc`uc`*v ]
"143 ./ff.h
[; ;./ff.h: 143: typedef struct {
[s S3 `*S1 1 `us 1 `us 1 `ul 1 `ul 1 `ul 1 `*uc 1 `*uc 1 ]
[n S3 . fs id index sclust clust sect dir fn ]
"44 ./diskio.h
[; ;./diskio.h: 44: DSTATUS disk_status (BYTE pdrv);
[v _disk_status `(uc ~T0 @X0 0 ef1`uc ]
"43
[; ;./diskio.h: 43: DSTATUS disk_initialize (BYTE pdrv);
[v _disk_initialize `(uc ~T0 @X0 0 ef1`uc ]
"114 ./ff.h
[; ;./ff.h: 114: typedef struct {
[s S2 `*S1 1 `us 1 `uc 1 `uc 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `*uc 1 ]
[n S2 . fs id flag err fptr fsize sclust clust dsect dir_sect dir_ptr ]
"448 ff.c
[; ;ff.c: 448: static FATFS *FatFs[1];
[v _FatFs `*S1 ~T0 @X0 -> -> 1 `i `ux s ]
"449
[; ;ff.c: 449: static WORD Fsid;
[v _Fsid `us ~T0 @X0 1 s ]
"507
[; ;ff.c: 507: void mem_cpy (void* dst, const void* src, UINT cnt) {
[v _mem_cpy `(v ~T0 @X0 1 sf3`*v`*Cv`us ]
{
[e :U _mem_cpy ]
[v _dst `*v ~T0 @X0 1 r1 ]
[v _src `*Cv ~T0 @X0 1 r2 ]
[v _cnt `us ~T0 @X0 1 r3 ]
[f ]
"508
[; ;ff.c: 508:  BYTE *d = (BYTE*)dst;
[v _d `*uc ~T0 @X0 1 a ]
[e = _d -> _dst `*uc ]
"509
[; ;ff.c: 509:  const BYTE *s = (const BYTE*)src;
[v _s `*Cuc ~T0 @X0 1 a ]
[e = _s -> _src `*Cuc ]
"512
[; ;ff.c: 512:  while (cnt >= sizeof (int)) {
[e $U 6  ]
[e :U 7 ]
{
"513
[; ;ff.c: 513:   *(int*)d = *(int*)s;
[e = *U -> _d `*i *U -> _s `*i ]
"514
[; ;ff.c: 514:   d += sizeof (int); s += sizeof (int);
[e =+ _d * -> -> # `i `ui `ux -> -> # *U _d `ui `ux ]
[e =+ _s * -> -> # `i `ui `ux -> -> # *U _s `ui `ux ]
"515
[; ;ff.c: 515:   cnt -= sizeof (int);
[e =- _cnt -> -> # `i `ui `us ]
"516
[; ;ff.c: 516:  }
}
[e :U 6 ]
"512
[; ;ff.c: 512:  while (cnt >= sizeof (int)) {
[e $ >= -> _cnt `ui -> # `i `ui 7  ]
[e :U 8 ]
"518
[; ;ff.c: 518:  while (cnt--)
[e $U 9  ]
[e :U 10 ]
"519
[; ;ff.c: 519:   *d++ = *s++;
[e = *U ++ _d * -> -> 1 `i `x -> -> # *U _d `i `x *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[e :U 9 ]
"518
[; ;ff.c: 518:  while (cnt--)
[e $ != -> -- _cnt -> -> 1 `i `us `ui -> -> 0 `i `ui 10  ]
[e :U 11 ]
"520
[; ;ff.c: 520: }
[e :UE 5 ]
}
"524
[; ;ff.c: 524: void mem_set (void* dst, int val, UINT cnt) {
[v _mem_set `(v ~T0 @X0 1 sf3`*v`i`us ]
{
[e :U _mem_set ]
[v _dst `*v ~T0 @X0 1 r1 ]
[v _val `i ~T0 @X0 1 r2 ]
[v _cnt `us ~T0 @X0 1 r3 ]
[f ]
"525
[; ;ff.c: 525:  BYTE *d = (BYTE*)dst;
[v _d `*uc ~T0 @X0 1 a ]
[e = _d -> _dst `*uc ]
"527
[; ;ff.c: 527:  while (cnt--)
[e $U 13  ]
[e :U 14 ]
"528
[; ;ff.c: 528:   *d++ = (BYTE)val;
[e = *U ++ _d * -> -> 1 `i `x -> -> # *U _d `i `x -> _val `uc ]
[e :U 13 ]
"527
[; ;ff.c: 527:  while (cnt--)
[e $ != -> -- _cnt -> -> 1 `i `us `ui -> -> 0 `i `ui 14  ]
[e :U 15 ]
"529
[; ;ff.c: 529: }
[e :UE 12 ]
}
"533
[; ;ff.c: 533: int mem_cmp (const void* dst, const void* src, UINT cnt) {
[v _mem_cmp `(i ~T0 @X0 1 sf3`*Cv`*Cv`us ]
{
[e :U _mem_cmp ]
[v _dst `*Cv ~T0 @X0 1 r1 ]
[v _src `*Cv ~T0 @X0 1 r2 ]
[v _cnt `us ~T0 @X0 1 r3 ]
[f ]
"534
[; ;ff.c: 534:  const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
[v _d `*Cuc ~T0 @X0 1 a ]
[e = _d -> _dst `*Cuc ]
[v _s `*Cuc ~T0 @X0 1 a ]
[e = _s -> _src `*Cuc ]
"535
[; ;ff.c: 535:  int r = 0;
[v _r `i ~T0 @X0 1 a ]
[e = _r -> 0 `i ]
"537
[; ;ff.c: 537:  while (cnt-- && (r = *d++ - *s++) == 0) ;
[e $U 17  ]
[e :U 18 ]
[e :U 17 ]
[e $ && != -> -- _cnt -> -> 1 `i `us `ui -> -> 0 `i `ui == = _r - -> *U ++ _d * -> -> 1 `i `x -> -> # *U _d `i `x `i -> *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x `i -> 0 `i 18  ]
[e :U 19 ]
"538
[; ;ff.c: 538:  return r;
[e ) _r ]
[e $UE 16  ]
"539
[; ;ff.c: 539: }
[e :UE 16 ]
}
"543
[; ;ff.c: 543: int chk_chr (const char* str, int chr) {
[v _chk_chr `(i ~T0 @X0 1 sf2`*Cuc`i ]
{
[e :U _chk_chr ]
[v _str `*Cuc ~T0 @X0 1 r1 ]
[v _chr `i ~T0 @X0 1 r2 ]
[f ]
"544
[; ;ff.c: 544:  while (*str && *str != chr) str++;
[e $U 21  ]
[e :U 22 ]
[e ++ _str * -> -> 1 `i `x -> -> # *U _str `i `x ]
[e :U 21 ]
[e $ && != -> *U _str `i -> 0 `i != -> *U _str `i _chr 22  ]
[e :U 23 ]
"545
[; ;ff.c: 545:  return *str;
[e ) -> *U _str `i ]
[e $UE 20  ]
"546
[; ;ff.c: 546: }
[e :UE 20 ]
}
"700
[; ;ff.c: 700: FRESULT sync_window (
[v _sync_window `(E95 ~T0 @X0 1 sf1`*S1 ]
"703
[; ;ff.c: 703: {
{
[e :U _sync_window ]
"701
[; ;ff.c: 701:  FATFS* fs
[v _fs `*S1 ~T0 @X0 1 r1 ]
"703
[; ;ff.c: 703: {
[f ]
"704
[; ;ff.c: 704:  DWORD wsect;
[v _wsect `ul ~T0 @X0 1 a ]
"705
[; ;ff.c: 705:  UINT nf;
[v _nf `us ~T0 @X0 1 a ]
"706
[; ;ff.c: 706:  FRESULT res = FR_OK;
[v _res `E95 ~T0 @X0 1 a ]
[e = _res . `E95 0 ]
"709
[; ;ff.c: 709:  if (fs->wflag) {
[e $ ! != -> . *U _fs 4 `i -> 0 `i 25  ]
{
"710
[; ;ff.c: 710:   wsect = fs->winsect;
[e = _wsect . *U _fs 16 ]
"711
[; ;ff.c: 711:   if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
[e $ ! != -> ( _disk_write (4 , , , . *U _fs 1 -> &U . *U _fs 17 `*Cuc _wsect -> -> 1 `i `us `ui -> . `E227 0 `ui 26  ]
{
"712
[; ;ff.c: 712:    res = FR_DISK_ERR;
[e = _res . `E95 1 ]
"713
[; ;ff.c: 713:   } else {
}
[e $U 27  ]
[e :U 26 ]
{
"714
[; ;ff.c: 714:    fs->wflag = 0;
[e = . *U _fs 4 -> -> 0 `i `uc ]
"715
[; ;ff.c: 715:    if (wsect - fs->fatbase < fs->fsize) {
[e $ ! < - _wsect . *U _fs 13 . *U _fs 11 28  ]
{
"716
[; ;ff.c: 716:     for (nf = fs->n_fats; nf >= 2; nf--) {
{
[e = _nf -> . *U _fs 3 `us ]
[e $ >= -> _nf `ui -> -> 2 `i `ui 29  ]
[e $U 30  ]
[e :U 29 ]
{
"717
[; ;ff.c: 717:      wsect += fs->fsize;
[e =+ _wsect . *U _fs 11 ]
"718
[; ;ff.c: 718:      disk_write(fs->drv, fs->win, wsect, 1);
[e ( _disk_write (4 , , , . *U _fs 1 -> &U . *U _fs 17 `*Cuc _wsect -> -> 1 `i `us ]
"719
[; ;ff.c: 719:     }
}
[e -- _nf -> -> 1 `i `us ]
[e $ >= -> _nf `ui -> -> 2 `i `ui 29  ]
[e :U 30 ]
}
"720
[; ;ff.c: 720:    }
}
[e :U 28 ]
"721
[; ;ff.c: 721:   }
}
[e :U 27 ]
"722
[; ;ff.c: 722:  }
}
[e :U 25 ]
"723
[; ;ff.c: 723:  return res;
[e ) _res ]
[e $UE 24  ]
"724
[; ;ff.c: 724: }
[e :UE 24 ]
}
"729
[; ;ff.c: 729: FRESULT move_window (
[v _move_window `(E95 ~T0 @X0 1 sf2`*S1`ul ]
"733
[; ;ff.c: 733: {
{
[e :U _move_window ]
"730
[; ;ff.c: 730:  FATFS* fs,
[v _fs `*S1 ~T0 @X0 1 r1 ]
"731
[; ;ff.c: 731:  DWORD sector
[v _sector `ul ~T0 @X0 1 r2 ]
"733
[; ;ff.c: 733: {
[f ]
"734
[; ;ff.c: 734:  FRESULT res = FR_OK;
[v _res `E95 ~T0 @X0 1 a ]
[e = _res . `E95 0 ]
"737
[; ;ff.c: 737:  if (sector != fs->winsect) {
[e $ ! != _sector . *U _fs 16 33  ]
{
"739
[; ;ff.c: 739:   res = sync_window(fs);
[e = _res ( _sync_window (1 _fs ]
"741
[; ;ff.c: 741:   if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 34  ]
{
"742
[; ;ff.c: 742:    if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
[e $ ! != -> ( _disk_read (4 , , , . *U _fs 1 &U . *U _fs 17 _sector -> -> 1 `i `us `ui -> . `E227 0 `ui 35  ]
{
"743
[; ;ff.c: 743:     sector = 0xFFFFFFFF;
[e = _sector -> 4294967295 `ul ]
"744
[; ;ff.c: 744:     res = FR_DISK_ERR;
[e = _res . `E95 1 ]
"745
[; ;ff.c: 745:    }
}
[e :U 35 ]
"746
[; ;ff.c: 746:    fs->winsect = sector;
[e = . *U _fs 16 _sector ]
"747
[; ;ff.c: 747:   }
}
[e :U 34 ]
"748
[; ;ff.c: 748:  }
}
[e :U 33 ]
"749
[; ;ff.c: 749:  return res;
[e ) _res ]
[e $UE 32  ]
"750
[; ;ff.c: 750: }
[e :UE 32 ]
}
"760
[; ;ff.c: 760: FRESULT sync_fs (
[v _sync_fs `(E95 ~T0 @X0 1 sf1`*S1 ]
"763
[; ;ff.c: 763: {
{
[e :U _sync_fs ]
"761
[; ;ff.c: 761:  FATFS* fs
[v _fs `*S1 ~T0 @X0 1 r1 ]
"763
[; ;ff.c: 763: {
[f ]
"764
[; ;ff.c: 764:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"767
[; ;ff.c: 767:  res = sync_window(fs);
[e = _res ( _sync_window (1 _fs ]
"768
[; ;ff.c: 768:  if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 37  ]
{
"770
[; ;ff.c: 770:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
[e $ ! && == -> . *U _fs 0 `i -> 3 `i == -> . *U _fs 5 `i -> 1 `i 38  ]
{
"772
[; ;ff.c: 772:    mem_set(fs->win, 0, ((UINT)512));
[e ( _mem_set (3 , , -> &U . *U _fs 17 `*v -> 0 `i -> -> 512 `i `us ]
"773
[; ;ff.c: 773:    *(WORD*)(BYTE*)(fs->win + 510)=(WORD)(0xAA55);
[e = *U -> + &U . *U _fs 17 * -> -> 510 `i `x -> -> # *U &U . *U _fs 17 `i `x `*us -> -> 43605 `ui `us ]
"774
[; ;ff.c: 774:    *(DWORD*)(BYTE*)(fs->win + 0)=(DWORD)(0x41615252);
[e = *U -> + &U . *U _fs 17 * -> -> 0 `i `x -> -> # *U &U . *U _fs 17 `i `x `*ul -> -> 1096897106 `l `ul ]
"775
[; ;ff.c: 775:    *(DWORD*)(BYTE*)(fs->win + 484)=(DWORD)(0x61417272);
[e = *U -> + &U . *U _fs 17 * -> -> 484 `i `x -> -> # *U &U . *U _fs 17 `i `x `*ul -> -> 1631679090 `l `ul ]
"776
[; ;ff.c: 776:    *(DWORD*)(BYTE*)(fs->win + 488)=(DWORD)(fs->free_clust);
[e = *U -> + &U . *U _fs 17 * -> -> 488 `i `x -> -> # *U &U . *U _fs 17 `i `x `*ul . *U _fs 9 ]
"777
[; ;ff.c: 777:    *(DWORD*)(BYTE*)(fs->win + 492)=(DWORD)(fs->last_clust);
[e = *U -> + &U . *U _fs 17 * -> -> 492 `i `x -> -> # *U &U . *U _fs 17 `i `x `*ul . *U _fs 8 ]
"779
[; ;ff.c: 779:    fs->winsect = fs->volbase + 1;
[e = . *U _fs 16 + . *U _fs 12 -> -> -> 1 `i `l `ul ]
"780
[; ;ff.c: 780:    disk_write(fs->drv, fs->win, fs->winsect, 1);
[e ( _disk_write (4 , , , . *U _fs 1 -> &U . *U _fs 17 `*Cuc . *U _fs 16 -> -> 1 `i `us ]
"781
[; ;ff.c: 781:    fs->fsi_flag = 0;
[e = . *U _fs 5 -> -> 0 `i `uc ]
"782
[; ;ff.c: 782:   }
}
[e :U 38 ]
"784
[; ;ff.c: 784:   if (disk_ioctl(fs->drv, 0, 0) != RES_OK)
[e $ ! != -> ( _disk_ioctl (3 , , . *U _fs 1 -> -> 0 `i `uc -> -> 0 `i `*v `ui -> . `E227 0 `ui 39  ]
"785
[; ;ff.c: 785:    res = FR_DISK_ERR;
[e = _res . `E95 1 ]
[e :U 39 ]
"786
[; ;ff.c: 786:  }
}
[e :U 37 ]
"788
[; ;ff.c: 788:  return res;
[e ) _res ]
[e $UE 36  ]
"789
[; ;ff.c: 789: }
[e :UE 36 ]
}
"800
[; ;ff.c: 800: DWORD clust2sect (
[v _clust2sect `(ul ~T0 @X0 1 ef2`*S1`ul ]
"804
[; ;ff.c: 804: {
{
[e :U _clust2sect ]
"801
[; ;ff.c: 801:  FATFS* fs,
[v _fs `*S1 ~T0 @X0 1 r1 ]
"802
[; ;ff.c: 802:  DWORD clst
[v _clst `ul ~T0 @X0 1 r2 ]
"804
[; ;ff.c: 804: {
[f ]
"805
[; ;ff.c: 805:  clst -= 2;
[e =- _clst -> -> -> 2 `i `l `ul ]
"806
[; ;ff.c: 806:  if (clst >= fs->n_fatent - 2) return 0;
[e $ ! >= _clst - . *U _fs 10 -> -> -> 2 `i `l `ul 41  ]
[e ) -> -> -> 0 `i `l `ul ]
[e $UE 40  ]
[e :U 41 ]
"807
[; ;ff.c: 807:  return clst * fs->csize + fs->database;
[e ) + * _clst -> . *U _fs 2 `ul . *U _fs 15 ]
[e $UE 40  ]
"808
[; ;ff.c: 808: }
[e :UE 40 ]
}
"818
[; ;ff.c: 818: DWORD get_fat (
[v _get_fat `(ul ~T0 @X0 1 ef2`*S1`ul ]
"822
[; ;ff.c: 822: {
{
[e :U _get_fat ]
"819
[; ;ff.c: 819:  FATFS* fs,
[v _fs `*S1 ~T0 @X0 1 r1 ]
"820
[; ;ff.c: 820:  DWORD clst
[v _clst `ul ~T0 @X0 1 r2 ]
"822
[; ;ff.c: 822: {
[f ]
"823
[; ;ff.c: 823:  UINT wc, bc;
[v _wc `us ~T0 @X0 1 a ]
[v _bc `us ~T0 @X0 1 a ]
"824
[; ;ff.c: 824:  BYTE *p;
[v _p `*uc ~T0 @X0 1 a ]
"825
[; ;ff.c: 825:  DWORD val;
[v _val `ul ~T0 @X0 1 a ]
"828
[; ;ff.c: 828:  if (clst < 2 || clst >= fs->n_fatent) {
[e $ ! || < _clst -> -> -> 2 `i `l `ul >= _clst . *U _fs 10 43  ]
{
"829
[; ;ff.c: 829:   val = 1;
[e = _val -> -> -> 1 `i `l `ul ]
"831
[; ;ff.c: 831:  } else {
}
[e $U 44  ]
[e :U 43 ]
{
"832
[; ;ff.c: 832:   val = 0xFFFFFFFF;
[e = _val -> 4294967295 `ul ]
"834
[; ;ff.c: 834:   switch (fs->fs_type) {
[e $U 46  ]
{
"835
[; ;ff.c: 835:   case 1 :
[e :U 47 ]
"836
[; ;ff.c: 836:    bc = (UINT)clst; bc += bc / 2;
[e = _bc -> _clst `us ]
[e =+ _bc -> / -> _bc `ui -> -> 2 `i `ui `us ]
"837
[; ;ff.c: 837:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) break;
[e $ ! != -> ( _move_window (2 , _fs + . *U _fs 13 -> / -> _bc `ui -> -> -> 512 `i `us `ui `ul `ui -> . `E95 0 `ui 48  ]
[e $U 45  ]
[e :U 48 ]
"838
[; ;ff.c: 838:    wc = fs->win[bc++ % ((UINT)512)];
[e = _wc -> *U + &U . *U _fs 17 * -> % -> ++ _bc -> -> 1 `i `us `ui -> -> -> 512 `i `us `ui `ux -> -> # *U &U . *U _fs 17 `ui `ux `us ]
"839
[; ;ff.c: 839:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) break;
[e $ ! != -> ( _move_window (2 , _fs + . *U _fs 13 -> / -> _bc `ui -> -> -> 512 `i `us `ui `ul `ui -> . `E95 0 `ui 49  ]
[e $U 45  ]
[e :U 49 ]
"840
[; ;ff.c: 840:    wc |= fs->win[bc % ((UINT)512)] << 8;
[e =| _wc -> << -> *U + &U . *U _fs 17 * -> % -> _bc `ui -> -> -> 512 `i `us `ui `ux -> -> # *U &U . *U _fs 17 `ui `ux `i -> 8 `i `us ]
"841
[; ;ff.c: 841:    val = clst & 1 ? wc >> 4 : (wc & 0xFFF);
[e = _val -> ? != & _clst -> -> -> 1 `i `l `ul -> -> -> 0 `i `l `ul : >> -> _wc `ui -> 4 `i & -> _wc `ui -> -> 4095 `i `ui `ul ]
"842
[; ;ff.c: 842:    break;
[e $U 45  ]
"844
[; ;ff.c: 844:   case 2 :
[e :U 50 ]
"845
[; ;ff.c: 845:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2))) != FR_OK) break;
[e $ ! != -> ( _move_window (2 , _fs + . *U _fs 13 / _clst -> / -> -> -> 512 `i `us `ui -> -> 2 `i `ui `ul `ui -> . `E95 0 `ui 51  ]
[e $U 45  ]
[e :U 51 ]
"846
[; ;ff.c: 846:    p = &fs->win[clst * 2 % ((UINT)512)];
[e = _p &U *U + &U . *U _fs 17 * -> % * _clst -> -> -> 2 `i `l `ul -> -> -> 512 `i `us `ul `ux -> -> # *U &U . *U _fs 17 `ui `ux ]
"847
[; ;ff.c: 847:    val = (WORD)(*(WORD*)(BYTE*)(p));
[e = _val -> *U -> _p `*us `ul ]
"848
[; ;ff.c: 848:    break;
[e $U 45  ]
"850
[; ;ff.c: 850:   case 3 :
[e :U 52 ]
"851
[; ;ff.c: 851:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4))) != FR_OK) break;
[e $ ! != -> ( _move_window (2 , _fs + . *U _fs 13 / _clst -> / -> -> -> 512 `i `us `ui -> -> 4 `i `ui `ul `ui -> . `E95 0 `ui 53  ]
[e $U 45  ]
[e :U 53 ]
"852
[; ;ff.c: 852:    p = &fs->win[clst * 4 % ((UINT)512)];
[e = _p &U *U + &U . *U _fs 17 * -> % * _clst -> -> -> 4 `i `l `ul -> -> -> 512 `i `us `ul `ux -> -> # *U &U . *U _fs 17 `ui `ux ]
"853
[; ;ff.c: 853:    val = (DWORD)(*(DWORD*)(BYTE*)(p)) & 0x0FFFFFFF;
[e = _val & *U -> _p `*ul -> -> 268435455 `l `ul ]
"854
[; ;ff.c: 854:    break;
[e $U 45  ]
"856
[; ;ff.c: 856:   default:
[e :U 54 ]
"857
[; ;ff.c: 857:    val = 1;
[e = _val -> -> -> 1 `i `l `ul ]
"858
[; ;ff.c: 858:   }
}
[e $U 45  ]
[e :U 46 ]
[e [\ . *U _fs 0 , $ -> 1 `i 47
 , $ -> 2 `i 50
 , $ -> 3 `i 52
 54 ]
[e :U 45 ]
"859
[; ;ff.c: 859:  }
}
[e :U 44 ]
"861
[; ;ff.c: 861:  return val;
[e ) _val ]
[e $UE 42  ]
"862
[; ;ff.c: 862: }
[e :UE 42 ]
}
"873
[; ;ff.c: 873: FRESULT put_fat (
[v _put_fat `(E95 ~T0 @X0 1 ef3`*S1`ul`ul ]
"878
[; ;ff.c: 878: {
{
[e :U _put_fat ]
"874
[; ;ff.c: 874:  FATFS* fs,
[v _fs `*S1 ~T0 @X0 1 r1 ]
"875
[; ;ff.c: 875:  DWORD clst,
[v _clst `ul ~T0 @X0 1 r2 ]
"876
[; ;ff.c: 876:  DWORD val
[v _val `ul ~T0 @X0 1 r3 ]
"878
[; ;ff.c: 878: {
[f ]
"879
[; ;ff.c: 879:  UINT bc;
[v _bc `us ~T0 @X0 1 a ]
"880
[; ;ff.c: 880:  BYTE *p;
[v _p `*uc ~T0 @X0 1 a ]
"881
[; ;ff.c: 881:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"884
[; ;ff.c: 884:  if (clst < 2 || clst >= fs->n_fatent) {
[e $ ! || < _clst -> -> -> 2 `i `l `ul >= _clst . *U _fs 10 56  ]
{
"885
[; ;ff.c: 885:   res = FR_INT_ERR;
[e = _res . `E95 2 ]
"887
[; ;ff.c: 887:  } else {
}
[e $U 57  ]
[e :U 56 ]
{
"888
[; ;ff.c: 888:   switch (fs->fs_type) {
[e $U 59  ]
{
"889
[; ;ff.c: 889:   case 1 :
[e :U 60 ]
"890
[; ;ff.c: 890:    bc = (UINT)clst; bc += bc / 2;
[e = _bc -> _clst `us ]
[e =+ _bc -> / -> _bc `ui -> -> 2 `i `ui `us ]
"891
[; ;ff.c: 891:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
[e = _res ( _move_window (2 , _fs + . *U _fs 13 -> / -> _bc `ui -> -> -> 512 `i `us `ui `ul ]
"892
[; ;ff.c: 892:    if (res != FR_OK) break;
[e $ ! != -> _res `ui -> . `E95 0 `ui 61  ]
[e $U 58  ]
[e :U 61 ]
"893
[; ;ff.c: 893:    p = &fs->win[bc++ % ((UINT)512)];
[e = _p &U *U + &U . *U _fs 17 * -> % -> ++ _bc -> -> 1 `i `us `ui -> -> -> 512 `i `us `ui `ux -> -> # *U &U . *U _fs 17 `ui `ux ]
"894
[; ;ff.c: 894:    *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
[e = *U _p -> ? != & _clst -> -> -> 1 `i `l `ul -> -> -> 0 `i `l `ul : | & -> *U _p `i -> 15 `i << -> -> _val `uc `i -> 4 `i -> -> _val `uc `i `uc ]
"895
[; ;ff.c: 895:    fs->wflag = 1;
[e = . *U _fs 4 -> -> 1 `i `uc ]
"896
[; ;ff.c: 896:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
[e = _res ( _move_window (2 , _fs + . *U _fs 13 -> / -> _bc `ui -> -> -> 512 `i `us `ui `ul ]
"897
[; ;ff.c: 897:    if (res != FR_OK) break;
[e $ ! != -> _res `ui -> . `E95 0 `ui 62  ]
[e $U 58  ]
[e :U 62 ]
"898
[; ;ff.c: 898:    p = &fs->win[bc % ((UINT)512)];
[e = _p &U *U + &U . *U _fs 17 * -> % -> _bc `ui -> -> -> 512 `i `us `ui `ux -> -> # *U &U . *U _fs 17 `ui `ux ]
"899
[; ;ff.c: 899:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
[e = *U _p -> ? != & _clst -> -> -> 1 `i `l `ul -> -> -> 0 `i `l `ul : -> -> >> _val -> 4 `i `uc `i | & -> *U _p `i -> 240 `i & -> -> >> _val -> 8 `i `uc `i -> 15 `i `uc ]
"900
[; ;ff.c: 900:    fs->wflag = 1;
[e = . *U _fs 4 -> -> 1 `i `uc ]
"901
[; ;ff.c: 901:    break;
[e $U 58  ]
"903
[; ;ff.c: 903:   case 2 :
[e :U 63 ]
"904
[; ;ff.c: 904:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2)));
[e = _res ( _move_window (2 , _fs + . *U _fs 13 / _clst -> / -> -> -> 512 `i `us `ui -> -> 2 `i `ui `ul ]
"905
[; ;ff.c: 905:    if (res != FR_OK) break;
[e $ ! != -> _res `ui -> . `E95 0 `ui 64  ]
[e $U 58  ]
[e :U 64 ]
"906
[; ;ff.c: 906:    p = &fs->win[clst * 2 % ((UINT)512)];
[e = _p &U *U + &U . *U _fs 17 * -> % * _clst -> -> -> 2 `i `l `ul -> -> -> 512 `i `us `ul `ux -> -> # *U &U . *U _fs 17 `ui `ux ]
"907
[; ;ff.c: 907:    *(WORD*)(BYTE*)(p)=(WORD)((WORD)val);
[e = *U -> _p `*us -> _val `us ]
"908
[; ;ff.c: 908:    fs->wflag = 1;
[e = . *U _fs 4 -> -> 1 `i `uc ]
"909
[; ;ff.c: 909:    break;
[e $U 58  ]
"911
[; ;ff.c: 911:   case 3 :
[e :U 65 ]
"912
[; ;ff.c: 912:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4)));
[e = _res ( _move_window (2 , _fs + . *U _fs 13 / _clst -> / -> -> -> 512 `i `us `ui -> -> 4 `i `ui `ul ]
"913
[; ;ff.c: 913:    if (res != FR_OK) break;
[e $ ! != -> _res `ui -> . `E95 0 `ui 66  ]
[e $U 58  ]
[e :U 66 ]
"914
[; ;ff.c: 914:    p = &fs->win[clst * 4 % ((UINT)512)];
[e = _p &U *U + &U . *U _fs 17 * -> % * _clst -> -> -> 4 `i `l `ul -> -> -> 512 `i `us `ul `ux -> -> # *U &U . *U _fs 17 `ui `ux ]
"915
[; ;ff.c: 915:    val |= (DWORD)(*(DWORD*)(BYTE*)(p)) & 0xF0000000;
[e =| _val & *U -> _p `*ul -> 4026531840 `ul ]
"916
[; ;ff.c: 916:    *(DWORD*)(BYTE*)(p)=(DWORD)(val);
[e = *U -> _p `*ul _val ]
"917
[; ;ff.c: 917:    fs->wflag = 1;
[e = . *U _fs 4 -> -> 1 `i `uc ]
"918
[; ;ff.c: 918:    break;
[e $U 58  ]
"920
[; ;ff.c: 920:   default :
[e :U 67 ]
"921
[; ;ff.c: 921:    res = FR_INT_ERR;
[e = _res . `E95 2 ]
"922
[; ;ff.c: 922:   }
}
[e $U 58  ]
[e :U 59 ]
[e [\ . *U _fs 0 , $ -> 1 `i 60
 , $ -> 2 `i 63
 , $ -> 3 `i 65
 67 ]
[e :U 58 ]
"923
[; ;ff.c: 923:  }
}
[e :U 57 ]
"925
[; ;ff.c: 925:  return res;
[e ) _res ]
[e $UE 55  ]
"926
[; ;ff.c: 926: }
[e :UE 55 ]
}
"937
[; ;ff.c: 937: FRESULT remove_chain (
[v _remove_chain `(E95 ~T0 @X0 1 sf2`*S1`ul ]
"941
[; ;ff.c: 941: {
{
[e :U _remove_chain ]
"938
[; ;ff.c: 938:  FATFS* fs,
[v _fs `*S1 ~T0 @X0 1 r1 ]
"939
[; ;ff.c: 939:  DWORD clst
[v _clst `ul ~T0 @X0 1 r2 ]
"941
[; ;ff.c: 941: {
[f ]
"942
[; ;ff.c: 942:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"943
[; ;ff.c: 943:  DWORD nxt;
[v _nxt `ul ~T0 @X0 1 a ]
"948
[; ;ff.c: 948:  if (clst < 2 || clst >= fs->n_fatent) {
[e $ ! || < _clst -> -> -> 2 `i `l `ul >= _clst . *U _fs 10 69  ]
{
"949
[; ;ff.c: 949:   res = FR_INT_ERR;
[e = _res . `E95 2 ]
"951
[; ;ff.c: 951:  } else {
}
[e $U 70  ]
[e :U 69 ]
{
"952
[; ;ff.c: 952:   res = FR_OK;
[e = _res . `E95 0 ]
"953
[; ;ff.c: 953:   while (clst < fs->n_fatent) {
[e $U 71  ]
[e :U 72 ]
{
"954
[; ;ff.c: 954:    nxt = get_fat(fs, clst);
[e = _nxt ( _get_fat (2 , _fs _clst ]
"955
[; ;ff.c: 955:    if (nxt == 0) break;
[e $ ! == _nxt -> -> -> 0 `i `l `ul 74  ]
[e $U 73  ]
[e :U 74 ]
"956
[; ;ff.c: 956:    if (nxt == 1) { res = FR_INT_ERR; break; }
[e $ ! == _nxt -> -> -> 1 `i `l `ul 75  ]
{
[e = _res . `E95 2 ]
[e $U 73  ]
}
[e :U 75 ]
"957
[; ;ff.c: 957:    if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
[e $ ! == _nxt -> 4294967295 `ul 76  ]
{
[e = _res . `E95 1 ]
[e $U 73  ]
}
[e :U 76 ]
"958
[; ;ff.c: 958:    res = put_fat(fs, clst, 0);
[e = _res ( _put_fat (3 , , _fs _clst -> -> -> 0 `i `l `ul ]
"959
[; ;ff.c: 959:    if (res != FR_OK) break;
[e $ ! != -> _res `ui -> . `E95 0 `ui 77  ]
[e $U 73  ]
[e :U 77 ]
"960
[; ;ff.c: 960:    if (fs->free_clust != 0xFFFFFFFF) {
[e $ ! != . *U _fs 9 -> 4294967295 `ul 78  ]
{
"961
[; ;ff.c: 961:     fs->free_clust++;
[e ++ . *U _fs 9 -> -> -> 1 `i `l `ul ]
"962
[; ;ff.c: 962:     fs->fsi_flag |= 1;
[e =| . *U _fs 5 -> -> 1 `i `uc ]
"963
[; ;ff.c: 963:    }
}
[e :U 78 ]
"974
[; ;ff.c: 974:    clst = nxt;
[e = _clst _nxt ]
"975
[; ;ff.c: 975:   }
}
[e :U 71 ]
"953
[; ;ff.c: 953:   while (clst < fs->n_fatent) {
[e $ < _clst . *U _fs 10 72  ]
[e :U 73 ]
"976
[; ;ff.c: 976:  }
}
[e :U 70 ]
"978
[; ;ff.c: 978:  return res;
[e ) _res ]
[e $UE 68  ]
"979
[; ;ff.c: 979: }
[e :UE 68 ]
}
"990
[; ;ff.c: 990: DWORD create_chain (
[v _create_chain `(ul ~T0 @X0 1 sf2`*S1`ul ]
"994
[; ;ff.c: 994: {
{
[e :U _create_chain ]
"991
[; ;ff.c: 991:  FATFS* fs,
[v _fs `*S1 ~T0 @X0 1 r1 ]
"992
[; ;ff.c: 992:  DWORD clst
[v _clst `ul ~T0 @X0 1 r2 ]
"994
[; ;ff.c: 994: {
[f ]
"995
[; ;ff.c: 995:  DWORD cs, ncl, scl;
[v _cs `ul ~T0 @X0 1 a ]
[v _ncl `ul ~T0 @X0 1 a ]
[v _scl `ul ~T0 @X0 1 a ]
"996
[; ;ff.c: 996:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"999
[; ;ff.c: 999:  if (clst == 0) {
[e $ ! == _clst -> -> -> 0 `i `l `ul 80  ]
{
"1000
[; ;ff.c: 1000:   scl = fs->last_clust;
[e = _scl . *U _fs 8 ]
"1001
[; ;ff.c: 1001:   if (!scl || scl >= fs->n_fatent) scl = 1;
[e $ ! || ! != _scl -> -> -> 0 `i `l `ul >= _scl . *U _fs 10 81  ]
[e = _scl -> -> -> 1 `i `l `ul ]
[e :U 81 ]
"1002
[; ;ff.c: 1002:  }
}
[e $U 82  ]
"1003
[; ;ff.c: 1003:  else {
[e :U 80 ]
{
"1004
[; ;ff.c: 1004:   cs = get_fat(fs, clst);
[e = _cs ( _get_fat (2 , _fs _clst ]
"1005
[; ;ff.c: 1005:   if (cs < 2) return 1;
[e $ ! < _cs -> -> -> 2 `i `l `ul 83  ]
[e ) -> -> -> 1 `i `l `ul ]
[e $UE 79  ]
[e :U 83 ]
"1006
[; ;ff.c: 1006:   if (cs == 0xFFFFFFFF) return cs;
[e $ ! == _cs -> 4294967295 `ul 84  ]
[e ) _cs ]
[e $UE 79  ]
[e :U 84 ]
"1007
[; ;ff.c: 1007:   if (cs < fs->n_fatent) return cs;
[e $ ! < _cs . *U _fs 10 85  ]
[e ) _cs ]
[e $UE 79  ]
[e :U 85 ]
"1008
[; ;ff.c: 1008:   scl = clst;
[e = _scl _clst ]
"1009
[; ;ff.c: 1009:  }
}
[e :U 82 ]
"1011
[; ;ff.c: 1011:  ncl = scl;
[e = _ncl _scl ]
"1012
[; ;ff.c: 1012:  for (;;) {
{
[e :U 86 ]
{
"1013
[; ;ff.c: 1013:   ncl++;
[e ++ _ncl -> -> -> 1 `i `l `ul ]
"1014
[; ;ff.c: 1014:   if (ncl >= fs->n_fatent) {
[e $ ! >= _ncl . *U _fs 10 89  ]
{
"1015
[; ;ff.c: 1015:    ncl = 2;
[e = _ncl -> -> -> 2 `i `l `ul ]
"1016
[; ;ff.c: 1016:    if (ncl > scl) return 0;
[e $ ! > _ncl _scl 90  ]
[e ) -> -> -> 0 `i `l `ul ]
[e $UE 79  ]
[e :U 90 ]
"1017
[; ;ff.c: 1017:   }
}
[e :U 89 ]
"1018
[; ;ff.c: 1018:   cs = get_fat(fs, ncl);
[e = _cs ( _get_fat (2 , _fs _ncl ]
"1019
[; ;ff.c: 1019:   if (cs == 0) break;
[e $ ! == _cs -> -> -> 0 `i `l `ul 91  ]
[e $U 87  ]
[e :U 91 ]
"1020
[; ;ff.c: 1020:   if (cs == 0xFFFFFFFF || cs == 1)
[e $ ! || == _cs -> 4294967295 `ul == _cs -> -> -> 1 `i `l `ul 92  ]
"1021
[; ;ff.c: 1021:    return cs;
[e ) _cs ]
[e $UE 79  ]
[e :U 92 ]
"1022
[; ;ff.c: 1022:   if (ncl == scl) return 0;
[e $ ! == _ncl _scl 93  ]
[e ) -> -> -> 0 `i `l `ul ]
[e $UE 79  ]
[e :U 93 ]
"1023
[; ;ff.c: 1023:  }
}
[e $U 86  ]
[e :U 87 ]
}
"1025
[; ;ff.c: 1025:  res = put_fat(fs, ncl, 0x0FFFFFFF);
[e = _res ( _put_fat (3 , , _fs _ncl -> -> 268435455 `l `ul ]
"1026
[; ;ff.c: 1026:  if (res == FR_OK && clst != 0) {
[e $ ! && == -> _res `ui -> . `E95 0 `ui != _clst -> -> -> 0 `i `l `ul 94  ]
{
"1027
[; ;ff.c: 1027:   res = put_fat(fs, clst, ncl);
[e = _res ( _put_fat (3 , , _fs _clst _ncl ]
"1028
[; ;ff.c: 1028:  }
}
[e :U 94 ]
"1029
[; ;ff.c: 1029:  if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 95  ]
{
"1030
[; ;ff.c: 1030:   fs->last_clust = ncl;
[e = . *U _fs 8 _ncl ]
"1031
[; ;ff.c: 1031:   if (fs->free_clust != 0xFFFFFFFF) {
[e $ ! != . *U _fs 9 -> 4294967295 `ul 96  ]
{
"1032
[; ;ff.c: 1032:    fs->free_clust--;
[e -- . *U _fs 9 -> -> -> 1 `i `l `ul ]
"1033
[; ;ff.c: 1033:    fs->fsi_flag |= 1;
[e =| . *U _fs 5 -> -> 1 `i `uc ]
"1034
[; ;ff.c: 1034:   }
}
[e :U 96 ]
"1035
[; ;ff.c: 1035:  } else {
}
[e $U 97  ]
[e :U 95 ]
{
"1036
[; ;ff.c: 1036:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
[e = _ncl ? == -> _res `ui -> . `E95 1 `ui : -> 4294967295 `ul -> -> -> 1 `i `l `ul ]
"1037
[; ;ff.c: 1037:  }
}
[e :U 97 ]
"1039
[; ;ff.c: 1039:  return ncl;
[e ) _ncl ]
[e $UE 79  ]
"1040
[; ;ff.c: 1040: }
[e :UE 79 ]
}
"1080
[; ;ff.c: 1080: FRESULT dir_sdi (
[v _dir_sdi `(E95 ~T0 @X0 1 sf2`*S3`us ]
"1084
[; ;ff.c: 1084: {
{
[e :U _dir_sdi ]
"1081
[; ;ff.c: 1081:  DIR* dp,
[v _dp `*S3 ~T0 @X0 1 r1 ]
"1082
[; ;ff.c: 1082:  UINT idx
[v _idx `us ~T0 @X0 1 r2 ]
"1084
[; ;ff.c: 1084: {
[f ]
"1085
[; ;ff.c: 1085:  DWORD clst, sect;
[v _clst `ul ~T0 @X0 1 a ]
[v _sect `ul ~T0 @X0 1 a ]
"1086
[; ;ff.c: 1086:  UINT ic;
[v _ic `us ~T0 @X0 1 a ]
"1089
[; ;ff.c: 1089:  dp->index = (WORD)idx;
[e = . *U _dp 2 _idx ]
"1090
[; ;ff.c: 1090:  clst = dp->sclust;
[e = _clst . *U _dp 3 ]
"1091
[; ;ff.c: 1091:  if (clst == 1 || clst >= dp->fs->n_fatent)
[e $ ! || == _clst -> -> -> 1 `i `l `ul >= _clst . *U . *U _dp 0 10 99  ]
"1092
[; ;ff.c: 1092:   return FR_INT_ERR;
[e ) . `E95 2 ]
[e $UE 98  ]
[e :U 99 ]
"1093
[; ;ff.c: 1093:  if (!clst && dp->fs->fs_type == 3)
[e $ ! && ! != _clst -> -> -> 0 `i `l `ul == -> . *U . *U _dp 0 0 `i -> 3 `i 100  ]
"1094
[; ;ff.c: 1094:   clst = dp->fs->dirbase;
[e = _clst . *U . *U _dp 0 14 ]
[e :U 100 ]
"1096
[; ;ff.c: 1096:  if (clst == 0) {
[e $ ! == _clst -> -> -> 0 `i `l `ul 101  ]
{
"1097
[; ;ff.c: 1097:   if (idx >= dp->fs->n_rootdir)
[e $ ! >= -> _idx `ui -> . *U . *U _dp 0 7 `ui 102  ]
"1098
[; ;ff.c: 1098:    return FR_INT_ERR;
[e ) . `E95 2 ]
[e $UE 98  ]
[e :U 102 ]
"1099
[; ;ff.c: 1099:   sect = dp->fs->dirbase;
[e = _sect . *U . *U _dp 0 14 ]
"1100
[; ;ff.c: 1100:  }
}
[e $U 103  ]
"1101
[; ;ff.c: 1101:  else {
[e :U 101 ]
{
"1102
[; ;ff.c: 1102:   ic = ((UINT)512) / 32 * dp->fs->csize;
[e = _ic -> * / -> -> -> 512 `i `us `ui -> -> 32 `i `ui -> . *U . *U _dp 0 2 `ui `us ]
"1103
[; ;ff.c: 1103:   while (idx >= ic) {
[e $U 104  ]
[e :U 105 ]
{
"1104
[; ;ff.c: 1104:    clst = get_fat(dp->fs, clst);
[e = _clst ( _get_fat (2 , . *U _dp 0 _clst ]
"1105
[; ;ff.c: 1105:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
[e $ ! == _clst -> 4294967295 `ul 107  ]
[e ) . `E95 1 ]
[e $UE 98  ]
[e :U 107 ]
"1106
[; ;ff.c: 1106:    if (clst < 2 || clst >= dp->fs->n_fatent)
[e $ ! || < _clst -> -> -> 2 `i `l `ul >= _clst . *U . *U _dp 0 10 108  ]
"1107
[; ;ff.c: 1107:     return FR_INT_ERR;
[e ) . `E95 2 ]
[e $UE 98  ]
[e :U 108 ]
"1108
[; ;ff.c: 1108:    idx -= ic;
[e =- _idx -> _ic `us ]
"1109
[; ;ff.c: 1109:   }
}
[e :U 104 ]
"1103
[; ;ff.c: 1103:   while (idx >= ic) {
[e $ >= -> _idx `ui -> _ic `ui 105  ]
[e :U 106 ]
"1110
[; ;ff.c: 1110:   sect = clust2sect(dp->fs, clst);
[e = _sect ( _clust2sect (2 , . *U _dp 0 _clst ]
"1111
[; ;ff.c: 1111:  }
}
[e :U 103 ]
"1112
[; ;ff.c: 1112:  dp->clust = clst;
[e = . *U _dp 4 _clst ]
"1113
[; ;ff.c: 1113:  if (!sect) return FR_INT_ERR;
[e $ ! ! != _sect -> -> -> 0 `i `l `ul 109  ]
[e ) . `E95 2 ]
[e $UE 98  ]
[e :U 109 ]
"1114
[; ;ff.c: 1114:  dp->sect = sect + idx / (((UINT)512) / 32);
[e = . *U _dp 5 + _sect -> / -> _idx `ui / -> -> -> 512 `i `us `ui -> -> 32 `i `ui `ul ]
"1115
[; ;ff.c: 1115:  dp->dir = dp->fs->win + (idx % (((UINT)512) / 32)) * 32;
[e = . *U _dp 6 + &U . *U . *U _dp 0 17 * -> * % -> _idx `ui / -> -> -> 512 `i `us `ui -> -> 32 `i `ui -> -> 32 `i `ui `ux -> -> # *U &U . *U . *U _dp 0 17 `ui `ux ]
"1117
[; ;ff.c: 1117:  return FR_OK;
[e ) . `E95 0 ]
[e $UE 98  ]
"1118
[; ;ff.c: 1118: }
[e :UE 98 ]
}
"1128
[; ;ff.c: 1128: FRESULT dir_next (
[v _dir_next `(E95 ~T0 @X0 1 sf2`*S3`i ]
"1132
[; ;ff.c: 1132: {
{
[e :U _dir_next ]
"1129
[; ;ff.c: 1129:  DIR* dp,
[v _dp `*S3 ~T0 @X0 1 r1 ]
"1130
[; ;ff.c: 1130:  int stretch
[v _stretch `i ~T0 @X0 1 r2 ]
"1132
[; ;ff.c: 1132: {
[f ]
"1133
[; ;ff.c: 1133:  DWORD clst;
[v _clst `ul ~T0 @X0 1 a ]
"1134
[; ;ff.c: 1134:  UINT i;
[v _i `us ~T0 @X0 1 a ]
"1136
[; ;ff.c: 1136:  UINT c;
[v _c `us ~T0 @X0 1 a ]
"1140
[; ;ff.c: 1140:  i = dp->index + 1;
[e = _i -> + -> . *U _dp 2 `ui -> -> 1 `i `ui `us ]
"1141
[; ;ff.c: 1141:  if (!(i & 0xFFFF) || !dp->sect)
[e $ ! || ! != & -> _i `ui -> 65535 `ui -> -> 0 `i `ui ! != . *U _dp 5 -> -> -> 0 `i `l `ul 111  ]
"1142
[; ;ff.c: 1142:   return FR_NO_FILE;
[e ) . `E95 4 ]
[e $UE 110  ]
[e :U 111 ]
"1144
[; ;ff.c: 1144:  if (!(i % (((UINT)512) / 32))) {
[e $ ! ! != % -> _i `ui / -> -> -> 512 `i `us `ui -> -> 32 `i `ui -> -> 0 `i `ui 112  ]
{
"1145
[; ;ff.c: 1145:   dp->sect++;
[e ++ . *U _dp 5 -> -> -> 1 `i `l `ul ]
"1147
[; ;ff.c: 1147:   if (!dp->clust) {
[e $ ! ! != . *U _dp 4 -> -> -> 0 `i `l `ul 113  ]
{
"1148
[; ;ff.c: 1148:    if (i >= dp->fs->n_rootdir)
[e $ ! >= -> _i `ui -> . *U . *U _dp 0 7 `ui 114  ]
"1149
[; ;ff.c: 1149:     return FR_NO_FILE;
[e ) . `E95 4 ]
[e $UE 110  ]
[e :U 114 ]
"1150
[; ;ff.c: 1150:   }
}
[e $U 115  ]
"1151
[; ;ff.c: 1151:   else {
[e :U 113 ]
{
"1152
[; ;ff.c: 1152:    if (((i / (((UINT)512) / 32)) & (dp->fs->csize - 1)) == 0) {
[e $ ! == & / -> _i `ui / -> -> -> 512 `i `us `ui -> -> 32 `i `ui -> - -> . *U . *U _dp 0 2 `i -> 1 `i `ui -> -> 0 `i `ui 116  ]
{
"1153
[; ;ff.c: 1153:     clst = get_fat(dp->fs, dp->clust);
[e = _clst ( _get_fat (2 , . *U _dp 0 . *U _dp 4 ]
"1154
[; ;ff.c: 1154:     if (clst <= 1) return FR_INT_ERR;
[e $ ! <= _clst -> -> -> 1 `i `l `ul 117  ]
[e ) . `E95 2 ]
[e $UE 110  ]
[e :U 117 ]
"1155
[; ;ff.c: 1155:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
[e $ ! == _clst -> 4294967295 `ul 118  ]
[e ) . `E95 1 ]
[e $UE 110  ]
[e :U 118 ]
"1156
[; ;ff.c: 1156:     if (clst >= dp->fs->n_fatent) {
[e $ ! >= _clst . *U . *U _dp 0 10 119  ]
{
"1158
[; ;ff.c: 1158:      if (!stretch) return FR_NO_FILE;
[e $ ! ! != _stretch -> 0 `i 120  ]
[e ) . `E95 4 ]
[e $UE 110  ]
[e :U 120 ]
"1159
[; ;ff.c: 1159:      clst = create_chain(dp->fs, dp->clust);
[e = _clst ( _create_chain (2 , . *U _dp 0 . *U _dp 4 ]
"1160
[; ;ff.c: 1160:      if (clst == 0) return FR_DENIED;
[e $ ! == _clst -> -> -> 0 `i `l `ul 121  ]
[e ) . `E95 7 ]
[e $UE 110  ]
[e :U 121 ]
"1161
[; ;ff.c: 1161:      if (clst == 1) return FR_INT_ERR;
[e $ ! == _clst -> -> -> 1 `i `l `ul 122  ]
[e ) . `E95 2 ]
[e $UE 110  ]
[e :U 122 ]
"1162
[; ;ff.c: 1162:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
[e $ ! == _clst -> 4294967295 `ul 123  ]
[e ) . `E95 1 ]
[e $UE 110  ]
[e :U 123 ]
"1164
[; ;ff.c: 1164:      if (sync_window(dp->fs)) return FR_DISK_ERR;
[e $ ! != -> ( _sync_window (1 . *U _dp 0 `ui -> -> 0 `i `ui 124  ]
[e ) . `E95 1 ]
[e $UE 110  ]
[e :U 124 ]
"1165
[; ;ff.c: 1165:      mem_set(dp->fs->win, 0, ((UINT)512));
[e ( _mem_set (3 , , -> &U . *U . *U _dp 0 17 `*v -> 0 `i -> -> 512 `i `us ]
"1166
[; ;ff.c: 1166:      dp->fs->winsect = clust2sect(dp->fs, clst);
[e = . *U . *U _dp 0 16 ( _clust2sect (2 , . *U _dp 0 _clst ]
"1167
[; ;ff.c: 1167:      for (c = 0; c < dp->fs->csize; c++) {
{
[e = _c -> -> 0 `i `us ]
[e $U 128  ]
[e :U 125 ]
{
"1168
[; ;ff.c: 1168:       dp->fs->wflag = 1;
[e = . *U . *U _dp 0 4 -> -> 1 `i `uc ]
"1169
[; ;ff.c: 1169:       if (sync_window(dp->fs)) return FR_DISK_ERR;
[e $ ! != -> ( _sync_window (1 . *U _dp 0 `ui -> -> 0 `i `ui 129  ]
[e ) . `E95 1 ]
[e $UE 110  ]
[e :U 129 ]
"1170
[; ;ff.c: 1170:       dp->fs->winsect++;
[e ++ . *U . *U _dp 0 16 -> -> -> 1 `i `l `ul ]
"1171
[; ;ff.c: 1171:      }
}
[e ++ _c -> -> 1 `i `us ]
[e :U 128 ]
[e $ < -> _c `ui -> . *U . *U _dp 0 2 `ui 125  ]
[e :U 126 ]
}
"1172
[; ;ff.c: 1172:      dp->fs->winsect -= c;
[e =- . *U . *U _dp 0 16 -> _c `ul ]
"1177
[; ;ff.c: 1177:     }
}
[e :U 119 ]
"1178
[; ;ff.c: 1178:     dp->clust = clst;
[e = . *U _dp 4 _clst ]
"1179
[; ;ff.c: 1179:     dp->sect = clust2sect(dp->fs, clst);
[e = . *U _dp 5 ( _clust2sect (2 , . *U _dp 0 _clst ]
"1180
[; ;ff.c: 1180:    }
}
[e :U 116 ]
"1181
[; ;ff.c: 1181:   }
}
[e :U 115 ]
"1182
[; ;ff.c: 1182:  }
}
[e :U 112 ]
"1184
[; ;ff.c: 1184:  dp->index = (WORD)i;
[e = . *U _dp 2 _i ]
"1185
[; ;ff.c: 1185:  dp->dir = dp->fs->win + (i % (((UINT)512) / 32)) * 32;
[e = . *U _dp 6 + &U . *U . *U _dp 0 17 * -> * % -> _i `ui / -> -> -> 512 `i `us `ui -> -> 32 `i `ui -> -> 32 `i `ui `ux -> -> # *U &U . *U . *U _dp 0 17 `ui `ux ]
"1187
[; ;ff.c: 1187:  return FR_OK;
[e ) . `E95 0 ]
[e $UE 110  ]
"1188
[; ;ff.c: 1188: }
[e :UE 110 ]
}
"1199
[; ;ff.c: 1199: FRESULT dir_alloc (
[v _dir_alloc `(E95 ~T0 @X0 1 sf2`*S3`us ]
"1203
[; ;ff.c: 1203: {
{
[e :U _dir_alloc ]
"1200
[; ;ff.c: 1200:  DIR* dp,
[v _dp `*S3 ~T0 @X0 1 r1 ]
"1201
[; ;ff.c: 1201:  UINT nent
[v _nent `us ~T0 @X0 1 r2 ]
"1203
[; ;ff.c: 1203: {
[f ]
"1204
[; ;ff.c: 1204:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"1205
[; ;ff.c: 1205:  UINT n;
[v _n `us ~T0 @X0 1 a ]
"1208
[; ;ff.c: 1208:  res = dir_sdi(dp, 0);
[e = _res ( _dir_sdi (2 , _dp -> -> 0 `i `us ]
"1209
[; ;ff.c: 1209:  if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 131  ]
{
"1210
[; ;ff.c: 1210:   n = 0;
[e = _n -> -> 0 `i `us ]
"1211
[; ;ff.c: 1211:   do {
[e :U 134 ]
{
"1212
[; ;ff.c: 1212:    res = move_window(dp->fs, dp->sect);
[e = _res ( _move_window (2 , . *U _dp 0 . *U _dp 5 ]
"1213
[; ;ff.c: 1213:    if (res != FR_OK) break;
[e $ ! != -> _res `ui -> . `E95 0 `ui 135  ]
[e $U 133  ]
[e :U 135 ]
"1214
[; ;ff.c: 1214:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
[e $ ! || == -> *U + . *U _dp 6 * -> -> 0 `i `x -> -> # *U . *U _dp 6 `i `x `i -> 229 `i == -> *U + . *U _dp 6 * -> -> 0 `i `x -> -> # *U . *U _dp 6 `i `x `i -> 0 `i 136  ]
{
"1215
[; ;ff.c: 1215:     if (++n == nent) break;
[e $ ! == -> =+ _n -> -> 1 `i `us `ui -> _nent `ui 137  ]
[e $U 133  ]
[e :U 137 ]
"1216
[; ;ff.c: 1216:    } else {
}
[e $U 138  ]
[e :U 136 ]
{
"1217
[; ;ff.c: 1217:     n = 0;
[e = _n -> -> 0 `i `us ]
"1218
[; ;ff.c: 1218:    }
}
[e :U 138 ]
"1219
[; ;ff.c: 1219:    res = dir_next(dp, 1);
[e = _res ( _dir_next (2 , _dp -> 1 `i ]
"1220
[; ;ff.c: 1220:   } while (res == FR_OK);
}
[e $ == -> _res `ui -> . `E95 0 `ui 134  ]
[e :U 133 ]
"1221
[; ;ff.c: 1221:  }
}
[e :U 131 ]
"1222
[; ;ff.c: 1222:  if (res == FR_NO_FILE) res = FR_DENIED;
[e $ ! == -> _res `ui -> . `E95 4 `ui 139  ]
[e = _res . `E95 7 ]
[e :U 139 ]
"1223
[; ;ff.c: 1223:  return res;
[e ) _res ]
[e $UE 130  ]
"1224
[; ;ff.c: 1224: }
[e :UE 130 ]
}
"1235
[; ;ff.c: 1235: DWORD ld_clust (
[v _ld_clust `(ul ~T0 @X0 1 sf2`*S1`*Cuc ]
"1239
[; ;ff.c: 1239: {
{
[e :U _ld_clust ]
"1236
[; ;ff.c: 1236:  FATFS* fs,
[v _fs `*S1 ~T0 @X0 1 r1 ]
"1237
[; ;ff.c: 1237:  const BYTE* dir
[v _dir `*Cuc ~T0 @X0 1 r2 ]
"1239
[; ;ff.c: 1239: {
[f ]
"1240
[; ;ff.c: 1240:  DWORD cl;
[v _cl `ul ~T0 @X0 1 a ]
"1242
[; ;ff.c: 1242:  cl = (WORD)(*(WORD*)(BYTE*)(dir + 26));
[e = _cl -> *U -> -> + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `*uc `*us `ul ]
"1243
[; ;ff.c: 1243:  if (fs->fs_type == 3)
[e $ ! == -> . *U _fs 0 `i -> 3 `i 141  ]
"1244
[; ;ff.c: 1244:   cl |= (DWORD)(WORD)(*(WORD*)(BYTE*)(dir + 20)) << 16;
[e =| _cl << -> *U -> -> + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `*uc `*us `ul -> 16 `i ]
[e :U 141 ]
"1246
[; ;ff.c: 1246:  return cl;
[e ) _cl ]
[e $UE 140  ]
"1247
[; ;ff.c: 1247: }
[e :UE 140 ]
}
"1252
[; ;ff.c: 1252: void st_clust (
[v _st_clust `(v ~T0 @X0 1 sf2`*uc`ul ]
"1256
[; ;ff.c: 1256: {
{
[e :U _st_clust ]
"1253
[; ;ff.c: 1253:  BYTE* dir,
[v _dir `*uc ~T0 @X0 1 r1 ]
"1254
[; ;ff.c: 1254:  DWORD cl
[v _cl `ul ~T0 @X0 1 r2 ]
"1256
[; ;ff.c: 1256: {
[f ]
"1257
[; ;ff.c: 1257:  *(WORD*)(BYTE*)(dir + 26)=(WORD)(cl);
[e = *U -> + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `*us -> _cl `us ]
"1258
[; ;ff.c: 1258:  *(WORD*)(BYTE*)(dir + 20)=(WORD)(cl >> 16);
[e = *U -> + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `*us -> >> _cl -> 16 `i `us ]
"1259
[; ;ff.c: 1259: }
[e :UE 142 ]
}
"1458
[; ;ff.c: 1458: FRESULT dir_find (
[v _dir_find `(E95 ~T0 @X0 1 sf1`*S3 ]
"1461
[; ;ff.c: 1461: {
{
[e :U _dir_find ]
"1459
[; ;ff.c: 1459:  DIR* dp
[v _dp `*S3 ~T0 @X0 1 r1 ]
"1461
[; ;ff.c: 1461: {
[f ]
"1462
[; ;ff.c: 1462:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"1463
[; ;ff.c: 1463:  BYTE c, *dir;
[v _c `uc ~T0 @X0 1 a ]
[v _dir `*uc ~T0 @X0 1 a ]
"1468
[; ;ff.c: 1468:  res = dir_sdi(dp, 0);
[e = _res ( _dir_sdi (2 , _dp -> -> 0 `i `us ]
"1469
[; ;ff.c: 1469:  if (res != FR_OK) return res;
[e $ ! != -> _res `ui -> . `E95 0 `ui 144  ]
[e ) _res ]
[e $UE 143  ]
[e :U 144 ]
"1474
[; ;ff.c: 1474:  do {
[e :U 147 ]
{
"1475
[; ;ff.c: 1475:   res = move_window(dp->fs, dp->sect);
[e = _res ( _move_window (2 , . *U _dp 0 . *U _dp 5 ]
"1476
[; ;ff.c: 1476:   if (res != FR_OK) break;
[e $ ! != -> _res `ui -> . `E95 0 `ui 148  ]
[e $U 146  ]
[e :U 148 ]
"1477
[; ;ff.c: 1477:   dir = dp->dir;
[e = _dir . *U _dp 6 ]
"1478
[; ;ff.c: 1478:   c = dir[0];
[e = _c *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x ]
"1479
[; ;ff.c: 1479:   if (c == 0) { res = FR_NO_FILE; break; }
[e $ ! == -> _c `i -> 0 `i 149  ]
{
[e = _res . `E95 4 ]
[e $U 146  ]
}
[e :U 149 ]
"1502
[; ;ff.c: 1502:   if (!(dir[11] & 0x08) && !mem_cmp(dir, dp->fn, 11))
[e $ ! && ! != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 8 `i -> 0 `i ! != ( _mem_cmp (3 , , -> _dir `*Cv -> . *U _dp 7 `*Cv -> -> 11 `i `us -> 0 `i 150  ]
"1503
[; ;ff.c: 1503:    break;
[e $U 146  ]
[e :U 150 ]
"1505
[; ;ff.c: 1505:   res = dir_next(dp, 0);
[e = _res ( _dir_next (2 , _dp -> 0 `i ]
"1506
[; ;ff.c: 1506:  } while (res == FR_OK);
}
[e $ == -> _res `ui -> . `E95 0 `ui 147  ]
[e :U 146 ]
"1508
[; ;ff.c: 1508:  return res;
[e ) _res ]
[e $UE 143  ]
"1509
[; ;ff.c: 1509: }
[e :UE 143 ]
}
"1578
[; ;ff.c: 1578: FRESULT dir_register (
[v _dir_register `(E95 ~T0 @X0 1 sf1`*S3 ]
"1581
[; ;ff.c: 1581: {
{
[e :U _dir_register ]
"1579
[; ;ff.c: 1579:  DIR* dp
[v _dp `*S3 ~T0 @X0 1 r1 ]
"1581
[; ;ff.c: 1581: {
[f ]
"1582
[; ;ff.c: 1582:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"1629
[; ;ff.c: 1629:  res = dir_alloc(dp, 1);
[e = _res ( _dir_alloc (2 , _dp -> -> 1 `i `us ]
"1632
[; ;ff.c: 1632:  if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 152  ]
{
"1633
[; ;ff.c: 1633:   res = move_window(dp->fs, dp->sect);
[e = _res ( _move_window (2 , . *U _dp 0 . *U _dp 5 ]
"1634
[; ;ff.c: 1634:   if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 153  ]
{
"1635
[; ;ff.c: 1635:    mem_set(dp->dir, 0, 32);
[e ( _mem_set (3 , , -> . *U _dp 6 `*v -> 0 `i -> -> 32 `i `us ]
"1636
[; ;ff.c: 1636:    mem_cpy(dp->dir, dp->fn, 11);
[e ( _mem_cpy (3 , , -> . *U _dp 6 `*v -> . *U _dp 7 `*Cv -> -> 11 `i `us ]
"1640
[; ;ff.c: 1640:    dp->fs->wflag = 1;
[e = . *U . *U _dp 0 4 -> -> 1 `i `uc ]
"1641
[; ;ff.c: 1641:   }
}
[e :U 153 ]
"1642
[; ;ff.c: 1642:  }
}
[e :U 152 ]
"1644
[; ;ff.c: 1644:  return res;
[e ) _res ]
[e $UE 151  ]
"1645
[; ;ff.c: 1645: }
[e :UE 151 ]
}
"1843
[; ;ff.c: 1843: FRESULT create_name (
[v _create_name `(E95 ~T0 @X0 1 sf2`*S3`**Cuc ]
"1847
[; ;ff.c: 1847: {
{
[e :U _create_name ]
"1844
[; ;ff.c: 1844:  DIR* dp,
[v _dp `*S3 ~T0 @X0 1 r1 ]
"1845
[; ;ff.c: 1845:  const TCHAR** path
[v _path `**Cuc ~T0 @X0 1 r2 ]
"1847
[; ;ff.c: 1847: {
[f ]
"1969
[; ;ff.c: 1969:  BYTE b, c, d, *sfn;
[v _b `uc ~T0 @X0 1 a ]
[v _c `uc ~T0 @X0 1 a ]
[v _d `uc ~T0 @X0 1 a ]
[v _sfn `*uc ~T0 @X0 1 a ]
"1970
[; ;ff.c: 1970:  UINT ni, si, i;
[v _ni `us ~T0 @X0 1 a ]
[v _si `us ~T0 @X0 1 a ]
[v _i `us ~T0 @X0 1 a ]
"1971
[; ;ff.c: 1971:  const char *p;
[v _p `*Cuc ~T0 @X0 1 a ]
"1974
[; ;ff.c: 1974:  for (p = *path; *p == '/' || *p == '\\'; p++) ;
{
[e = _p *U _path ]
[e $U 158  ]
[e :U 155 ]
[e ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x ]
[e :U 158 ]
[e $ || == -> *U _p `ui -> 47 `ui == -> *U _p `ui -> 92 `ui 155  ]
[e :U 156 ]
}
"1975
[; ;ff.c: 1975:  sfn = dp->fn;
[e = _sfn . *U _dp 7 ]
"1976
[; ;ff.c: 1976:  mem_set(sfn, ' ', 11);
[e ( _mem_set (3 , , -> _sfn `*v -> -> 32 `ui `i -> -> 11 `i `us ]
"1977
[; ;ff.c: 1977:  si = i = b = 0; ni = 8;
[e = _si = _i -> = _b -> -> 0 `i `uc `us ]
[e = _ni -> -> 8 `i `us ]
"1991
[; ;ff.c: 1991:  for (;;) {
{
[e :U 159 ]
{
"1992
[; ;ff.c: 1992:   c = (BYTE)p[si++];
[e = _c -> *U + _p * -> ++ _si -> -> 1 `i `us `ux -> -> # *U _p `ui `ux `uc ]
"1993
[; ;ff.c: 1993:   if (c <= ' ' || c == '/' || c == '\\') break;
[e $ ! || || <= -> _c `ui -> 32 `ui == -> _c `ui -> 47 `ui == -> _c `ui -> 92 `ui 162  ]
[e $U 160  ]
[e :U 162 ]
"1994
[; ;ff.c: 1994:   if (c == '.' || i >= ni) {
[e $ ! || == -> _c `ui -> 46 `ui >= -> _i `ui -> _ni `ui 163  ]
{
"1995
[; ;ff.c: 1995:    if (ni != 8 || c != '.') return FR_INVALID_NAME;
[e $ ! || != -> _ni `ui -> -> 8 `i `ui != -> _c `ui -> 46 `ui 164  ]
[e ) . `E95 6 ]
[e $UE 154  ]
[e :U 164 ]
"1996
[; ;ff.c: 1996:    i = 8; ni = 11;
[e = _i -> -> 8 `i `us ]
[e = _ni -> -> 11 `i `us ]
"1997
[; ;ff.c: 1997:    b <<= 2; continue;
[e =<< _b -> -> 2 `i `uc ]
[e $U 161  ]
"1998
[; ;ff.c: 1998:   }
}
[e :U 163 ]
"1999
[; ;ff.c: 1999:   if (c >= 0x80) {
[e $ ! >= -> _c `i -> 128 `i 165  ]
{
"2000
[; ;ff.c: 2000:    b |= 3;
[e =| _b -> -> 3 `i `uc ]
"2008
[; ;ff.c: 2008:   }
}
[e :U 165 ]
"2009
[; ;ff.c: 2009:   if ((((BYTE)(c) >= 0x81 && (BYTE)(c) <= 0x9F) || ((BYTE)(c) >= 0xE0 && (BYTE)(c) <= 0xFC))) {
[e $ ! || && >= -> _c `i -> 129 `i <= -> _c `i -> 159 `i && >= -> _c `i -> 224 `i <= -> _c `i -> 252 `i 166  ]
{
"2010
[; ;ff.c: 2010:    d = (BYTE)p[si++];
[e = _d -> *U + _p * -> ++ _si -> -> 1 `i `us `ux -> -> # *U _p `ui `ux `uc ]
"2011
[; ;ff.c: 2011:    if (!(((BYTE)(d) >= 0x40 && (BYTE)(d) <= 0x7E) || ((BYTE)(d) >= 0x80 && (BYTE)(d) <= 0xFC)) || i >= ni - 1)
[e $ ! || ! || && >= -> _d `i -> 64 `i <= -> _d `i -> 126 `i && >= -> _d `i -> 128 `i <= -> _d `i -> 252 `i >= -> _i `ui - -> _ni `ui -> -> 1 `i `ui 167  ]
"2012
[; ;ff.c: 2012:     return FR_INVALID_NAME;
[e ) . `E95 6 ]
[e $UE 154  ]
[e :U 167 ]
"2013
[; ;ff.c: 2013:    sfn[i++] = c;
[e = *U + _sfn * -> ++ _i -> -> 1 `i `us `ux -> -> # *U _sfn `ui `ux _c ]
"2014
[; ;ff.c: 2014:    sfn[i++] = d;
[e = *U + _sfn * -> ++ _i -> -> 1 `i `us `ux -> -> # *U _sfn `ui `ux _d ]
"2015
[; ;ff.c: 2015:   } else {
}
[e $U 168  ]
[e :U 166 ]
{
"2016
[; ;ff.c: 2016:    if (chk_chr("\"*+,:;<=>\?[]|\x7F", c))
[e $ ! != ( _chk_chr (2 , :s 2C -> _c `i -> 0 `i 169  ]
"2017
[; ;ff.c: 2017:     return FR_INVALID_NAME;
[e ) . `E95 6 ]
[e $UE 154  ]
[e :U 169 ]
"2018
[; ;ff.c: 2018:    if ((((c)>='A')&&((c)<='Z'))) {
[e $ ! && >= -> _c `ui -> 65 `ui <= -> _c `ui -> 90 `ui 170  ]
{
"2019
[; ;ff.c: 2019:     b |= 2;
[e =| _b -> -> 2 `i `uc ]
"2020
[; ;ff.c: 2020:    } else {
}
[e $U 171  ]
[e :U 170 ]
{
"2021
[; ;ff.c: 2021:     if ((((c)>='a')&&((c)<='z'))) {
[e $ ! && >= -> _c `ui -> 97 `ui <= -> _c `ui -> 122 `ui 172  ]
{
"2022
[; ;ff.c: 2022:      b |= 1; c -= 0x20;
[e =| _b -> -> 1 `i `uc ]
[e =- _c -> -> 32 `i `uc ]
"2023
[; ;ff.c: 2023:     }
}
[e :U 172 ]
"2024
[; ;ff.c: 2024:    }
}
[e :U 171 ]
"2025
[; ;ff.c: 2025:    sfn[i++] = c;
[e = *U + _sfn * -> ++ _i -> -> 1 `i `us `ux -> -> # *U _sfn `ui `ux _c ]
"2026
[; ;ff.c: 2026:   }
}
[e :U 168 ]
"2027
[; ;ff.c: 2027:  }
}
[e :U 161 ]
[e $U 159  ]
[e :U 160 ]
}
"2028
[; ;ff.c: 2028:  *path = &p[si];
[e = *U _path &U *U + _p * -> _si `ux -> -> # *U _p `ui `ux ]
"2029
[; ;ff.c: 2029:  c = (c <= ' ') ? 0x04 : 0;
[e = _c -> ? <= -> _c `ui -> 32 `ui : -> 4 `i -> 0 `i `uc ]
"2031
[; ;ff.c: 2031:  if (!i) return FR_INVALID_NAME;
[e $ ! ! != -> _i `ui -> -> 0 `i `ui 173  ]
[e ) . `E95 6 ]
[e $UE 154  ]
[e :U 173 ]
"2032
[; ;ff.c: 2032:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
[e $ ! == -> *U + _sfn * -> -> 0 `i `x -> -> # *U _sfn `i `x `i -> 229 `i 174  ]
[e = *U + _sfn * -> -> 0 `i `x -> -> # *U _sfn `i `x -> -> 5 `i `uc ]
[e :U 174 ]
"2034
[; ;ff.c: 2034:  if (ni == 8) b <<= 2;
[e $ ! == -> _ni `ui -> -> 8 `i `ui 175  ]
[e =<< _b -> -> 2 `i `uc ]
[e :U 175 ]
"2035
[; ;ff.c: 2035:  if ((b & 0x03) == 0x01) c |= 0x10;
[e $ ! == & -> _b `i -> 3 `i -> 1 `i 176  ]
[e =| _c -> -> 16 `i `uc ]
[e :U 176 ]
"2036
[; ;ff.c: 2036:  if ((b & 0x0C) == 0x04) c |= 0x08;
[e $ ! == & -> _b `i -> 12 `i -> 4 `i 177  ]
[e =| _c -> -> 8 `i `uc ]
[e :U 177 ]
"2038
[; ;ff.c: 2038:  sfn[11] = c;
[e = *U + _sfn * -> -> 11 `i `x -> -> # *U _sfn `i `x _c ]
"2040
[; ;ff.c: 2040:  return FR_OK;
[e ) . `E95 0 ]
[e $UE 154  ]
"2042
[; ;ff.c: 2042: }
[e :UE 154 ]
}
"2052
[; ;ff.c: 2052: FRESULT follow_path (
[v _follow_path `(E95 ~T0 @X0 1 sf2`*S3`*Cuc ]
"2056
[; ;ff.c: 2056: {
{
[e :U _follow_path ]
"2053
[; ;ff.c: 2053:  DIR* dp,
[v _dp `*S3 ~T0 @X0 1 r1 ]
"2054
[; ;ff.c: 2054:  const TCHAR* path
[v _path `*Cuc ~T0 @X0 1 r2 ]
"2056
[; ;ff.c: 2056: {
[f ]
"2057
[; ;ff.c: 2057:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"2058
[; ;ff.c: 2058:  BYTE *dir, ns;
[v _dir `*uc ~T0 @X0 1 a ]
[v _ns `uc ~T0 @X0 1 a ]
"2068
[; ;ff.c: 2068:  if (*path == '/' || *path == '\\')
[e $ ! || == -> *U _path `ui -> 47 `ui == -> *U _path `ui -> 92 `ui 179  ]
"2069
[; ;ff.c: 2069:   path++;
[e ++ _path * -> -> 1 `i `x -> -> # *U _path `i `x ]
[e :U 179 ]
"2070
[; ;ff.c: 2070:  dp->sclust = 0;
[e = . *U _dp 3 -> -> -> 0 `i `l `ul ]
"2073
[; ;ff.c: 2073:  if ((UINT)*path < ' ') {
[e $ ! < -> -> *U _path `us `ui -> 32 `ui 180  ]
{
"2074
[; ;ff.c: 2074:   res = dir_sdi(dp, 0);
[e = _res ( _dir_sdi (2 , _dp -> -> 0 `i `us ]
"2075
[; ;ff.c: 2075:   dp->dir = 0;
[e = . *U _dp 6 -> -> 0 `i `*uc ]
"2076
[; ;ff.c: 2076:  } else {
}
[e $U 181  ]
[e :U 180 ]
{
"2077
[; ;ff.c: 2077:   for (;;) {
{
[e :U 182 ]
{
"2078
[; ;ff.c: 2078:    res = create_name(dp, &path);
[e = _res ( _create_name (2 , _dp &U _path ]
"2079
[; ;ff.c: 2079:    if (res != FR_OK) break;
[e $ ! != -> _res `ui -> . `E95 0 `ui 185  ]
[e $U 183  ]
[e :U 185 ]
"2080
[; ;ff.c: 2080:    res = dir_find(dp);
[e = _res ( _dir_find (1 _dp ]
"2081
[; ;ff.c: 2081:    ns = dp->fn[11];
[e = _ns *U + . *U _dp 7 * -> -> 11 `i `x -> -> # *U . *U _dp 7 `i `x ]
"2082
[; ;ff.c: 2082:    if (res != FR_OK) {
[e $ ! != -> _res `ui -> . `E95 0 `ui 186  ]
{
"2083
[; ;ff.c: 2083:     if (res == FR_NO_FILE) {
[e $ ! == -> _res `ui -> . `E95 4 `ui 187  ]
{
"2084
[; ;ff.c: 2084:      if (0 && (ns & 0x20)) {
[e $ ! && != -> 0 `i -> 0 `i != & -> _ns `i -> 32 `i -> 0 `i 188  ]
{
"2085
[; ;ff.c: 2085:       dp->sclust = 0; dp->dir = 0;
[e = . *U _dp 3 -> -> -> 0 `i `l `ul ]
[e = . *U _dp 6 -> -> 0 `i `*uc ]
"2086
[; ;ff.c: 2086:       if (!(ns & 0x04)) continue;
[e $ ! ! != & -> _ns `i -> 4 `i -> 0 `i 189  ]
[e $U 184  ]
[e :U 189 ]
"2087
[; ;ff.c: 2087:       res = FR_OK;
[e = _res . `E95 0 ]
"2088
[; ;ff.c: 2088:      } else {
}
[e $U 190  ]
[e :U 188 ]
{
"2089
[; ;ff.c: 2089:       if (!(ns & 0x04)) res = FR_NO_PATH;
[e $ ! ! != & -> _ns `i -> 4 `i -> 0 `i 191  ]
[e = _res . `E95 5 ]
[e :U 191 ]
"2090
[; ;ff.c: 2090:      }
}
[e :U 190 ]
"2091
[; ;ff.c: 2091:     }
}
[e :U 187 ]
"2092
[; ;ff.c: 2092:     break;
[e $U 183  ]
"2093
[; ;ff.c: 2093:    }
}
[e :U 186 ]
"2094
[; ;ff.c: 2094:    if (ns & 0x04) break;
[e $ ! != & -> _ns `i -> 4 `i -> 0 `i 192  ]
[e $U 183  ]
[e :U 192 ]
"2095
[; ;ff.c: 2095:    dir = dp->dir;
[e = _dir . *U _dp 6 ]
"2096
[; ;ff.c: 2096:    if (!(dir[11] & 0x10)) {
[e $ ! ! != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 16 `i -> 0 `i 193  ]
{
"2097
[; ;ff.c: 2097:     res = FR_NO_PATH; break;
[e = _res . `E95 5 ]
[e $U 183  ]
"2098
[; ;ff.c: 2098:    }
}
[e :U 193 ]
"2099
[; ;ff.c: 2099:    dp->sclust = ld_clust(dp->fs, dir);
[e = . *U _dp 3 ( _ld_clust (2 , . *U _dp 0 -> _dir `*Cuc ]
"2100
[; ;ff.c: 2100:   }
}
[e :U 184 ]
[e $U 182  ]
[e :U 183 ]
}
"2101
[; ;ff.c: 2101:  }
}
[e :U 181 ]
"2103
[; ;ff.c: 2103:  return res;
[e ) _res ]
[e $UE 178  ]
"2104
[; ;ff.c: 2104: }
[e :UE 178 ]
}
"2114
[; ;ff.c: 2114: int get_ldnumber (
[v _get_ldnumber `(i ~T0 @X0 1 sf1`**Cuc ]
"2117
[; ;ff.c: 2117: {
{
[e :U _get_ldnumber ]
"2115
[; ;ff.c: 2115:  const TCHAR** path
[v _path `**Cuc ~T0 @X0 1 r1 ]
"2117
[; ;ff.c: 2117: {
[f ]
"2118
[; ;ff.c: 2118:  const TCHAR *tp, *tt;
[v _tp `*Cuc ~T0 @X0 1 a ]
[v _tt `*Cuc ~T0 @X0 1 a ]
"2119
[; ;ff.c: 2119:  UINT i;
[v _i `us ~T0 @X0 1 a ]
"2120
[; ;ff.c: 2120:  int vol = -1;
[v _vol `i ~T0 @X0 1 a ]
[e = _vol -U -> 1 `i ]
"2129
[; ;ff.c: 2129:  if (*path) {
[e $ ! != *U _path -> -> 0 `i `*Cuc 195  ]
{
"2130
[; ;ff.c: 2130:   for (tt = *path; (UINT)*tt >= (0 ? ' ' : '!') && *tt != ':'; tt++) ;
{
[e = _tt *U _path ]
[e $U 199  ]
[e :U 196 ]
[e ++ _tt * -> -> 1 `i `x -> -> # *U _tt `i `x ]
[e :U 199 ]
[e $ && >= -> -> *U _tt `us `ui ? != -> 0 `i -> 0 `i : -> 32 `ui -> 33 `ui != -> *U _tt `ui -> 58 `ui 196  ]
[e :U 197 ]
}
"2131
[; ;ff.c: 2131:   if (*tt == ':') {
[e $ ! == -> *U _tt `ui -> 58 `ui 200  ]
{
"2132
[; ;ff.c: 2132:    tp = *path;
[e = _tp *U _path ]
"2133
[; ;ff.c: 2133:    i = *tp++ - '0';
[e = _i -> - -> *U ++ _tp * -> -> 1 `i `x -> -> # *U _tp `i `x `ui -> 48 `ui `us ]
"2134
[; ;ff.c: 2134:    if (i < 10 && tp == tt) {
[e $ ! && < -> _i `ui -> -> 10 `i `ui == _tp _tt 201  ]
{
"2135
[; ;ff.c: 2135:     if (i < 1) {
[e $ ! < -> _i `ui -> -> 1 `i `ui 202  ]
{
"2136
[; ;ff.c: 2136:      vol = (int)i;
[e = _vol -> _i `i ]
"2137
[; ;ff.c: 2137:      *path = ++tt;
[e = *U _path =+ _tt * -> -> 1 `i `x -> -> # *U _tt `i `x ]
"2138
[; ;ff.c: 2138:     }
}
[e :U 202 ]
"2139
[; ;ff.c: 2139:    }
}
[e :U 201 ]
"2156
[; ;ff.c: 2156:    return vol;
[e ) _vol ]
[e $UE 194  ]
"2157
[; ;ff.c: 2157:   }
}
[e :U 200 ]
"2161
[; ;ff.c: 2161:   vol = 0;
[e = _vol -> 0 `i ]
"2163
[; ;ff.c: 2163:  }
}
[e :U 195 ]
"2164
[; ;ff.c: 2164:  return vol;
[e ) _vol ]
[e $UE 194  ]
"2165
[; ;ff.c: 2165: }
[e :UE 194 ]
}
"2175
[; ;ff.c: 2175: BYTE check_fs (
[v _check_fs `(uc ~T0 @X0 1 sf2`*S1`ul ]
"2179
[; ;ff.c: 2179: {
{
[e :U _check_fs ]
"2176
[; ;ff.c: 2176:  FATFS* fs,
[v _fs `*S1 ~T0 @X0 1 r1 ]
"2177
[; ;ff.c: 2177:  DWORD sect
[v _sect `ul ~T0 @X0 1 r2 ]
"2179
[; ;ff.c: 2179: {
[f ]
"2180
[; ;ff.c: 2180:  fs->wflag = 0; fs->winsect = 0xFFFFFFFF;
[e = . *U _fs 4 -> -> 0 `i `uc ]
[e = . *U _fs 16 -> 4294967295 `ul ]
"2181
[; ;ff.c: 2181:  if (move_window(fs, sect) != FR_OK)
[e $ ! != -> ( _move_window (2 , _fs _sect `ui -> . `E95 0 `ui 204  ]
"2182
[; ;ff.c: 2182:   return 3;
[e ) -> -> 3 `i `uc ]
[e $UE 203  ]
[e :U 204 ]
"2184
[; ;ff.c: 2184:  if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
[e $ ! != -> *U -> &U *U + &U . *U _fs 17 * -> -> -> 510 `i `ui `ux -> -> # *U &U . *U _fs 17 `ui `ux `*us `ui -> 43605 `ui 205  ]
"2185
[; ;ff.c: 2185:   return 2;
[e ) -> -> 2 `i `uc ]
[e $UE 203  ]
[e :U 205 ]
"2187
[; ;ff.c: 2187:  if (((DWORD)(*(DWORD*)(BYTE*)(&fs->win[54])) & 0xFFFFFF) == 0x544146)
[e $ ! == & *U -> &U *U + &U . *U _fs 17 * -> -> -> 54 `i `ui `ux -> -> # *U &U . *U _fs 17 `ui `ux `*ul -> -> 16777215 `l `ul -> -> 5521734 `l `ul 206  ]
"2188
[; ;ff.c: 2188:   return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 203  ]
[e :U 206 ]
"2189
[; ;ff.c: 2189:  if (((DWORD)(*(DWORD*)(BYTE*)(&fs->win[82])) & 0xFFFFFF) == 0x544146)
[e $ ! == & *U -> &U *U + &U . *U _fs 17 * -> -> -> 82 `i `ui `ux -> -> # *U &U . *U _fs 17 `ui `ux `*ul -> -> 16777215 `l `ul -> -> 5521734 `l `ul 207  ]
"2190
[; ;ff.c: 2190:   return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 203  ]
[e :U 207 ]
"2192
[; ;ff.c: 2192:  return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 203  ]
"2193
[; ;ff.c: 2193: }
[e :UE 203 ]
}
"2203
[; ;ff.c: 2203: FRESULT find_volume (
[v _find_volume `(E95 ~T0 @X0 1 sf3`**S1`**Cuc`uc ]
"2208
[; ;ff.c: 2208: {
{
[e :U _find_volume ]
"2204
[; ;ff.c: 2204:  FATFS** rfs,
[v _rfs `**S1 ~T0 @X0 1 r1 ]
"2205
[; ;ff.c: 2205:  const TCHAR** path,
[v _path `**Cuc ~T0 @X0 1 r2 ]
"2206
[; ;ff.c: 2206:  BYTE wmode
[v _wmode `uc ~T0 @X0 1 r3 ]
"2208
[; ;ff.c: 2208: {
[f ]
"2209
[; ;ff.c: 2209:  BYTE fmt, *pt;
[v _fmt `uc ~T0 @X0 1 a ]
[v _pt `*uc ~T0 @X0 1 a ]
"2210
[; ;ff.c: 2210:  int vol;
[v _vol `i ~T0 @X0 1 a ]
"2211
[; ;ff.c: 2211:  DSTATUS stat;
[v _stat `uc ~T0 @X0 1 a ]
"2212
[; ;ff.c: 2212:  DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
[v _bsect `ul ~T0 @X0 1 a ]
[v _fasize `ul ~T0 @X0 1 a ]
[v _tsect `ul ~T0 @X0 1 a ]
[v _sysect `ul ~T0 @X0 1 a ]
[v _nclst `ul ~T0 @X0 1 a ]
[v _szbfat `ul ~T0 @X0 1 a ]
[v _br `ul ~T0 @X0 -> 4 `i a ]
"2213
[; ;ff.c: 2213:  WORD nrsv;
[v _nrsv `us ~T0 @X0 1 a ]
"2214
[; ;ff.c: 2214:  FATFS *fs;
[v _fs `*S1 ~T0 @X0 1 a ]
"2215
[; ;ff.c: 2215:  UINT i;
[v _i `us ~T0 @X0 1 a ]
"2219
[; ;ff.c: 2219:  *rfs = 0;
[e = *U _rfs -> -> 0 `i `*S1 ]
"2220
[; ;ff.c: 2220:  vol = get_ldnumber(path);
[e = _vol ( _get_ldnumber (1 _path ]
"2221
[; ;ff.c: 2221:  if (vol < 0) return FR_INVALID_DRIVE;
[e $ ! < _vol -> 0 `i 209  ]
[e ) . `E95 11 ]
[e $UE 208  ]
[e :U 209 ]
"2224
[; ;ff.c: 2224:  fs = FatFs[vol];
[e = _fs *U + &U _FatFs * -> -> _vol `ui `ux -> -> # *U &U _FatFs `ui `ux ]
"2225
[; ;ff.c: 2225:  if (!fs) return FR_NOT_ENABLED;
[e $ ! ! != _fs -> -> 0 `i `*S1 210  ]
[e ) . `E95 12 ]
[e $UE 208  ]
[e :U 210 ]
"2228
[; ;ff.c: 2228:  *rfs = fs;
[e = *U _rfs _fs ]
"2230
[; ;ff.c: 2230:  if (fs->fs_type) {
[e $ ! != -> . *U _fs 0 `i -> 0 `i 211  ]
{
"2231
[; ;ff.c: 2231:   stat = disk_status(fs->drv);
[e = _stat ( _disk_status (1 . *U _fs 1 ]
"2232
[; ;ff.c: 2232:   if (!(stat & 0x01)) {
[e $ ! ! != & -> _stat `i -> 1 `i -> 0 `i 212  ]
{
"2233
[; ;ff.c: 2233:    if (!0 && wmode && (stat & 0x04))
[e $ ! && && ! != -> 0 `i -> 0 `i != -> _wmode `i -> 0 `i != & -> _stat `i -> 4 `i -> 0 `i 213  ]
"2234
[; ;ff.c: 2234:     return FR_WRITE_PROTECTED;
[e ) . `E95 10 ]
[e $UE 208  ]
[e :U 213 ]
"2235
[; ;ff.c: 2235:    return FR_OK;
[e ) . `E95 0 ]
[e $UE 208  ]
"2236
[; ;ff.c: 2236:   }
}
[e :U 212 ]
"2237
[; ;ff.c: 2237:  }
}
[e :U 211 ]
"2242
[; ;ff.c: 2242:  fs->fs_type = 0;
[e = . *U _fs 0 -> -> 0 `i `uc ]
"2243
[; ;ff.c: 2243:  fs->drv = (BYTE)(vol);
[e = . *U _fs 1 -> _vol `uc ]
"2244
[; ;ff.c: 2244:  stat = disk_initialize(fs->drv);
[e = _stat ( _disk_initialize (1 . *U _fs 1 ]
"2245
[; ;ff.c: 2245:  if (stat & 0x01)
[e $ ! != & -> _stat `i -> 1 `i -> 0 `i 214  ]
"2246
[; ;ff.c: 2246:   return FR_NOT_READY;
[e ) . `E95 3 ]
[e $UE 208  ]
[e :U 214 ]
"2247
[; ;ff.c: 2247:  if (!0 && wmode && (stat & 0x04))
[e $ ! && && ! != -> 0 `i -> 0 `i != -> _wmode `i -> 0 `i != & -> _stat `i -> 4 `i -> 0 `i 215  ]
"2248
[; ;ff.c: 2248:   return FR_WRITE_PROTECTED;
[e ) . `E95 10 ]
[e $UE 208  ]
[e :U 215 ]
"2254
[; ;ff.c: 2254:  bsect = 0;
[e = _bsect -> -> -> 0 `i `l `ul ]
"2255
[; ;ff.c: 2255:  fmt = check_fs(fs, bsect);
[e = _fmt ( _check_fs (2 , _fs _bsect ]
"2256
[; ;ff.c: 2256:  if (fmt == 1 || (!fmt && (0))) {
[e $ ! || == -> _fmt `i -> 1 `i && ! != -> _fmt `i -> 0 `i != -> 0 `i -> 0 `i 216  ]
{
"2257
[; ;ff.c: 2257:   for (i = 0; i < 4; i++) {
{
[e = _i -> -> 0 `i `us ]
[e $ < -> _i `ui -> -> 4 `i `ui 217  ]
[e $U 218  ]
[e :U 217 ]
{
"2258
[; ;ff.c: 2258:    pt = fs->win + 446 + i * 16;
[e = _pt + + &U . *U _fs 17 * -> -> 446 `i `x -> -> # *U &U . *U _fs 17 `i `x * -> * -> _i `ui -> -> 16 `i `ui `ux -> -> # *U + &U . *U _fs 17 * -> -> 446 `i `x -> -> # *U &U . *U _fs 17 `i `x `ui `ux ]
"2259
[; ;ff.c: 2259:    br[i] = pt[4] ? (DWORD)(*(DWORD*)(BYTE*)(&pt[8])) : 0;
[e = *U + &U _br * -> _i `ux -> -> # *U &U _br `ui `ux ? != -> *U + _pt * -> -> 4 `i `x -> -> # *U _pt `i `x `i -> 0 `i : *U -> &U *U + _pt * -> -> 8 `i `x -> -> # *U _pt `i `x `*ul -> -> -> 0 `i `l `ul ]
"2260
[; ;ff.c: 2260:   }
}
[e ++ _i -> -> 1 `i `us ]
[e $ < -> _i `ui -> -> 4 `i `ui 217  ]
[e :U 218 ]
}
"2261
[; ;ff.c: 2261:   i = 0;
[e = _i -> -> 0 `i `us ]
"2262
[; ;ff.c: 2262:   if (i) i--;
[e $ ! != -> _i `ui -> -> 0 `i `ui 220  ]
[e -- _i -> -> 1 `i `us ]
[e :U 220 ]
"2263
[; ;ff.c: 2263:   do {
[e :U 223 ]
{
"2264
[; ;ff.c: 2264:    bsect = br[i];
[e = _bsect *U + &U _br * -> _i `ux -> -> # *U &U _br `ui `ux ]
"2265
[; ;ff.c: 2265:    fmt = bsect ? check_fs(fs, bsect) : 2;
[e = _fmt -> ? != _bsect -> -> -> 0 `i `l `ul : -> ( _check_fs (2 , _fs _bsect `i -> 2 `i `uc ]
"2266
[; ;ff.c: 2266:   } while (!0 && fmt && ++i < 4);
}
[e $ && && ! != -> 0 `i -> 0 `i != -> _fmt `i -> 0 `i < -> =+ _i -> -> 1 `i `us `ui -> -> 4 `i `ui 223  ]
[e :U 222 ]
"2267
[; ;ff.c: 2267:  }
}
[e :U 216 ]
"2268
[; ;ff.c: 2268:  if (fmt == 3) return FR_DISK_ERR;
[e $ ! == -> _fmt `i -> 3 `i 224  ]
[e ) . `E95 1 ]
[e $UE 208  ]
[e :U 224 ]
"2269
[; ;ff.c: 2269:  if (fmt) return FR_NO_FILESYSTEM;
[e $ ! != -> _fmt `i -> 0 `i 225  ]
[e ) . `E95 13 ]
[e $UE 208  ]
[e :U 225 ]
"2273
[; ;ff.c: 2273:  if ((WORD)(*(WORD*)(BYTE*)(fs->win + 11)) != ((UINT)512))
[e $ ! != -> *U -> + &U . *U _fs 17 * -> -> 11 `i `x -> -> # *U &U . *U _fs 17 `i `x `*us `ui -> -> -> 512 `i `us `ui 226  ]
"2274
[; ;ff.c: 2274:   return FR_NO_FILESYSTEM;
[e ) . `E95 13 ]
[e $UE 208  ]
[e :U 226 ]
"2276
[; ;ff.c: 2276:  fasize = (WORD)(*(WORD*)(BYTE*)(fs->win + 22));
[e = _fasize -> *U -> + &U . *U _fs 17 * -> -> 22 `i `x -> -> # *U &U . *U _fs 17 `i `x `*us `ul ]
"2277
[; ;ff.c: 2277:  if (!fasize) fasize = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 36));
[e $ ! ! != _fasize -> -> -> 0 `i `l `ul 227  ]
[e = _fasize *U -> + &U . *U _fs 17 * -> -> 36 `i `x -> -> # *U &U . *U _fs 17 `i `x `*ul ]
[e :U 227 ]
"2278
[; ;ff.c: 2278:  fs->fsize = fasize;
[e = . *U _fs 11 _fasize ]
"2280
[; ;ff.c: 2280:  fs->n_fats = fs->win[16];
[e = . *U _fs 3 *U + &U . *U _fs 17 * -> -> -> 16 `i `ui `ux -> -> # *U &U . *U _fs 17 `ui `ux ]
"2281
[; ;ff.c: 2281:  if (fs->n_fats != 1 && fs->n_fats != 2)
[e $ ! && != -> . *U _fs 3 `i -> 1 `i != -> . *U _fs 3 `i -> 2 `i 228  ]
"2282
[; ;ff.c: 2282:   return FR_NO_FILESYSTEM;
[e ) . `E95 13 ]
[e $UE 208  ]
[e :U 228 ]
"2283
[; ;ff.c: 2283:  fasize *= fs->n_fats;
[e =* _fasize -> . *U _fs 3 `ul ]
"2285
[; ;ff.c: 2285:  fs->csize = fs->win[13];
[e = . *U _fs 2 *U + &U . *U _fs 17 * -> -> -> 13 `i `ui `ux -> -> # *U &U . *U _fs 17 `ui `ux ]
"2286
[; ;ff.c: 2286:  if (!fs->csize || (fs->csize & (fs->csize - 1)))
[e $ ! || ! != -> . *U _fs 2 `i -> 0 `i != & -> . *U _fs 2 `i - -> . *U _fs 2 `i -> 1 `i -> 0 `i 229  ]
"2287
[; ;ff.c: 2287:   return FR_NO_FILESYSTEM;
[e ) . `E95 13 ]
[e $UE 208  ]
[e :U 229 ]
"2289
[; ;ff.c: 2289:  fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(fs->win + 17));
[e = . *U _fs 7 *U -> + &U . *U _fs 17 * -> -> 17 `i `x -> -> # *U &U . *U _fs 17 `i `x `*us ]
"2290
[; ;ff.c: 2290:  if (fs->n_rootdir % (((UINT)512) / 32))
[e $ ! != % -> . *U _fs 7 `ui / -> -> -> 512 `i `us `ui -> -> 32 `i `ui -> -> 0 `i `ui 230  ]
"2291
[; ;ff.c: 2291:   return FR_NO_FILESYSTEM;
[e ) . `E95 13 ]
[e $UE 208  ]
[e :U 230 ]
"2293
[; ;ff.c: 2293:  tsect = (WORD)(*(WORD*)(BYTE*)(fs->win + 19));
[e = _tsect -> *U -> + &U . *U _fs 17 * -> -> 19 `i `x -> -> # *U &U . *U _fs 17 `i `x `*us `ul ]
"2294
[; ;ff.c: 2294:  if (!tsect) tsect = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 32));
[e $ ! ! != _tsect -> -> -> 0 `i `l `ul 231  ]
[e = _tsect *U -> + &U . *U _fs 17 * -> -> 32 `i `x -> -> # *U &U . *U _fs 17 `i `x `*ul ]
[e :U 231 ]
"2296
[; ;ff.c: 2296:  nrsv = (WORD)(*(WORD*)(BYTE*)(fs->win + 14));
[e = _nrsv *U -> + &U . *U _fs 17 * -> -> 14 `i `x -> -> # *U &U . *U _fs 17 `i `x `*us ]
"2297
[; ;ff.c: 2297:  if (!nrsv) return FR_NO_FILESYSTEM;
[e $ ! ! != -> _nrsv `ui -> -> 0 `i `ui 232  ]
[e ) . `E95 13 ]
[e $UE 208  ]
[e :U 232 ]
"2300
[; ;ff.c: 2300:  sysect = nrsv + fasize + fs->n_rootdir / (((UINT)512) / 32);
[e = _sysect + + -> _nrsv `ul _fasize -> / -> . *U _fs 7 `ui / -> -> -> 512 `i `us `ui -> -> 32 `i `ui `ul ]
"2301
[; ;ff.c: 2301:  if (tsect < sysect) return FR_NO_FILESYSTEM;
[e $ ! < _tsect _sysect 233  ]
[e ) . `E95 13 ]
[e $UE 208  ]
[e :U 233 ]
"2302
[; ;ff.c: 2302:  nclst = (tsect - sysect) / fs->csize;
[e = _nclst / - _tsect _sysect -> . *U _fs 2 `ul ]
"2303
[; ;ff.c: 2303:  if (!nclst) return FR_NO_FILESYSTEM;
[e $ ! ! != _nclst -> -> -> 0 `i `l `ul 234  ]
[e ) . `E95 13 ]
[e $UE 208  ]
[e :U 234 ]
"2304
[; ;ff.c: 2304:  fmt = 1;
[e = _fmt -> -> 1 `i `uc ]
"2305
[; ;ff.c: 2305:  if (nclst >= 4086U) fmt = 2;
[e $ ! >= _nclst -> -> 4086 `ui `ul 235  ]
[e = _fmt -> -> 2 `i `uc ]
[e :U 235 ]
"2306
[; ;ff.c: 2306:  if (nclst >= 65526U) fmt = 3;
[e $ ! >= _nclst -> -> 65526 `ui `ul 236  ]
[e = _fmt -> -> 3 `i `uc ]
[e :U 236 ]
"2309
[; ;ff.c: 2309:  fs->n_fatent = nclst + 2;
[e = . *U _fs 10 + _nclst -> -> -> 2 `i `l `ul ]
"2310
[; ;ff.c: 2310:  fs->volbase = bsect;
[e = . *U _fs 12 _bsect ]
"2311
[; ;ff.c: 2311:  fs->fatbase = bsect + nrsv;
[e = . *U _fs 13 + _bsect -> _nrsv `ul ]
"2312
[; ;ff.c: 2312:  fs->database = bsect + sysect;
[e = . *U _fs 15 + _bsect _sysect ]
"2313
[; ;ff.c: 2313:  if (fmt == 3) {
[e $ ! == -> _fmt `i -> 3 `i 237  ]
{
"2314
[; ;ff.c: 2314:   if (fs->n_rootdir) return FR_NO_FILESYSTEM;
[e $ ! != -> . *U _fs 7 `ui -> -> 0 `i `ui 238  ]
[e ) . `E95 13 ]
[e $UE 208  ]
[e :U 238 ]
"2315
[; ;ff.c: 2315:   fs->dirbase = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 44));
[e = . *U _fs 14 *U -> + &U . *U _fs 17 * -> -> 44 `i `x -> -> # *U &U . *U _fs 17 `i `x `*ul ]
"2316
[; ;ff.c: 2316:   szbfat = fs->n_fatent * 4;
[e = _szbfat * . *U _fs 10 -> -> -> 4 `i `l `ul ]
"2317
[; ;ff.c: 2317:  } else {
}
[e $U 239  ]
[e :U 237 ]
{
"2318
[; ;ff.c: 2318:   if (!fs->n_rootdir) return FR_NO_FILESYSTEM;
[e $ ! ! != -> . *U _fs 7 `ui -> -> 0 `i `ui 240  ]
[e ) . `E95 13 ]
[e $UE 208  ]
[e :U 240 ]
"2319
[; ;ff.c: 2319:   fs->dirbase = fs->fatbase + fasize;
[e = . *U _fs 14 + . *U _fs 13 _fasize ]
"2320
[; ;ff.c: 2320:   szbfat = (fmt == 2) ?
[e = _szbfat ? == -> _fmt `i -> 2 `i : * . *U _fs 10 -> -> -> 2 `i `l `ul + / * . *U _fs 10 -> -> -> 3 `i `l `ul -> -> -> 2 `i `l `ul & . *U _fs 10 -> -> -> 1 `i `l `ul ]
"2322
[; ;ff.c: 2322:  }
}
[e :U 239 ]
"2323
[; ;ff.c: 2323:  if (fs->fsize < (szbfat + (((UINT)512) - 1)) / ((UINT)512))
[e $ ! < . *U _fs 11 / + _szbfat -> - -> -> -> 512 `i `us `ui -> -> 1 `i `ui `ul -> -> -> 512 `i `us `ul 241  ]
"2324
[; ;ff.c: 2324:   return FR_NO_FILESYSTEM;
[e ) . `E95 13 ]
[e $UE 208  ]
[e :U 241 ]
"2328
[; ;ff.c: 2328:  fs->last_clust = fs->free_clust = 0xFFFFFFFF;
[e = . *U _fs 8 = . *U _fs 9 -> 4294967295 `ul ]
"2331
[; ;ff.c: 2331:  fs->fsi_flag = 0x80;
[e = . *U _fs 5 -> -> 128 `i `uc ]
"2333
[; ;ff.c: 2333:  if (fmt == 3
[e $ ! && && == -> _fmt `i -> 3 `i == -> *U -> + &U . *U _fs 17 * -> -> 48 `i `x -> -> # *U &U . *U _fs 17 `i `x `*us `ui -> -> 1 `i `ui == -> ( _move_window (2 , _fs + _bsect -> -> -> 1 `i `l `ul `ui -> . `E95 0 `ui 242  ]
"2336
[; ;ff.c: 2336:  {
{
"2337
[; ;ff.c: 2337:   fs->fsi_flag = 0;
[e = . *U _fs 5 -> -> 0 `i `uc ]
"2338
[; ;ff.c: 2338:   if ((WORD)(*(WORD*)(BYTE*)(fs->win + 510)) == 0xAA55
[e $ ! && && == -> *U -> + &U . *U _fs 17 * -> -> 510 `i `x -> -> # *U &U . *U _fs 17 `i `x `*us `ui -> 43605 `ui == *U -> + &U . *U _fs 17 * -> -> 0 `i `x -> -> # *U &U . *U _fs 17 `i `x `*ul -> -> 1096897106 `l `ul == *U -> + &U . *U _fs 17 * -> -> 484 `i `x -> -> # *U &U . *U _fs 17 `i `x `*ul -> -> 1631679090 `l `ul 243  ]
"2341
[; ;ff.c: 2341:   {
{
"2343
[; ;ff.c: 2343:    fs->free_clust = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 488));
[e = . *U _fs 9 *U -> + &U . *U _fs 17 * -> -> 488 `i `x -> -> # *U &U . *U _fs 17 `i `x `*ul ]
"2346
[; ;ff.c: 2346:    fs->last_clust = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 492));
[e = . *U _fs 8 *U -> + &U . *U _fs 17 * -> -> 492 `i `x -> -> # *U &U . *U _fs 17 `i `x `*ul ]
"2348
[; ;ff.c: 2348:   }
}
[e :U 243 ]
"2349
[; ;ff.c: 2349:  }
}
[e :U 242 ]
"2352
[; ;ff.c: 2352:  fs->fs_type = fmt;
[e = . *U _fs 0 _fmt ]
"2353
[; ;ff.c: 2353:  fs->id = ++Fsid;
[e = . *U _fs 6 =+ _Fsid -> -> 1 `i `us ]
"2361
[; ;ff.c: 2361:  return FR_OK;
[e ) . `E95 0 ]
[e $UE 208  ]
"2362
[; ;ff.c: 2362: }
[e :UE 208 ]
}
"2372
[; ;ff.c: 2372: FRESULT validate (
[v _validate `(E95 ~T0 @X0 1 sf1`*v ]
"2375
[; ;ff.c: 2375: {
{
[e :U _validate ]
"2373
[; ;ff.c: 2373:  void* obj
[v _obj `*v ~T0 @X0 1 r1 ]
"2375
[; ;ff.c: 2375: {
[f ]
"2376
[; ;ff.c: 2376:  FIL *fil = (FIL*)obj;
[v _fil `*S2 ~T0 @X0 1 a ]
[e = _fil -> _obj `*S2 ]
"2379
[; ;ff.c: 2379:  if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id || (disk_status(fil->fs->drv) & 0x01))
[e $ ! || || || || ! != _fil -> -> 0 `i `*S2 ! != . *U _fil 0 -> -> 0 `i `*S1 ! != -> . *U . *U _fil 0 0 `i -> 0 `i != -> . *U . *U _fil 0 6 `ui -> . *U _fil 1 `ui != & -> ( _disk_status (1 . *U . *U _fil 0 1 `i -> 1 `i -> 0 `i 245  ]
"2380
[; ;ff.c: 2380:   return FR_INVALID_OBJECT;
[e ) . `E95 9 ]
[e $UE 244  ]
[e :U 245 ]
"2384
[; ;ff.c: 2384:  return FR_OK;
[e ) . `E95 0 ]
[e $UE 244  ]
"2385
[; ;ff.c: 2385: }
[e :UE 244 ]
}
"2402
[; ;ff.c: 2402: FRESULT f_mount (
[v _f_mount `(E95 ~T0 @X0 1 ef3`*S1`*Cuc`uc ]
"2407
[; ;ff.c: 2407: {
{
[e :U _f_mount ]
"2403
[; ;ff.c: 2403:  FATFS* fs,
[v _fs `*S1 ~T0 @X0 1 r1 ]
"2404
[; ;ff.c: 2404:  const TCHAR* path,
[v _path `*Cuc ~T0 @X0 1 r2 ]
"2405
[; ;ff.c: 2405:  BYTE opt
[v _opt `uc ~T0 @X0 1 r3 ]
"2407
[; ;ff.c: 2407: {
[f ]
"2408
[; ;ff.c: 2408:  FATFS *cfs;
[v _cfs `*S1 ~T0 @X0 1 a ]
"2409
[; ;ff.c: 2409:  int vol;
[v _vol `i ~T0 @X0 1 a ]
"2410
[; ;ff.c: 2410:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"2411
[; ;ff.c: 2411:  const TCHAR *rp = path;
[v _rp `*Cuc ~T0 @X0 1 a ]
[e = _rp _path ]
"2414
[; ;ff.c: 2414:  vol = get_ldnumber(&rp);
[e = _vol ( _get_ldnumber (1 &U _rp ]
"2415
[; ;ff.c: 2415:  if (vol < 0) return FR_INVALID_DRIVE;
[e $ ! < _vol -> 0 `i 247  ]
[e ) . `E95 11 ]
[e $UE 246  ]
[e :U 247 ]
"2416
[; ;ff.c: 2416:  cfs = FatFs[vol];
[e = _cfs *U + &U _FatFs * -> -> _vol `ui `ux -> -> # *U &U _FatFs `ui `ux ]
"2418
[; ;ff.c: 2418:  if (cfs) {
[e $ ! != _cfs -> -> 0 `i `*S1 248  ]
{
"2425
[; ;ff.c: 2425:   cfs->fs_type = 0;
[e = . *U _cfs 0 -> -> 0 `i `uc ]
"2426
[; ;ff.c: 2426:  }
}
[e :U 248 ]
"2428
[; ;ff.c: 2428:  if (fs) {
[e $ ! != _fs -> -> 0 `i `*S1 249  ]
{
"2429
[; ;ff.c: 2429:   fs->fs_type = 0;
[e = . *U _fs 0 -> -> 0 `i `uc ]
"2433
[; ;ff.c: 2433:  }
}
[e :U 249 ]
"2434
[; ;ff.c: 2434:  FatFs[vol] = fs;
[e = *U + &U _FatFs * -> -> _vol `ui `ux -> -> # *U &U _FatFs `ui `ux _fs ]
"2436
[; ;ff.c: 2436:  if (!fs || opt != 1) return FR_OK;
[e $ ! || ! != _fs -> -> 0 `i `*S1 != -> _opt `i -> 1 `i 250  ]
[e ) . `E95 0 ]
[e $UE 246  ]
[e :U 250 ]
"2438
[; ;ff.c: 2438:  res = find_volume(&fs, &path, 0);
[e = _res ( _find_volume (3 , , &U _fs &U _path -> -> 0 `i `uc ]
"2439
[; ;ff.c: 2439:  return res;
[e ) _res ]
[e $UE 246  ]
"2440
[; ;ff.c: 2440: }
[e :UE 246 ]
}
"2449
[; ;ff.c: 2449: FRESULT f_open (
[v _f_open `(E95 ~T0 @X0 1 ef3`*S2`*Cuc`uc ]
"2454
[; ;ff.c: 2454: {
{
[e :U _f_open ]
"2450
[; ;ff.c: 2450:  FIL* fp,
[v _fp `*S2 ~T0 @X0 1 r1 ]
"2451
[; ;ff.c: 2451:  const TCHAR* path,
[v _path `*Cuc ~T0 @X0 1 r2 ]
"2452
[; ;ff.c: 2452:  BYTE mode
[v _mode `uc ~T0 @X0 1 r3 ]
"2454
[; ;ff.c: 2454: {
[f ]
"2455
[; ;ff.c: 2455:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"2456
[; ;ff.c: 2456:  DIR dj;
[v _dj `S3 ~T0 @X0 1 a ]
"2457
[; ;ff.c: 2457:  BYTE *dir;
[v _dir `*uc ~T0 @X0 1 a ]
"2458
[; ;ff.c: 2458:  BYTE sfn[12];
[v _sfn `uc ~T0 @X0 -> 12 `i a ]
"2460
[; ;ff.c: 2460:  DWORD dw, cl;
[v _dw `ul ~T0 @X0 1 a ]
[v _cl `ul ~T0 @X0 1 a ]
"2464
[; ;ff.c: 2464:  if (!fp) return FR_INVALID_OBJECT;
[e $ ! ! != _fp -> -> 0 `i `*S2 252  ]
[e ) . `E95 9 ]
[e $UE 251  ]
[e :U 252 ]
"2465
[; ;ff.c: 2465:  fp->fs = 0;
[e = . *U _fp 0 -> -> 0 `i `*S1 ]
"2468
[; ;ff.c: 2468:  dj.fs = FatFs[0];
[e = . _dj 0 *U + &U _FatFs * -> -> -> 0 `i `ui `ux -> -> # *U &U _FatFs `ui `ux ]
"2473
[; ;ff.c: 2473:  mode &= 0x01 | 0x02 | 0x08 | 0x10 | 0x04;
[e =& _mode -> | | | | -> 1 `i -> 2 `i -> 8 `i -> 16 `i -> 4 `i `uc ]
"2474
[; ;ff.c: 2474:  res = find_volume(&dj.fs, &path, (BYTE)(mode & ~0x01));
[e = _res ( _find_volume (3 , , &U . _dj 0 &U _path -> & -> _mode `i ~ -> 1 `i `uc ]
"2479
[; ;ff.c: 2479:  if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 253  ]
{
"2480
[; ;ff.c: 2480:   (dj).fn = sfn;
[e = . _dj 7 &U _sfn ]
"2481
[; ;ff.c: 2481:   res = follow_path(&dj, path);
[e = _res ( _follow_path (2 , &U _dj _path ]
"2482
[; ;ff.c: 2482:   dir = dj.dir;
[e = _dir . _dj 6 ]
"2484
[; ;ff.c: 2484:   if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 254  ]
{
"2485
[; ;ff.c: 2485:    if (!dir)
[e $ ! ! != _dir -> -> 0 `i `*uc 255  ]
"2486
[; ;ff.c: 2486:     res = FR_INVALID_NAME;
[e = _res . `E95 6 ]
[e :U 255 ]
"2491
[; ;ff.c: 2491:   }
}
[e :U 254 ]
"2493
[; ;ff.c: 2493:   if (mode & (0x08 | 0x10 | 0x04)) {
[e $ ! != & -> _mode `i | | -> 8 `i -> 16 `i -> 4 `i -> 0 `i 256  ]
{
"2494
[; ;ff.c: 2494:    if (res != FR_OK) {
[e $ ! != -> _res `ui -> . `E95 0 `ui 257  ]
{
"2495
[; ;ff.c: 2495:     if (res == FR_NO_FILE)
[e $ ! == -> _res `ui -> . `E95 4 `ui 258  ]
"2499
[; ;ff.c: 2499:      res = dir_register(&dj);
[e = _res ( _dir_register (1 &U _dj ]
[e :U 258 ]
"2501
[; ;ff.c: 2501:     mode |= 0x08;
[e =| _mode -> -> 8 `i `uc ]
"2502
[; ;ff.c: 2502:     dir = dj.dir;
[e = _dir . _dj 6 ]
"2503
[; ;ff.c: 2503:    }
}
[e $U 259  ]
"2504
[; ;ff.c: 2504:    else {
[e :U 257 ]
{
"2505
[; ;ff.c: 2505:     if (dir[11] & (0x01 | 0x10)) {
[e $ ! != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i | -> 1 `i -> 16 `i -> 0 `i 260  ]
{
"2506
[; ;ff.c: 2506:      res = FR_DENIED;
[e = _res . `E95 7 ]
"2507
[; ;ff.c: 2507:     } else {
}
[e $U 261  ]
[e :U 260 ]
{
"2508
[; ;ff.c: 2508:      if (mode & 0x04)
[e $ ! != & -> _mode `i -> 4 `i -> 0 `i 262  ]
"2509
[; ;ff.c: 2509:       res = FR_EXIST;
[e = _res . `E95 8 ]
[e :U 262 ]
"2510
[; ;ff.c: 2510:     }
}
[e :U 261 ]
"2511
[; ;ff.c: 2511:    }
}
[e :U 259 ]
"2512
[; ;ff.c: 2512:    if (res == FR_OK && (mode & 0x08)) {
[e $ ! && == -> _res `ui -> . `E95 0 `ui != & -> _mode `i -> 8 `i -> 0 `i 263  ]
{
"2513
[; ;ff.c: 2513:     dw = ((DWORD)(2015 - 1980) << 25 | (DWORD)1 << 21 | (DWORD)1 << 16);
[e = _dw | | << -> - -> 2015 `i -> 1980 `i `ul -> 25 `i << -> -> 1 `i `ul -> 21 `i << -> -> 1 `i `ul -> 16 `i ]
"2514
[; ;ff.c: 2514:     *(DWORD*)(BYTE*)(dir + 14)=(DWORD)(dw);
[e = *U -> + _dir * -> -> 14 `i `x -> -> # *U _dir `i `x `*ul _dw ]
"2515
[; ;ff.c: 2515:     *(DWORD*)(BYTE*)(dir + 22)=(DWORD)(dw);
[e = *U -> + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `*ul _dw ]
"2516
[; ;ff.c: 2516:     dir[11] = 0;
[e = *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x -> -> 0 `i `uc ]
"2517
[; ;ff.c: 2517:     *(DWORD*)(BYTE*)(dir + 28)=(DWORD)(0);
[e = *U -> + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `*ul -> -> 0 `i `ul ]
"2518
[; ;ff.c: 2518:     cl = ld_clust(dj.fs, dir);
[e = _cl ( _ld_clust (2 , . _dj 0 -> _dir `*Cuc ]
"2519
[; ;ff.c: 2519:     st_clust(dir, 0);
[e ( _st_clust (2 , _dir -> -> -> 0 `i `l `ul ]
"2520
[; ;ff.c: 2520:     dj.fs->wflag = 1;
[e = . *U . _dj 0 4 -> -> 1 `i `uc ]
"2521
[; ;ff.c: 2521:     if (cl) {
[e $ ! != _cl -> -> -> 0 `i `l `ul 264  ]
{
"2522
[; ;ff.c: 2522:      dw = dj.fs->winsect;
[e = _dw . *U . _dj 0 16 ]
"2523
[; ;ff.c: 2523:      res = remove_chain(dj.fs, cl);
[e = _res ( _remove_chain (2 , . _dj 0 _cl ]
"2524
[; ;ff.c: 2524:      if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 265  ]
{
"2525
[; ;ff.c: 2525:       dj.fs->last_clust = cl - 1;
[e = . *U . _dj 0 8 - _cl -> -> -> 1 `i `l `ul ]
"2526
[; ;ff.c: 2526:       res = move_window(dj.fs, dw);
[e = _res ( _move_window (2 , . _dj 0 _dw ]
"2527
[; ;ff.c: 2527:      }
}
[e :U 265 ]
"2528
[; ;ff.c: 2528:     }
}
[e :U 264 ]
"2529
[; ;ff.c: 2529:    }
}
[e :U 263 ]
"2530
[; ;ff.c: 2530:   }
}
[e $U 266  ]
"2531
[; ;ff.c: 2531:   else {
[e :U 256 ]
{
"2532
[; ;ff.c: 2532:    if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 267  ]
{
"2533
[; ;ff.c: 2533:     if (dir[11] & 0x10) {
[e $ ! != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 16 `i -> 0 `i 268  ]
{
"2534
[; ;ff.c: 2534:      res = FR_NO_FILE;
[e = _res . `E95 4 ]
"2535
[; ;ff.c: 2535:     } else {
}
[e $U 269  ]
[e :U 268 ]
{
"2536
[; ;ff.c: 2536:      if ((mode & 0x02) && (dir[11] & 0x01))
[e $ ! && != & -> _mode `i -> 2 `i -> 0 `i != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 1 `i -> 0 `i 270  ]
"2537
[; ;ff.c: 2537:       res = FR_DENIED;
[e = _res . `E95 7 ]
[e :U 270 ]
"2538
[; ;ff.c: 2538:     }
}
[e :U 269 ]
"2539
[; ;ff.c: 2539:    }
}
[e :U 267 ]
"2540
[; ;ff.c: 2540:   }
}
[e :U 266 ]
"2541
[; ;ff.c: 2541:   if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 271  ]
{
"2542
[; ;ff.c: 2542:    if (mode & 0x08)
[e $ ! != & -> _mode `i -> 8 `i -> 0 `i 272  ]
"2543
[; ;ff.c: 2543:     mode |= 0x20;
[e =| _mode -> -> 32 `i `uc ]
[e :U 272 ]
"2544
[; ;ff.c: 2544:    fp->dir_sect = dj.fs->winsect;
[e = . *U _fp 9 . *U . _dj 0 16 ]
"2545
[; ;ff.c: 2545:    fp->dir_ptr = dir;
[e = . *U _fp 10 _dir ]
"2550
[; ;ff.c: 2550:   }
}
[e :U 271 ]
"2565
[; ;ff.c: 2565:   if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 273  ]
{
"2566
[; ;ff.c: 2566:    fp->flag = mode;
[e = . *U _fp 2 _mode ]
"2567
[; ;ff.c: 2567:    fp->err = 0;
[e = . *U _fp 3 -> -> 0 `i `uc ]
"2568
[; ;ff.c: 2568:    fp->sclust = ld_clust(dj.fs, dir);
[e = . *U _fp 6 ( _ld_clust (2 , . _dj 0 -> _dir `*Cuc ]
"2569
[; ;ff.c: 2569:    fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(dir + 28));
[e = . *U _fp 5 *U -> + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `*ul ]
"2570
[; ;ff.c: 2570:    fp->fptr = 0;
[e = . *U _fp 4 -> -> -> 0 `i `l `ul ]
"2571
[; ;ff.c: 2571:    fp->dsect = 0;
[e = . *U _fp 8 -> -> -> 0 `i `l `ul ]
"2575
[; ;ff.c: 2575:    fp->fs = dj.fs;
[e = . *U _fp 0 . _dj 0 ]
"2576
[; ;ff.c: 2576:    fp->id = fp->fs->id;
[e = . *U _fp 1 . *U . *U _fp 0 6 ]
"2577
[; ;ff.c: 2577:   }
}
[e :U 273 ]
"2578
[; ;ff.c: 2578:  }
}
[e :U 253 ]
"2580
[; ;ff.c: 2580:  return res;
[e ) _res ]
[e $UE 251  ]
"2581
[; ;ff.c: 2581: }
[e :UE 251 ]
}
"2590
[; ;ff.c: 2590: FRESULT f_read (
[v _f_read `(E95 ~T0 @X0 1 ef4`*S2`*v`us`*us ]
"2596
[; ;ff.c: 2596: {
{
[e :U _f_read ]
"2591
[; ;ff.c: 2591:  FIL* fp,
[v _fp `*S2 ~T0 @X0 1 r1 ]
"2592
[; ;ff.c: 2592:  void* buff,
[v _buff `*v ~T0 @X0 1 r2 ]
"2593
[; ;ff.c: 2593:  UINT btr,
[v _btr `us ~T0 @X0 1 r3 ]
"2594
[; ;ff.c: 2594:  UINT* br
[v _br `*us ~T0 @X0 1 r4 ]
"2596
[; ;ff.c: 2596: {
[f ]
"2597
[; ;ff.c: 2597:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"2598
[; ;ff.c: 2598:  DWORD clst, sect, remain;
[v _clst `ul ~T0 @X0 1 a ]
[v _sect `ul ~T0 @X0 1 a ]
[v _remain `ul ~T0 @X0 1 a ]
"2599
[; ;ff.c: 2599:  UINT rcnt, cc;
[v _rcnt `us ~T0 @X0 1 a ]
[v _cc `us ~T0 @X0 1 a ]
"2600
[; ;ff.c: 2600:  BYTE csect, *rbuff = (BYTE*)buff;
[v _csect `uc ~T0 @X0 1 a ]
[v _rbuff `*uc ~T0 @X0 1 a ]
[e = _rbuff -> _buff `*uc ]
"2603
[; ;ff.c: 2603:  *br = 0;
[e = *U _br -> -> 0 `i `us ]
"2605
[; ;ff.c: 2605:  res = validate(fp);
[e = _res ( _validate (1 -> _fp `*v ]
"2606
[; ;ff.c: 2606:  if (res != FR_OK) return res;
[e $ ! != -> _res `ui -> . `E95 0 `ui 275  ]
[e ) _res ]
[e $UE 274  ]
[e :U 275 ]
"2607
[; ;ff.c: 2607:  if (fp->err)
[e $ ! != -> . *U _fp 3 `i -> 0 `i 276  ]
"2608
[; ;ff.c: 2608:   return (FRESULT)fp->err;
[e ) -> . *U _fp 3 `E95 ]
[e $UE 274  ]
[e :U 276 ]
"2609
[; ;ff.c: 2609:  if (!(fp->flag & 0x01))
[e $ ! ! != & -> . *U _fp 2 `i -> 1 `i -> 0 `i 277  ]
"2610
[; ;ff.c: 2610:   return FR_DENIED;
[e ) . `E95 7 ]
[e $UE 274  ]
[e :U 277 ]
"2611
[; ;ff.c: 2611:  remain = fp->fsize - fp->fptr;
[e = _remain - . *U _fp 5 . *U _fp 4 ]
"2612
[; ;ff.c: 2612:  if (btr > remain) btr = (UINT)remain;
[e $ ! > -> _btr `ul _remain 278  ]
[e = _btr -> _remain `us ]
[e :U 278 ]
"2614
[; ;ff.c: 2614:  for ( ; btr;
{
[e $U 282  ]
[e :U 279 ]
"2615
[; ;ff.c: 2615:   rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
{
"2616
[; ;ff.c: 2616:   if ((fp->fptr % ((UINT)512)) == 0) {
[e $ ! == % . *U _fp 4 -> -> -> 512 `i `us `ul -> -> -> 0 `i `l `ul 283  ]
{
"2617
[; ;ff.c: 2617:    csect = (BYTE)(fp->fptr / ((UINT)512) & (fp->fs->csize - 1));
[e = _csect -> & / . *U _fp 4 -> -> -> 512 `i `us `ul -> -> - -> . *U . *U _fp 0 2 `i -> 1 `i `l `ul `uc ]
"2618
[; ;ff.c: 2618:    if (!csect) {
[e $ ! ! != -> _csect `i -> 0 `i 284  ]
{
"2619
[; ;ff.c: 2619:     if (fp->fptr == 0) {
[e $ ! == . *U _fp 4 -> -> -> 0 `i `l `ul 285  ]
{
"2620
[; ;ff.c: 2620:      clst = fp->sclust;
[e = _clst . *U _fp 6 ]
"2621
[; ;ff.c: 2621:     } else {
}
[e $U 286  ]
[e :U 285 ]
{
"2627
[; ;ff.c: 2627:       clst = get_fat(fp->fs, fp->clust);
[e = _clst ( _get_fat (2 , . *U _fp 0 . *U _fp 7 ]
"2628
[; ;ff.c: 2628:     }
}
[e :U 286 ]
"2629
[; ;ff.c: 2629:     if (clst < 2) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
[e $ ! < _clst -> -> -> 2 `i `l `ul 287  ]
{
[e = . *U _fp 3 -> . `E95 2 `uc ]
[e ) . `E95 2 ]
[e $UE 274  ]
}
[e :U 287 ]
"2630
[; ;ff.c: 2630:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
[e $ ! == _clst -> 4294967295 `ul 288  ]
{
[e = . *U _fp 3 -> . `E95 1 `uc ]
[e ) . `E95 1 ]
[e $UE 274  ]
}
[e :U 288 ]
"2631
[; ;ff.c: 2631:     fp->clust = clst;
[e = . *U _fp 7 _clst ]
"2632
[; ;ff.c: 2632:    }
}
[e :U 284 ]
"2633
[; ;ff.c: 2633:    sect = clust2sect(fp->fs, fp->clust);
[e = _sect ( _clust2sect (2 , . *U _fp 0 . *U _fp 7 ]
"2634
[; ;ff.c: 2634:    if (!sect) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
[e $ ! ! != _sect -> -> -> 0 `i `l `ul 289  ]
{
[e = . *U _fp 3 -> . `E95 2 `uc ]
[e ) . `E95 2 ]
[e $UE 274  ]
}
[e :U 289 ]
"2635
[; ;ff.c: 2635:    sect += csect;
[e =+ _sect -> _csect `ul ]
"2636
[; ;ff.c: 2636:    cc = btr / ((UINT)512);
[e = _cc -> / -> _btr `ui -> -> -> 512 `i `us `ui `us ]
"2637
[; ;ff.c: 2637:    if (cc) {
[e $ ! != -> _cc `ui -> -> 0 `i `ui 290  ]
{
"2638
[; ;ff.c: 2638:     if (csect + cc > fp->fs->csize)
[e $ ! > + -> _csect `ui -> _cc `ui -> . *U . *U _fp 0 2 `ui 291  ]
"2639
[; ;ff.c: 2639:      cc = fp->fs->csize - csect;
[e = _cc -> - -> . *U . *U _fp 0 2 `i -> _csect `i `us ]
[e :U 291 ]
"2640
[; ;ff.c: 2640:     if (disk_read(fp->fs->drv, rbuff, sect, cc) != RES_OK)
[e $ ! != -> ( _disk_read (4 , , , . *U . *U _fp 0 1 _rbuff _sect _cc `ui -> . `E227 0 `ui 292  ]
"2641
[; ;ff.c: 2641:      { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
{
[e = . *U _fp 3 -> . `E95 1 `uc ]
[e ) . `E95 1 ]
[e $UE 274  ]
}
[e :U 292 ]
"2644
[; ;ff.c: 2644:     if (fp->fs->wflag && fp->fs->winsect - sect < cc)
[e $ ! && != -> . *U . *U _fp 0 4 `i -> 0 `i < - . *U . *U _fp 0 16 _sect -> _cc `ul 293  ]
"2645
[; ;ff.c: 2645:      mem_cpy(rbuff + ((fp->fs->winsect - sect) * ((UINT)512)), fp->fs->win, ((UINT)512));
[e ( _mem_cpy (3 , , -> + _rbuff * -> * - . *U . *U _fp 0 16 _sect -> -> -> 512 `i `us `ul `ux -> -> # *U _rbuff `ui `ux `*v -> &U . *U . *U _fp 0 17 `*Cv -> -> 512 `i `us ]
[e :U 293 ]
"2651
[; ;ff.c: 2651:     rcnt = ((UINT)512) * cc;
[e = _rcnt -> * -> -> -> 512 `i `us `ui -> _cc `ui `us ]
"2652
[; ;ff.c: 2652:     continue;
[e $U 281  ]
"2653
[; ;ff.c: 2653:    }
}
[e :U 290 ]
"2667
[; ;ff.c: 2667:    fp->dsect = sect;
[e = . *U _fp 8 _sect ]
"2668
[; ;ff.c: 2668:   }
}
[e :U 283 ]
"2669
[; ;ff.c: 2669:   rcnt = ((UINT)512) - ((UINT)fp->fptr % ((UINT)512));
[e = _rcnt -> - -> -> -> 512 `i `us `ui % -> -> . *U _fp 4 `us `ui -> -> -> 512 `i `us `ui `us ]
"2670
[; ;ff.c: 2670:   if (rcnt > btr) rcnt = btr;
[e $ ! > -> _rcnt `ui -> _btr `ui 294  ]
[e = _rcnt _btr ]
[e :U 294 ]
"2672
[; ;ff.c: 2672:   if (move_window(fp->fs, fp->dsect) != FR_OK)
[e $ ! != -> ( _move_window (2 , . *U _fp 0 . *U _fp 8 `ui -> . `E95 0 `ui 295  ]
"2673
[; ;ff.c: 2673:    { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
{
[e = . *U _fp 3 -> . `E95 1 `uc ]
[e ) . `E95 1 ]
[e $UE 274  ]
}
[e :U 295 ]
"2674
[; ;ff.c: 2674:   mem_cpy(rbuff, &fp->fs->win[fp->fptr % ((UINT)512)], rcnt);
[e ( _mem_cpy (3 , , -> _rbuff `*v -> &U *U + &U . *U . *U _fp 0 17 * -> % . *U _fp 4 -> -> -> 512 `i `us `ul `ux -> -> # *U &U . *U . *U _fp 0 17 `ui `ux `*Cv _rcnt ]
"2678
[; ;ff.c: 2678:  }
}
[e :U 281 ]
[e ; ; ; =+ _rbuff * -> -> _rcnt `ui `ux -> -> # *U _rbuff `ui `ux =+ . *U _fp 4 -> _rcnt `ul =+ *U _br -> _rcnt `us =- _btr -> _rcnt `us ]
[e :U 282 ]
[e $ != -> _btr `ui -> -> 0 `i `ui 279  ]
[e :U 280 ]
}
"2680
[; ;ff.c: 2680:  return FR_OK;
[e ) . `E95 0 ]
[e $UE 274  ]
"2681
[; ;ff.c: 2681: }
[e :UE 274 ]
}
"2691
[; ;ff.c: 2691: FRESULT f_write (
[v _f_write `(E95 ~T0 @X0 1 ef4`*S2`*Cv`us`*us ]
"2697
[; ;ff.c: 2697: {
{
[e :U _f_write ]
"2692
[; ;ff.c: 2692:  FIL* fp,
[v _fp `*S2 ~T0 @X0 1 r1 ]
"2693
[; ;ff.c: 2693:  const void *buff,
[v _buff `*Cv ~T0 @X0 1 r2 ]
"2694
[; ;ff.c: 2694:  UINT btw,
[v _btw `us ~T0 @X0 1 r3 ]
"2695
[; ;ff.c: 2695:  UINT* bw
[v _bw `*us ~T0 @X0 1 r4 ]
"2697
[; ;ff.c: 2697: {
[f ]
"2698
[; ;ff.c: 2698:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"2699
[; ;ff.c: 2699:  DWORD clst, sect;
[v _clst `ul ~T0 @X0 1 a ]
[v _sect `ul ~T0 @X0 1 a ]
"2700
[; ;ff.c: 2700:  UINT wcnt, cc;
[v _wcnt `us ~T0 @X0 1 a ]
[v _cc `us ~T0 @X0 1 a ]
"2701
[; ;ff.c: 2701:  const BYTE *wbuff = (const BYTE*)buff;
[v _wbuff `*Cuc ~T0 @X0 1 a ]
[e = _wbuff -> _buff `*Cuc ]
"2702
[; ;ff.c: 2702:  BYTE csect;
[v _csect `uc ~T0 @X0 1 a ]
"2705
[; ;ff.c: 2705:  *bw = 0;
[e = *U _bw -> -> 0 `i `us ]
"2707
[; ;ff.c: 2707:  res = validate(fp);
[e = _res ( _validate (1 -> _fp `*v ]
"2708
[; ;ff.c: 2708:  if (res != FR_OK) return res;
[e $ ! != -> _res `ui -> . `E95 0 `ui 297  ]
[e ) _res ]
[e $UE 296  ]
[e :U 297 ]
"2709
[; ;ff.c: 2709:  if (fp->err)
[e $ ! != -> . *U _fp 3 `i -> 0 `i 298  ]
"2710
[; ;ff.c: 2710:   return (FRESULT)fp->err;
[e ) -> . *U _fp 3 `E95 ]
[e $UE 296  ]
[e :U 298 ]
"2711
[; ;ff.c: 2711:  if (!(fp->flag & 0x02))
[e $ ! ! != & -> . *U _fp 2 `i -> 2 `i -> 0 `i 299  ]
"2712
[; ;ff.c: 2712:   return FR_DENIED;
[e ) . `E95 7 ]
[e $UE 296  ]
[e :U 299 ]
"2713
[; ;ff.c: 2713:  if (fp->fptr + btw < fp->fptr) btw = 0;
[e $ ! < + . *U _fp 4 -> _btw `ul . *U _fp 4 300  ]
[e = _btw -> -> 0 `i `us ]
[e :U 300 ]
"2715
[; ;ff.c: 2715:  for ( ; btw;
{
[e $U 304  ]
[e :U 301 ]
"2716
[; ;ff.c: 2716:   wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
{
"2717
[; ;ff.c: 2717:   if ((fp->fptr % ((UINT)512)) == 0) {
[e $ ! == % . *U _fp 4 -> -> -> 512 `i `us `ul -> -> -> 0 `i `l `ul 305  ]
{
"2718
[; ;ff.c: 2718:    csect = (BYTE)(fp->fptr / ((UINT)512) & (fp->fs->csize - 1));
[e = _csect -> & / . *U _fp 4 -> -> -> 512 `i `us `ul -> -> - -> . *U . *U _fp 0 2 `i -> 1 `i `l `ul `uc ]
"2719
[; ;ff.c: 2719:    if (!csect) {
[e $ ! ! != -> _csect `i -> 0 `i 306  ]
{
"2720
[; ;ff.c: 2720:     if (fp->fptr == 0) {
[e $ ! == . *U _fp 4 -> -> -> 0 `i `l `ul 307  ]
{
"2721
[; ;ff.c: 2721:      clst = fp->sclust;
[e = _clst . *U _fp 6 ]
"2722
[; ;ff.c: 2722:      if (clst == 0)
[e $ ! == _clst -> -> -> 0 `i `l `ul 308  ]
"2723
[; ;ff.c: 2723:       clst = create_chain(fp->fs, 0);
[e = _clst ( _create_chain (2 , . *U _fp 0 -> -> -> 0 `i `l `ul ]
[e :U 308 ]
"2724
[; ;ff.c: 2724:     } else {
}
[e $U 309  ]
[e :U 307 ]
{
"2730
[; ;ff.c: 2730:       clst = create_chain(fp->fs, fp->clust);
[e = _clst ( _create_chain (2 , . *U _fp 0 . *U _fp 7 ]
"2731
[; ;ff.c: 2731:     }
}
[e :U 309 ]
"2732
[; ;ff.c: 2732:     if (clst == 0) break;
[e $ ! == _clst -> -> -> 0 `i `l `ul 310  ]
[e $U 302  ]
[e :U 310 ]
"2733
[; ;ff.c: 2733:     if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
[e $ ! == _clst -> -> -> 1 `i `l `ul 311  ]
{
[e = . *U _fp 3 -> . `E95 2 `uc ]
[e ) . `E95 2 ]
[e $UE 296  ]
}
[e :U 311 ]
"2734
[; ;ff.c: 2734:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
[e $ ! == _clst -> 4294967295 `ul 312  ]
{
[e = . *U _fp 3 -> . `E95 1 `uc ]
[e ) . `E95 1 ]
[e $UE 296  ]
}
[e :U 312 ]
"2735
[; ;ff.c: 2735:     fp->clust = clst;
[e = . *U _fp 7 _clst ]
"2736
[; ;ff.c: 2736:     if (fp->sclust == 0) fp->sclust = clst;
[e $ ! == . *U _fp 6 -> -> -> 0 `i `l `ul 313  ]
[e = . *U _fp 6 _clst ]
[e :U 313 ]
"2737
[; ;ff.c: 2737:    }
}
[e :U 306 ]
"2739
[; ;ff.c: 2739:    if (fp->fs->winsect == fp->dsect && sync_window(fp->fs))
[e $ ! && == . *U . *U _fp 0 16 . *U _fp 8 != -> ( _sync_window (1 . *U _fp 0 `ui -> -> 0 `i `ui 314  ]
"2740
[; ;ff.c: 2740:     { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
{
[e = . *U _fp 3 -> . `E95 1 `uc ]
[e ) . `E95 1 ]
[e $UE 296  ]
}
[e :U 314 ]
"2748
[; ;ff.c: 2748:    sect = clust2sect(fp->fs, fp->clust);
[e = _sect ( _clust2sect (2 , . *U _fp 0 . *U _fp 7 ]
"2749
[; ;ff.c: 2749:    if (!sect) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
[e $ ! ! != _sect -> -> -> 0 `i `l `ul 315  ]
{
[e = . *U _fp 3 -> . `E95 2 `uc ]
[e ) . `E95 2 ]
[e $UE 296  ]
}
[e :U 315 ]
"2750
[; ;ff.c: 2750:    sect += csect;
[e =+ _sect -> _csect `ul ]
"2751
[; ;ff.c: 2751:    cc = btw / ((UINT)512);
[e = _cc -> / -> _btw `ui -> -> -> 512 `i `us `ui `us ]
"2752
[; ;ff.c: 2752:    if (cc) {
[e $ ! != -> _cc `ui -> -> 0 `i `ui 316  ]
{
"2753
[; ;ff.c: 2753:     if (csect + cc > fp->fs->csize)
[e $ ! > + -> _csect `ui -> _cc `ui -> . *U . *U _fp 0 2 `ui 317  ]
"2754
[; ;ff.c: 2754:      cc = fp->fs->csize - csect;
[e = _cc -> - -> . *U . *U _fp 0 2 `i -> _csect `i `us ]
[e :U 317 ]
"2755
[; ;ff.c: 2755:     if (disk_write(fp->fs->drv, wbuff, sect, cc) != RES_OK)
[e $ ! != -> ( _disk_write (4 , , , . *U . *U _fp 0 1 _wbuff _sect _cc `ui -> . `E227 0 `ui 318  ]
"2756
[; ;ff.c: 2756:      { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
{
[e = . *U _fp 3 -> . `E95 1 `uc ]
[e ) . `E95 1 ]
[e $UE 296  ]
}
[e :U 318 ]
"2759
[; ;ff.c: 2759:     if (fp->fs->winsect - sect < cc) {
[e $ ! < - . *U . *U _fp 0 16 _sect -> _cc `ul 319  ]
{
"2760
[; ;ff.c: 2760:      mem_cpy(fp->fs->win, wbuff + ((fp->fs->winsect - sect) * ((UINT)512)), ((UINT)512));
[e ( _mem_cpy (3 , , -> &U . *U . *U _fp 0 17 `*v -> + _wbuff * -> * - . *U . *U _fp 0 16 _sect -> -> -> 512 `i `us `ul `ux -> -> # *U _wbuff `ui `ux `*Cv -> -> 512 `i `us ]
"2761
[; ;ff.c: 2761:      fp->fs->wflag = 0;
[e = . *U . *U _fp 0 4 -> -> 0 `i `uc ]
"2762
[; ;ff.c: 2762:     }
}
[e :U 319 ]
"2770
[; ;ff.c: 2770:     wcnt = ((UINT)512) * cc;
[e = _wcnt -> * -> -> -> 512 `i `us `ui -> _cc `ui `us ]
"2771
[; ;ff.c: 2771:     continue;
[e $U 303  ]
"2772
[; ;ff.c: 2772:    }
}
[e :U 316 ]
"2774
[; ;ff.c: 2774:    if (fp->fptr >= fp->fsize) {
[e $ ! >= . *U _fp 4 . *U _fp 5 320  ]
{
"2775
[; ;ff.c: 2775:     if (sync_window(fp->fs)) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
[e $ ! != -> ( _sync_window (1 . *U _fp 0 `ui -> -> 0 `i `ui 321  ]
{
[e = . *U _fp 3 -> . `E95 1 `uc ]
[e ) . `E95 1 ]
[e $UE 296  ]
}
[e :U 321 ]
"2776
[; ;ff.c: 2776:     fp->fs->winsect = sect;
[e = . *U . *U _fp 0 16 _sect ]
"2777
[; ;ff.c: 2777:    }
}
[e :U 320 ]
"2785
[; ;ff.c: 2785:    fp->dsect = sect;
[e = . *U _fp 8 _sect ]
"2786
[; ;ff.c: 2786:   }
}
[e :U 305 ]
"2787
[; ;ff.c: 2787:   wcnt = ((UINT)512) - ((UINT)fp->fptr % ((UINT)512));
[e = _wcnt -> - -> -> -> 512 `i `us `ui % -> -> . *U _fp 4 `us `ui -> -> -> 512 `i `us `ui `us ]
"2788
[; ;ff.c: 2788:   if (wcnt > btw) wcnt = btw;
[e $ ! > -> _wcnt `ui -> _btw `ui 322  ]
[e = _wcnt _btw ]
[e :U 322 ]
"2790
[; ;ff.c: 2790:   if (move_window(fp->fs, fp->dsect) != FR_OK)
[e $ ! != -> ( _move_window (2 , . *U _fp 0 . *U _fp 8 `ui -> . `E95 0 `ui 323  ]
"2791
[; ;ff.c: 2791:    { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
{
[e = . *U _fp 3 -> . `E95 1 `uc ]
[e ) . `E95 1 ]
[e $UE 296  ]
}
[e :U 323 ]
"2792
[; ;ff.c: 2792:   mem_cpy(&fp->fs->win[fp->fptr % ((UINT)512)], wbuff, wcnt);
[e ( _mem_cpy (3 , , -> &U *U + &U . *U . *U _fp 0 17 * -> % . *U _fp 4 -> -> -> 512 `i `us `ul `ux -> -> # *U &U . *U . *U _fp 0 17 `ui `ux `*v -> _wbuff `*Cv _wcnt ]
"2793
[; ;ff.c: 2793:   fp->fs->wflag = 1;
[e = . *U . *U _fp 0 4 -> -> 1 `i `uc ]
"2798
[; ;ff.c: 2798:  }
}
[e :U 303 ]
[e ; ; ; =+ _wbuff * -> -> _wcnt `ui `ux -> -> # *U _wbuff `ui `ux =+ . *U _fp 4 -> _wcnt `ul =+ *U _bw -> _wcnt `us =- _btw -> _wcnt `us ]
[e :U 304 ]
[e $ != -> _btw `ui -> -> 0 `i `ui 301  ]
[e :U 302 ]
}
"2800
[; ;ff.c: 2800:  if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
[e $ ! > . *U _fp 4 . *U _fp 5 324  ]
[e = . *U _fp 5 . *U _fp 4 ]
[e :U 324 ]
"2801
[; ;ff.c: 2801:  fp->flag |= 0x20;
[e =| . *U _fp 2 -> -> 32 `i `uc ]
"2803
[; ;ff.c: 2803:  return FR_OK;
[e ) . `E95 0 ]
[e $UE 296  ]
"2804
[; ;ff.c: 2804: }
[e :UE 296 ]
}
"2813
[; ;ff.c: 2813: FRESULT f_sync (
[v _f_sync `(E95 ~T0 @X0 1 ef1`*S2 ]
"2816
[; ;ff.c: 2816: {
{
[e :U _f_sync ]
"2814
[; ;ff.c: 2814:  FIL* fp
[v _fp `*S2 ~T0 @X0 1 r1 ]
"2816
[; ;ff.c: 2816: {
[f ]
"2817
[; ;ff.c: 2817:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"2818
[; ;ff.c: 2818:  DWORD tm;
[v _tm `ul ~T0 @X0 1 a ]
"2819
[; ;ff.c: 2819:  BYTE *dir;
[v _dir `*uc ~T0 @X0 1 a ]
"2822
[; ;ff.c: 2822:  res = validate(fp);
[e = _res ( _validate (1 -> _fp `*v ]
"2823
[; ;ff.c: 2823:  if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 326  ]
{
"2824
[; ;ff.c: 2824:   if (fp->flag & 0x20) {
[e $ ! != & -> . *U _fp 2 `i -> 32 `i -> 0 `i 327  ]
{
"2833
[; ;ff.c: 2833:    res = move_window(fp->fs, fp->dir_sect);
[e = _res ( _move_window (2 , . *U _fp 0 . *U _fp 9 ]
"2834
[; ;ff.c: 2834:    if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 328  ]
{
"2835
[; ;ff.c: 2835:     dir = fp->dir_ptr;
[e = _dir . *U _fp 10 ]
"2836
[; ;ff.c: 2836:     dir[11] |= 0x20;
[e =| *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x -> -> 32 `i `uc ]
"2837
[; ;ff.c: 2837:     *(DWORD*)(BYTE*)(dir + 28)=(DWORD)(fp->fsize);
[e = *U -> + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `*ul . *U _fp 5 ]
"2838
[; ;ff.c: 2838:     st_clust(dir, fp->sclust);
[e ( _st_clust (2 , _dir . *U _fp 6 ]
"2839
[; ;ff.c: 2839:     tm = ((DWORD)(2015 - 1980) << 25 | (DWORD)1 << 21 | (DWORD)1 << 16);
[e = _tm | | << -> - -> 2015 `i -> 1980 `i `ul -> 25 `i << -> -> 1 `i `ul -> 21 `i << -> -> 1 `i `ul -> 16 `i ]
"2840
[; ;ff.c: 2840:     *(DWORD*)(BYTE*)(dir + 22)=(DWORD)(tm);
[e = *U -> + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `*ul _tm ]
"2841
[; ;ff.c: 2841:     *(WORD*)(BYTE*)(dir + 18)=(WORD)(0);
[e = *U -> + _dir * -> -> 18 `i `x -> -> # *U _dir `i `x `*us -> -> 0 `i `us ]
"2842
[; ;ff.c: 2842:     fp->flag &= ~0x20;
[e =& . *U _fp 2 -> ~ -> 32 `i `uc ]
"2843
[; ;ff.c: 2843:     fp->fs->wflag = 1;
[e = . *U . *U _fp 0 4 -> -> 1 `i `uc ]
"2844
[; ;ff.c: 2844:     res = sync_fs(fp->fs);
[e = _res ( _sync_fs (1 . *U _fp 0 ]
"2845
[; ;ff.c: 2845:    }
}
[e :U 328 ]
"2846
[; ;ff.c: 2846:   }
}
[e :U 327 ]
"2847
[; ;ff.c: 2847:  }
}
[e :U 326 ]
"2849
[; ;ff.c: 2849:  return res;
[e ) _res ]
[e $UE 325  ]
"2850
[; ;ff.c: 2850: }
[e :UE 325 ]
}
"2861
[; ;ff.c: 2861: FRESULT f_close (
[v _f_close `(E95 ~T0 @X0 1 ef1`*S2 ]
"2864
[; ;ff.c: 2864: {
{
[e :U _f_close ]
"2862
[; ;ff.c: 2862:  FIL *fp
[v _fp `*S2 ~T0 @X0 1 r1 ]
"2864
[; ;ff.c: 2864: {
[f ]
"2865
[; ;ff.c: 2865:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"2869
[; ;ff.c: 2869:  res = f_sync(fp);
[e = _res ( _f_sync (1 _fp ]
"2870
[; ;ff.c: 2870:  if (res == FR_OK)
[e $ ! == -> _res `ui -> . `E95 0 `ui 330  ]
"2872
[; ;ff.c: 2872:  {
{
"2873
[; ;ff.c: 2873:   res = validate(fp);
[e = _res ( _validate (1 -> _fp `*v ]
"2874
[; ;ff.c: 2874:   if (res == FR_OK) {
[e $ ! == -> _res `ui -> . `E95 0 `ui 331  ]
{
"2882
[; ;ff.c: 2882:     fp->fs = 0;
[e = . *U _fp 0 -> -> 0 `i `*S1 ]
"2886
[; ;ff.c: 2886:   }
}
[e :U 331 ]
"2887
[; ;ff.c: 2887:  }
}
[e :U 330 ]
"2888
[; ;ff.c: 2888:  return res;
[e ) _res ]
[e $UE 329  ]
"2889
[; ;ff.c: 2889: }
[e :UE 329 ]
}
"3033
[; ;ff.c: 3033: FRESULT f_lseek (
[v _f_lseek `(E95 ~T0 @X0 1 ef2`*S2`ul ]
"3037
[; ;ff.c: 3037: {
{
[e :U _f_lseek ]
"3034
[; ;ff.c: 3034:  FIL* fp,
[v _fp `*S2 ~T0 @X0 1 r1 ]
"3035
[; ;ff.c: 3035:  DWORD ofs
[v _ofs `ul ~T0 @X0 1 r2 ]
"3037
[; ;ff.c: 3037: {
[f ]
"3038
[; ;ff.c: 3038:  FRESULT res;
[v _res `E95 ~T0 @X0 1 a ]
"3039
[; ;ff.c: 3039:  DWORD clst, bcs, nsect, ifptr;
[v _clst `ul ~T0 @X0 1 a ]
[v _bcs `ul ~T0 @X0 1 a ]
[v _nsect `ul ~T0 @X0 1 a ]
[v _ifptr `ul ~T0 @X0 1 a ]
"3045
[; ;ff.c: 3045:  res = validate(fp);
[e = _res ( _validate (1 -> _fp `*v ]
"3046
[; ;ff.c: 3046:  if (res != FR_OK) return res;
[e $ ! != -> _res `ui -> . `E95 0 `ui 333  ]
[e ) _res ]
[e $UE 332  ]
[e :U 333 ]
"3047
[; ;ff.c: 3047:  if (fp->err)
[e $ ! != -> . *U _fp 3 `i -> 0 `i 334  ]
"3048
[; ;ff.c: 3048:   return (FRESULT)fp->err;
[e ) -> . *U _fp 3 `E95 ]
[e $UE 332  ]
[e :U 334 ]
"3106
[; ;ff.c: 3106:  {
{
"3107
[; ;ff.c: 3107:   if (ofs > fp->fsize
[e $ ! && > _ofs . *U _fp 5 ! != & -> . *U _fp 2 `i -> 2 `i -> 0 `i 335  ]
"3111
[; ;ff.c: 3111:    ) ofs = fp->fsize;
[e = _ofs . *U _fp 5 ]
[e :U 335 ]
"3113
[; ;ff.c: 3113:   ifptr = fp->fptr;
[e = _ifptr . *U _fp 4 ]
"3114
[; ;ff.c: 3114:   fp->fptr = nsect = 0;
[e = . *U _fp 4 = _nsect -> -> -> 0 `i `l `ul ]
"3115
[; ;ff.c: 3115:   if (ofs) {
[e $ ! != _ofs -> -> -> 0 `i `l `ul 336  ]
{
"3116
[; ;ff.c: 3116:    bcs = (DWORD)fp->fs->csize * ((UINT)512);
[e = _bcs * -> . *U . *U _fp 0 2 `ul -> -> -> 512 `i `us `ul ]
"3117
[; ;ff.c: 3117:    if (ifptr > 0 &&
[e $ ! && > _ifptr -> -> -> 0 `i `l `ul >= / - _ofs -> -> -> 1 `i `l `ul _bcs / - _ifptr -> -> -> 1 `i `l `ul _bcs 337  ]
"3118
[; ;ff.c: 3118:     (ofs - 1) / bcs >= (ifptr - 1) / bcs) {
{
"3119
[; ;ff.c: 3119:     fp->fptr = (ifptr - 1) & ~(bcs - 1);
[e = . *U _fp 4 & - _ifptr -> -> -> 1 `i `l `ul ~ - _bcs -> -> -> 1 `i `l `ul ]
"3120
[; ;ff.c: 3120:     ofs -= fp->fptr;
[e =- _ofs . *U _fp 4 ]
"3121
[; ;ff.c: 3121:     clst = fp->clust;
[e = _clst . *U _fp 7 ]
"3122
[; ;ff.c: 3122:    } else {
}
[e $U 338  ]
[e :U 337 ]
{
"3123
[; ;ff.c: 3123:     clst = fp->sclust;
[e = _clst . *U _fp 6 ]
"3125
[; ;ff.c: 3125:     if (clst == 0) {
[e $ ! == _clst -> -> -> 0 `i `l `ul 339  ]
{
"3126
[; ;ff.c: 3126:      clst = create_chain(fp->fs, 0);
[e = _clst ( _create_chain (2 , . *U _fp 0 -> -> -> 0 `i `l `ul ]
"3127
[; ;ff.c: 3127:      if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
[e $ ! == _clst -> -> -> 1 `i `l `ul 340  ]
{
[e = . *U _fp 3 -> . `E95 2 `uc ]
[e ) . `E95 2 ]
[e $UE 332  ]
}
[e :U 340 ]
"3128
[; ;ff.c: 3128:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
[e $ ! == _clst -> 4294967295 `ul 341  ]
{
[e = . *U _fp 3 -> . `E95 1 `uc ]
[e ) . `E95 1 ]
[e $UE 332  ]
}
[e :U 341 ]
"3129
[; ;ff.c: 3129:      fp->sclust = clst;
[e = . *U _fp 6 _clst ]
"3130
[; ;ff.c: 3130:     }
}
[e :U 339 ]
"3132
[; ;ff.c: 3132:     fp->clust = clst;
[e = . *U _fp 7 _clst ]
"3133
[; ;ff.c: 3133:    }
}
[e :U 338 ]
"3134
[; ;ff.c: 3134:    if (clst != 0) {
[e $ ! != _clst -> -> -> 0 `i `l `ul 342  ]
{
"3135
[; ;ff.c: 3135:     while (ofs > bcs) {
[e $U 343  ]
[e :U 344 ]
{
"3137
[; ;ff.c: 3137:      if (fp->flag & 0x02) {
[e $ ! != & -> . *U _fp 2 `i -> 2 `i -> 0 `i 346  ]
{
"3138
[; ;ff.c: 3138:       clst = create_chain(fp->fs, clst);
[e = _clst ( _create_chain (2 , . *U _fp 0 _clst ]
"3139
[; ;ff.c: 3139:       if (clst == 0) {
[e $ ! == _clst -> -> -> 0 `i `l `ul 347  ]
{
"3140
[; ;ff.c: 3140:        ofs = bcs; break;
[e = _ofs _bcs ]
[e $U 345  ]
"3141
[; ;ff.c: 3141:       }
}
[e :U 347 ]
"3142
[; ;ff.c: 3142:      } else
}
[e $U 348  ]
[e :U 346 ]
"3144
[; ;ff.c: 3144:       clst = get_fat(fp->fs, clst);
[e = _clst ( _get_fat (2 , . *U _fp 0 _clst ]
[e :U 348 ]
"3145
[; ;ff.c: 3145:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
[e $ ! == _clst -> 4294967295 `ul 349  ]
{
[e = . *U _fp 3 -> . `E95 1 `uc ]
[e ) . `E95 1 ]
[e $UE 332  ]
}
[e :U 349 ]
"3146
[; ;ff.c: 3146:      if (clst <= 1 || clst >= fp->fs->n_fatent) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
[e $ ! || <= _clst -> -> -> 1 `i `l `ul >= _clst . *U . *U _fp 0 10 350  ]
{
[e = . *U _fp 3 -> . `E95 2 `uc ]
[e ) . `E95 2 ]
[e $UE 332  ]
}
[e :U 350 ]
"3147
[; ;ff.c: 3147:      fp->clust = clst;
[e = . *U _fp 7 _clst ]
"3148
[; ;ff.c: 3148:      fp->fptr += bcs;
[e =+ . *U _fp 4 _bcs ]
"3149
[; ;ff.c: 3149:      ofs -= bcs;
[e =- _ofs _bcs ]
"3150
[; ;ff.c: 3150:     }
}
[e :U 343 ]
"3135
[; ;ff.c: 3135:     while (ofs > bcs) {
[e $ > _ofs _bcs 344  ]
[e :U 345 ]
"3151
[; ;ff.c: 3151:     fp->fptr += ofs;
[e =+ . *U _fp 4 _ofs ]
"3152
[; ;ff.c: 3152:     if (ofs % ((UINT)512)) {
[e $ ! != % _ofs -> -> -> 512 `i `us `ul -> -> -> 0 `i `l `ul 351  ]
{
"3153
[; ;ff.c: 3153:      nsect = clust2sect(fp->fs, clst);
[e = _nsect ( _clust2sect (2 , . *U _fp 0 _clst ]
"3154
[; ;ff.c: 3154:      if (!nsect) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
[e $ ! ! != _nsect -> -> -> 0 `i `l `ul 352  ]
{
[e = . *U _fp 3 -> . `E95 2 `uc ]
[e ) . `E95 2 ]
[e $UE 332  ]
}
[e :U 352 ]
"3155
[; ;ff.c: 3155:      nsect += ofs / ((UINT)512);
[e =+ _nsect / _ofs -> -> -> 512 `i `us `ul ]
"3156
[; ;ff.c: 3156:     }
}
[e :U 351 ]
"3157
[; ;ff.c: 3157:    }
}
[e :U 342 ]
"3158
[; ;ff.c: 3158:   }
}
[e :U 336 ]
"3159
[; ;ff.c: 3159:   if (fp->fptr % ((UINT)512) && nsect != fp->dsect) {
[e $ ! && != % . *U _fp 4 -> -> -> 512 `i `us `ul -> -> -> 0 `i `l `ul != _nsect . *U _fp 8 353  ]
{
"3171
[; ;ff.c: 3171:    fp->dsect = nsect;
[e = . *U _fp 8 _nsect ]
"3172
[; ;ff.c: 3172:   }
}
[e :U 353 ]
"3174
[; ;ff.c: 3174:   if (fp->fptr > fp->fsize) {
[e $ ! > . *U _fp 4 . *U _fp 5 354  ]
{
"3175
[; ;ff.c: 3175:    fp->fsize = fp->fptr;
[e = . *U _fp 5 . *U _fp 4 ]
"3176
[; ;ff.c: 3176:    fp->flag |= 0x20;
[e =| . *U _fp 2 -> -> 32 `i `uc ]
"3177
[; ;ff.c: 3177:   }
}
[e :U 354 ]
"3179
[; ;ff.c: 3179:  }
}
"3181
[; ;ff.c: 3181:  return res;
[e ) _res ]
[e $UE 332  ]
"3182
[; ;ff.c: 3182: }
[e :UE 332 ]
}
[a 1C 34 42 43 44 58 59 60 61 62 63 91 93 124 127 0 ]
[a 2C 34 42 43 44 58 59 60 61 62 63 91 93 124 127 0 ]
